{%- set prefix = "http://perks-project.eu/data/" -%}
{%- set procedure_id = slugify(obj.title) -%}
{%- set procedure_type = "Procedure" -%}
{%- set procedure_iri = '<' + prefix + procedure_type + '/' + procedure_id + '>' -%}
{%- set user_iri = '<' + prefix + 'user/' + obj.user + '>' -%}

@prefix data: <{{prefix}}> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix vcard: <http://www.w3.org/2006/vcard/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix schema: <https://schema.org/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix adms: <http://www.w3.org/ns/adms#> .
@prefix m4ing: <http://w3id.org/nfdi4ing/metadata4ing#> .
@prefix pplan: <http://purl.org/net/p-plan#> .
@prefix pko: <https://w3id.org/pko#> .
@prefix pko-ind: <https://w3id.org/pko/industry#> .

{# MACRO RENDER REFERENCES #}
{% macro renderReferences(references) %}
  {% for ref in references %}
  dcterms:references [
    dcterms:title """{{ref.title}}""";
    dcterms:format <http://publications.europa.eu/resource/authority/file-type/{{ref.format}}> ;
    {% if ref.resource %}
    {% if ref.resource.key == "Local" %}
    dcat:accessURL <{{remote_url}}{{ref.resource.attachment.url}}> ;
    {% elif ref.resource.key == "Image" %}
    dcat:accessURL <{{remote_url}}{{ref.resource.url}}> ;
    {% else %}
    dcat:accessURL <{{ref.resource.url}}> ;
    {% endif %}
    {% endif %}
    a dcat:Resource
  ] ;
  {% endfor %}
{% endmacro %}

{# MACRO RENDER FUNCTIONS #}
{% macro renderFunction(function) %}
{%- set function_iri = '<' + prefix + 'Function/' + slugify(function.title) + '>' -%}
{{function_iri | safe}} a pko:Function ;
  dcterms:title "{{function.title}}"^^xsd:string .
{% endmacro %}

{# MACRO RENDER ACTIONS #}
{% macro renderAction(action) %}
{%- set action_iri = '<' + prefix + 'Action/' + slugify(action.title) + '>' -%}
{{action_iri | safe}} a pko:Action ;
  dcterms:title "{{action.title}}"^^xsd:string .
{% endmacro %}

{# MACRO RENDER INPUT/OUTPUT VARIABLES #}
{% macro renderVar(var) %}
{%- set var_iri = '<' + prefix + 'Variable/' + slugify(var.title) + '>' -%}
{{var_iri | safe}} a pplan:Variable ;
  dcterms:title "{{var.title}}"^^xsd:string .
{% endmacro %}

{# MACRO RENDER STEP #}
{% macro renderStep(step, step_iri, step_id) %}

{% set rendered_step = slugify(step.title) %}

{{step_iri | safe}} 
  dcterms:title "{{step.title}}"^^xsd:string ;
  {% if step.description %}
  dcterms:description """{{step.description}}"""^^xsd:string ;
  {% endif %}

{% if step.isOptional and step.isRepeatablePolicy and not step.isRepeatablePolicy.minRepetitions %}
  pko:minRepetitions 0 ;
{% endif %}

{% if step.isRepeatablePolicy %}
  {% if step.isRepeatablePolicy.minRepetitions %} 
  pko:minRepetitions {{step.isRepeatablePolicy.minRepetitions}} ;
  {% endif %}
  {% if step.isRepeatablePolicy.maxRepetitions %} 
  pko:maxRepetitions {{step.isRepeatablePolicy.maxRepetitions}} ;
  {% endif %}
{% endif %}

{% if step.references %}
{{ renderReferences(step.references) }}
{% endif %}

{% if step.requiresFunction %}
  {% for function in step.requiresFunction %}
  {%- set function_iri = '<' + prefix + 'Function/' + slugify(function.title) + '>' -%}
  pko:requiresFunction {{function_iri | safe}} ;
  {% endfor %}
{% endif %}

{% if step.requiresAction %}
  {% for action in step.requiresAction %}
  {%- set action_iri = '<' + prefix + 'Action/' + slugify(action.title) + '>' -%}
  pko:requiresAction {{action_iri | safe}} ;
  {% endfor %}
{% endif %}

{% if step.hasInputVar %}
  {% for var in step.hasInputVar %}
  {%- set var_iri = '<' + prefix + 'Variable/' + slugify(var.title) + '>' -%}
  pplan:hasInputVar {{var_iri | safe}} ;
  {% endfor %}
{% endif %}

{% if step.hasOutputVar %}
  {% for var in step.hasOutputVar %}
  {%- set var_iri = '<' + prefix + 'Variable/' + slugify(var.title) + '>' -%}
  pplan:hasOutputVar {{var_iri | safe}} ;
  {% endfor %}
{% endif %}

{% if step.hasStepVerification %}
  {% for vf in step.hasStepVerification %}
  pko:hasStepVerification [
    a pko:StepVerification ;
    dcterms:title "{{vf.title}}";
    {% if obj.description %}
    dcterms:description """{{vf.description}}"""^^xsd:string ;
    {% endif %}
  ] ;
  {% endfor %}
{% endif %}

dcterms:identifier "{{slugify(step.title)}}"^^xsd:string .

  {# MULTISTEP #}
  {% if step.hasStep | length > 0 %}
    {# Reference shape #}
    {{step_iri | safe}} <https://vocab.sti2.at/ds/compliesWith> <https://semantify.it/ds/LqnDrczMkpxx> ;
    a pplan:MultiStep .

    {{ renderMultiStep(step.hasStep, step_iri | safe, step_id|string, step.hasStepPolicy) }}
  {% else %}
    {{step_iri | safe}} <https://vocab.sti2.at/ds/compliesWith> <https://semantify.it/ds/gFBlAqMqgdhR> ;
    a pplan:Step .
  {% endif %}

{% if step.hasNextStep | length > 0 %}

  {% if step.nextStepPolicy == 'Alternative' %}

    {% for nextAlternativeStep in step.hasNextStep %}
    {%- set next_step_iri = '<' + prefix + procedure_type + '/' + procedure_id + '/Step/' + slugify(nextAlternativeStep.title) + '>' -%}
    {{step_iri | safe}} pko:nextAlternativeStep {{next_step_iri | safe}} .
    {{procedure_iri | safe}} pko:hasStep {{next_step_iri | safe}} .

    {{ renderStep(nextAlternativeStep, next_step_iri, step_id|string + "." + loop.index|string) }}
    {% endfor %}

  {% else %}
    {{ renderStepSequence(step.hasNextStep, step_iri | safe, step_id|string) }}
  {% endif %}
{% endif %}

{% endmacro %}

{# MACRO RENDER MULTISTEP or PROCEDURE STEPS #}
{# hasStepPolicy is Ordered and Unordered #}
{% macro renderMultiStep(stepSequence, ms_step_iri, starting_step_id, hasStepPolicy) %}

{% for step in stepSequence %}

{%- set c_step_s = loop.index -%}
{%- set c_step_iri = '<' + prefix + procedure_type + '/' + procedure_id + '/Step/' + slugify(step.title) + '>' -%}

{% if hasStepPolicy == "Ordered" %}
  {% if loop.index > 1 %}
  {%- set p_step_s = loop.index - 2 -%}
  {%- set p_step = stepSequence[p_step_s] -%}
  {%- set previous_step_iri = '<' + prefix + procedure_type + '/' + procedure_id + '/Step/' + slugify(p_step.title) + '>' -%}
  {{previous_step_iri | safe}} pko:nextStep {{c_step_iri | safe}} .
  {% else %}
  {{ms_step_iri | safe}} pko:hasFirstStep {{c_step_iri | safe}} .
  {% endif %}
{% endif %}
{{ms_step_iri | safe}} pko:hasStep {{c_step_iri | safe}} .

{% if starting_step_id != "" %}
{{ renderStep( step, c_step_iri, starting_step_id | string + "." + loop.index | string ) }}
{% else %}
{{ renderStep( step, c_step_iri, loop.index ) }}
{% endif %}

{% endfor %}

{% endmacro %}

{# MACRO RENDER STEP SEQUENCE #}
{% macro renderStepSequence(stepSequence, starting_step_iri, starting_step_id) %}

{% for step in stepSequence %}
{% if loop.index > 1 %}
{%- set p_step_s = loop.index - 1 -%}
{%- set p_step = stepSequence[p_step_s] -%}
{%- set previous_step_iri = '<' + prefix + procedure_type + '/' + procedure_id + '/Step/' + slugify(p_step.title) + '>' -%}
{% endif %}

{%- set c_step_s = loop.index -%}
{%- set c_step_iri = '<' + prefix + procedure_type + '/' + procedure_id + '/Step/' + slugify(step.title) + '>' -%}

{{starting_step_iri | safe}} pko:nextStep {{c_step_iri | safe}} .
{{procedure_iri | safe}} pko:hasStep {{c_step_iri | safe}} .

{% if starting_step_id != "" %}
{{ renderStep( step, c_step_iri, starting_step_id | string + "." + loop.index | string ) }}
{% else %}
{{ renderStep( step, c_step_iri, loop.index ) }}
{% endif %}

{% endfor %}

{% endmacro %}

{{procedure_iri | safe}} a pko:Procedure ;
  {# Reference shape #}
  <https://vocab.sti2.at/ds/compliesWith> <https://semantify.it/ds/fcKvHmTCPrxp> ;
  dcterms:title "{{obj.title}}"^^xsd:string ;
  {% if obj.description %}
  dcterms:description """{{obj.description}}"""^^xsd:string ;
  {% endif %}
  {% if obj.isAdoptedBy %}
  pko:isAdoptedBy data:{{slugify(obj.isAdoptedBy)}} ;
  {% endif %}

  {% if obj.versionNumber %}
  pko:versionNumber "{{obj.versionNumber}}"^^xsd:string ;
  {% endif %}
  
  {% if obj.hasProcedureTarget %}
  {% for target in obj.hasProcedureTarget %}
  pko:hasProcedureTarget [
    a pko-ind:Machine ;
    dcterms:title "{{target.title}}"^^xsd:string ;
    pko:hasMachineType data:MachineType\/{{target.machineType | replace(" " , "")}} ;
    prov:atLocation data:Location\/{{target.atLocation | replace(" " , "")}}
  ] ;
  {% endfor %}
	{% endif %}

  {% if obj.references %}
  {{ renderReferences(obj.references) }}
	{% endif %}

  {% if obj.keyword %}
  {% for keyword in obj.keyword %}
  dcat:keyword "{{keyword}}"^^xsd:string ;
  {% endfor %}
	{% endif %}

  dcterms:identifier "{{obj.id}}" ;
  adms:status pko:{{slugify(obj.status) | capitalize }} ;
  dcterms:creator {{user_iri | safe}} ; 
  dcterms:created "{{obj.created}}"^^xsd:dateTime ;
  dcterms:modified "{{obj.modified}}"^^xsd:dateTime .

  {%- set ms_step_iri = procedure_iri | safe -%}
  {%- set starting_step_id = "" -%}
  {{ renderMultiStep(obj.hasStep, ms_step_iri, "", "Ordered") }}