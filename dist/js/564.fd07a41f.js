"use strict";(self["webpackChunkpko_rapid_triples"]=self["webpackChunkpko_rapid_triples"]||[]).push([[564],{44564:function(e,t,r){r.r(t),r.d(t,{BlankNode:function(){return u.PB},DataFactory:function(){return u.Ay},DefaultGraph:function(){return u.yV},EntityIndex:function(){return A},Lexer:function(){return s.A},Literal:function(){return u.uS},NamedNode:function(){return u.Yo},Parser:function(){return n.A},Quad:function(){return u.kO},Reasoner:function(){return q},Store:function(){return k},StoreFactory:function(){return F},StreamParser:function(){return E.A},StreamWriter:function(){return L},Term:function(){return u.x1},Triple:function(){return u.n7},Util:function(){return i},Variable:function(){return u.rT},Writer:function(){return x},default:function(){return M},getRulesFromDataset:function(){return G},termFromId:function(){return u.iN},termToId:function(){return u.FL}});var i={};r.r(i),r.d(i,{inDefaultGraph:function(){return f},isBlankNode:function(){return c},isDefaultGraph:function(){return l},isLiteral:function(){return h},isNamedNode:function(){return a},isVariable:function(){return d},prefix:function(){return _},prefixes:function(){return p}});var s=r(3524),n=r(33291),o=r(65852),u=r(28612);function a(e){return!!e&&"NamedNode"===e.termType}function c(e){return!!e&&"BlankNode"===e.termType}function h(e){return!!e&&"Literal"===e.termType}function d(e){return!!e&&"Variable"===e.termType}function l(e){return!!e&&"DefaultGraph"===e.termType}function f(e){return l(e.graph)}function _(e,t){return p({"":e.value||e},t)("")}function p(e,t){const r=Object.create(null);for(const s in e)i(s,e[s]);function i(e,i){if("string"===typeof i){const s=Object.create(null);r[e]=e=>s[e]||(s[e]=t.namedNode(i+e))}else if(!(e in r))throw new Error(`Unknown prefix: ${e}`);return r[e]}return t=t||u.Ay,i}const b=u.Ay.defaultGraph(),{rdf:m,xsd:j}=o.A,I=/["\\\t\n\r\b\f\u0000-\u0019\ud800-\udbff]/,y=/["\\\t\n\r\b\f\u0000-\u0019]|[\ud800-\udbff][\udc00-\udfff]/g,g={"\\":"\\\\",'"':'\\"',"\t":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};class v extends u.x1{equals(e){return e===this}}class x{constructor(e,t){if(this._prefixRegex=/$0^/,e&&"function"!==typeof e.write&&(t=e,e=null),t=t||{},this._lists=t.lists,e)this._outputStream=e,this._endStream=void 0===t.end||!!t.end;else{let e="";this._outputStream={write(t,r,i){e+=t,i&&i()},end:t=>{t&&t(null,e)}},this._endStream=!0}this._subject=null,/triple|quad/i.test(t.format)?(this._lineMode=!0,this._writeQuad=this._writeQuadLine):(this._lineMode=!1,this._graph=b,this._prefixIRIs=Object.create(null),t.prefixes&&this.addPrefixes(t.prefixes),t.baseIRI&&(this._baseMatcher=new RegExp(`^${N(t.baseIRI)}${t.baseIRI.endsWith("/")?"":"[#?]"}`),this._baseLength=t.baseIRI.length))}get _inDefaultGraph(){return b.equals(this._graph)}_write(e,t){this._outputStream.write(e,"utf8",t)}_writeQuad(e,t,r,i,s){try{i.equals(this._graph)||(this._write((null===this._subject?"":this._inDefaultGraph?".\n":"\n}\n")+(b.equals(i)?"":`${this._encodeIriOrBlank(i)} {\n`)),this._graph=i,this._subject=null),e.equals(this._subject)?t.equals(this._predicate)?this._write(`, ${this._encodeObject(r)}`,s):this._write(`;\n    ${this._encodePredicate(this._predicate=t)} ${this._encodeObject(r)}`,s):this._write(`${(null===this._subject?"":".\n")+this._encodeSubject(this._subject=e)} ${this._encodePredicate(this._predicate=t)} ${this._encodeObject(r)}`,s)}catch(n){s&&s(n)}}_writeQuadLine(e,t,r,i,s){delete this._prefixMatch,this._write(this.quadToString(e,t,r,i),s)}quadToString(e,t,r,i){return`${this._encodeSubject(e)} ${this._encodeIriOrBlank(t)} ${this._encodeObject(r)}${i&&i.value?` ${this._encodeIriOrBlank(i)} .\n`:" .\n"}`}quadsToString(e){let t="";for(const r of e)t+=this.quadToString(r.subject,r.predicate,r.object,r.graph);return t}_encodeSubject(e){return"Quad"===e.termType?this._encodeQuad(e):this._encodeIriOrBlank(e)}_encodeIriOrBlank(e){if("NamedNode"!==e.termType)return this._lists&&e.value in this._lists&&(e=this.list(this._lists[e.value])),"id"in e?e.id:`_:${e.value}`;let t=e.value;this._baseMatcher&&this._baseMatcher.test(t)&&(t=t.substr(this._baseLength)),I.test(t)&&(t=t.replace(y,w));const r=this._prefixRegex.exec(t);return r?r[1]?this._prefixIRIs[r[1]]+r[2]:t:`<${t}>`}_encodeLiteral(e){let t=e.value;if(I.test(t)&&(t=t.replace(y,w)),e.language)return`"${t}"@${e.language}`;if(this._lineMode){if(e.datatype.value===j.string)return`"${t}"`}else switch(e.datatype.value){case j.string:return`"${t}"`;case j.boolean:if("true"===t||"false"===t)return t;break;case j.integer:if(/^[+-]?\d+$/.test(t))return t;break;case j.decimal:if(/^[+-]?\d*\.\d+$/.test(t))return t;break;case j.double:if(/^[+-]?(?:\d+\.\d*|\.?\d+)[eE][+-]?\d+$/.test(t))return t;break}return`"${t}"^^${this._encodeIriOrBlank(e.datatype)}`}_encodePredicate(e){return e.value===m.type?"a":this._encodeIriOrBlank(e)}_encodeObject(e){switch(e.termType){case"Quad":return this._encodeQuad(e);case"Literal":return this._encodeLiteral(e);default:return this._encodeIriOrBlank(e)}}_encodeQuad({subject:e,predicate:t,object:r,graph:i}){return`<<${this._encodeSubject(e)} ${this._encodePredicate(t)} ${this._encodeObject(r)}${l(i)?"":` ${this._encodeIriOrBlank(i)}`}>>`}_blockedWrite(){throw new Error("Cannot write because the writer has been closed.")}addQuad(e,t,r,i,s){void 0===r?this._writeQuad(e.subject,e.predicate,e.object,e.graph,t):"function"===typeof i?this._writeQuad(e,t,r,b,i):this._writeQuad(e,t,r,i||b,s)}addQuads(e){for(let t=0;t<e.length;t++)this.addQuad(e[t])}addPrefix(e,t,r){const i={};i[e]=t,this.addPrefixes(i,r)}addPrefixes(e,t){if(!this._prefixIRIs)return t&&t();let r=!1;for(let i in e){let t=e[i];"string"!==typeof t&&(t=t.value),r=!0,null!==this._subject&&(this._write(this._inDefaultGraph?".\n":"\n}\n"),this._subject=null,this._graph=""),this._prefixIRIs[t]=i+=":",this._write(`@prefix ${i} <${t}>.\n`)}if(r){let e="",t="";for(const r in this._prefixIRIs)e+=e?`|${r}`:r,t+=(t?"|":"")+this._prefixIRIs[r];e=N(e,/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&"),this._prefixRegex=new RegExp(`^(?:${t})[^/]*$|^(${e})([_a-zA-Z0-9][\\-_a-zA-Z0-9]*)$`)}this._write(r?"\n":"",t)}blank(e,t){let r,i,s=e;switch(void 0===e?s=[]:e.termType?s=[{predicate:e,object:t}]:"length"in e||(s=[e]),i=s.length){case 0:return new v("[]");case 1:if(r=s[0],!(r.object instanceof v))return new v(`[ ${this._encodePredicate(r.predicate)} ${this._encodeObject(r.object)} ]`);default:let t="[";for(let n=0;n<i;n++)r=s[n],r.predicate.equals(e)?t+=`, ${this._encodeObject(r.object)}`:(t+=`${(n?";\n  ":"\n  ")+this._encodePredicate(r.predicate)} ${this._encodeObject(r.object)}`,e=r.predicate);return new v(`${t}\n]`)}}list(e){const t=e&&e.length||0,r=new Array(t);for(let i=0;i<t;i++)r[i]=this._encodeObject(e[i]);return new v(`(${r.join(" ")})`)}end(e){null!==this._subject&&(this._write(this._inDefaultGraph?".\n":"\n}\n"),this._subject=null),this._write=this._blockedWrite;let t=e&&((r,i)=>{t=null,e(r,i)});if(this._endStream)try{return this._outputStream.end(t)}catch(r){}t&&t()}}function w(e){let t=g[e];return void 0===t&&(1===e.length?(t=e.charCodeAt(0).toString(16),t="\\u0000".substr(0,6-t.length)+t):(t=(1024*(e.charCodeAt(0)-55296)+e.charCodeAt(1)+9216).toString(16),t="\\U00000000".substr(0,10-t.length)+t)),t}function N(e){return e.replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&")}var T=r(85721);const $=Symbol("iter");function S(e,t,r=4){if(0===r)return Object.assign(e,t);for(const i in t)e[i]=S(e[i]||Object.create(null),t[i],r-1);return e}function Q(e,t,r=4){let i=!1;for(const s in e)if(s in t){const n=0===r?null:Q(e[s],t[s],r-1);if(!1!==n)i=i||Object.create(null),i[s]=n;else if(3===r)return!1}return i}function O(e,t,r=4){let i=!1;for(const s in e)if(s in t){if(0!==r){const n=O(e[s],t[s],r-1);if(!1!==n)i=i||Object.create(null),i[s]=n;else if(3===r)return!1}}else i=i||Object.create(null),i[s]=0===r?null:S({},e[s],r-1);return i}class A{constructor(e={}){this._id=1,this._ids=Object.create(null),this._ids[""]=1,this._entities=Object.create(null),this._entities[1]="",this._blankNodeIndex=0,this._factory=e.factory||u.Ay}_termFromId(e){if("."===e[0]){const t=this._entities,r=e.split("."),i=this._factory.quad(this._termFromId(t[r[1]]),this._termFromId(t[r[2]]),this._termFromId(t[r[3]]),r[4]&&this._termFromId(t[r[4]]));return i}return(0,u.iN)(e,this._factory)}_termToNumericId(e){if("Quad"===e.termType){const t=this._termToNumericId(e.subject),r=this._termToNumericId(e.predicate),i=this._termToNumericId(e.object);let s;return t&&r&&i&&(l(e.graph)||(s=this._termToNumericId(e.graph)))&&this._ids[s?`.${t}.${r}.${i}.${s}`:`.${t}.${r}.${i}`]}return this._ids[(0,u.FL)(e)]}_termToNewNumericId(e){const t=e&&"Quad"===e.termType?`.${this._termToNewNumericId(e.subject)}.${this._termToNewNumericId(e.predicate)}.${this._termToNewNumericId(e.object)}${l(e.graph)?"":`.${this._termToNewNumericId(e.graph)}`}`:(0,u.FL)(e);return this._ids[t]||(this._ids[this._entities[++this._id]=t]=this._id)}createBlankNode(e){let t,r;if(e){t=e=`_:${e}`,r=1;while(this._ids[t])t=e+r++}else do{t="_:b"+this._blankNodeIndex++}while(this._ids[t]);return this._ids[t]=++this._id,this._entities[this._id]=t,this._factory.blankNode(t.substr(2))}}class k{constructor(e,t){this._size=0,this._graphs=Object.create(null),t||!e||e[0]||"function"===typeof e.match||(t=e,e=null),t=t||{},this._factory=t.factory||u.Ay,this._entityIndex=t.entityIndex||new A({factory:this._factory}),this._entities=this._entityIndex._entities,this._termFromId=this._entityIndex._termFromId.bind(this._entityIndex),this._termToNumericId=this._entityIndex._termToNumericId.bind(this._entityIndex),this._termToNewNumericId=this._entityIndex._termToNewNumericId.bind(this._entityIndex),e&&this.addAll(e)}get size(){let e=this._size;if(null!==e)return e;e=0;const t=this._graphs;let r,i;for(const s in t)for(const n in r=t[s].subjects)for(const t in i=r[n])e+=Object.keys(i[t]).length;return this._size=e}_addToIndex(e,t,r,i){const s=e[t]||(e[t]={}),n=s[r]||(s[r]={}),o=i in n;return o||(n[i]=null),!o}_removeFromIndex(e,t,r,i){const s=e[t],n=s[r];delete n[i];for(const o in n)return;delete s[r];for(const o in s)return;delete e[t]}*_findInIndex(e,t,r,i,s,n,o,u){let a,c,h;const d=this._entities,l=this._termFromId(d[u]),f={subject:null,predicate:null,object:null};t&&((a=e,e={})[t]=a[t]);for(const _ in e)if(c=e[_]){f[s]=this._termFromId(d[_]),r&&((a=c,c={})[r]=a[r]);for(const e in c)if(h=c[e]){f[n]=this._termFromId(d[e]);const t=i?i in h?[i]:[]:Object.keys(h);for(let e=0;e<t.length;e++)f[o]=this._termFromId(d[t[e]]),yield this._factory.quad(f.subject,f.predicate,f.object,l)}}}_loop(e,t){for(const r in e)t(r)}_loopByKey0(e,t,r){let i,s;if(i=e[t])for(s in i)r(s)}_loopByKey1(e,t,r){let i,s;for(i in e)s=e[i],s[t]&&r(i)}_loopBy2Keys(e,t,r,i){let s,n,o;if((s=e[t])&&(n=s[r]))for(o in n)i(o)}_countInIndex(e,t,r,i){let s,n,o,u=0;t&&((s=e,e={})[t]=s[t]);for(const a in e)if(n=e[a]){r&&((s=n,n={})[r]=s[r]);for(const e in n)(o=n[e])&&(i?i in o&&u++:u+=Object.keys(o).length)}return u}_getGraphs(e){return e=""===e?1:e&&(this._termToNumericId(e)||-1),"number"!==typeof e?this._graphs:{[e]:this._graphs[e]}}_uniqueEntities(e){const t=Object.create(null);return r=>{r in t||(t[r]=!0,e(this._termFromId(this._entities[r],this._factory)))}}add(e){return this.addQuad(e),this}addQuad(e,t,r,i){t||(i=e.graph,r=e.object,t=e.predicate,e=e.subject),i=i?this._termToNewNumericId(i):1;let s=this._graphs[i];return s||(s=this._graphs[i]={subjects:{},predicates:{},objects:{}},Object.freeze(s)),e=this._termToNewNumericId(e),t=this._termToNewNumericId(t),r=this._termToNewNumericId(r),!!this._addToIndex(s.subjects,e,t,r)&&(this._addToIndex(s.predicates,t,r,e),this._addToIndex(s.objects,r,e,t),this._size=null,!0)}addQuads(e){for(let t=0;t<e.length;t++)this.addQuad(e[t])}delete(e){return this.removeQuad(e),this}has(e,t,r,i){return e&&e.subject&&({subject:e,predicate:t,object:r,graph:i}=e),!this.readQuads(e,t,r,i).next().done}import(e){return e.on("data",(e=>{this.addQuad(e)})),e}removeQuad(e,t,r,i){t||({subject:e,predicate:t,object:r,graph:i}=e),i=i?this._termToNumericId(i):1;const s=this._graphs;let n,o,u;if(!(e=e&&this._termToNumericId(e))||!(t=t&&this._termToNumericId(t))||!(r=r&&this._termToNumericId(r))||!(n=s[i])||!(o=n.subjects[e])||!(u=o[t])||!(r in u))return!1;for(e in this._removeFromIndex(n.subjects,e,t,r),this._removeFromIndex(n.predicates,t,r,e),this._removeFromIndex(n.objects,r,e,t),null!==this._size&&this._size--,n.subjects)return!0;return delete s[i],!0}removeQuads(e){for(let t=0;t<e.length;t++)this.removeQuad(e[t])}remove(e){return e.on("data",(e=>{this.removeQuad(e)})),e}removeMatches(e,t,r,i){const s=new T.Readable({objectMode:!0}),n=this.readQuads(e,t,r,i);return s._read=e=>{while(--e>=0){const{done:e,value:t}=n.next();if(e)return void s.push(null);s.push(t)}},this.remove(s)}deleteGraph(e){return this.removeMatches(null,null,null,e)}getQuads(e,t,r,i){return[...this.readQuads(e,t,r,i)]}*readQuads(e,t,r,i){const s=this._getGraphs(i);let n,o,u,a;if(!(e&&!(o=this._termToNumericId(e))||t&&!(u=this._termToNumericId(t))||r&&!(a=this._termToNumericId(r))))for(const c in s)(n=s[c])&&(o?a?yield*this._findInIndex(n.objects,a,o,u,"object","subject","predicate",c):yield*this._findInIndex(n.subjects,o,u,null,"subject","predicate","object",c):u?yield*this._findInIndex(n.predicates,u,a,null,"predicate","object","subject",c):a?yield*this._findInIndex(n.objects,a,null,null,"object","subject","predicate",c):yield*this._findInIndex(n.subjects,null,null,null,"subject","predicate","object",c))}match(e,t,r,i){return new B(this,e,t,r,i,{entityIndex:this._entityIndex})}countQuads(e,t,r,i){const s=this._getGraphs(i);let n,o,u,a,c=0;if(e&&!(o=this._termToNumericId(e))||t&&!(u=this._termToNumericId(t))||r&&!(a=this._termToNumericId(r)))return 0;for(const h in s)(n=s[h])&&(c+=e?r?this._countInIndex(n.objects,a,o,u):this._countInIndex(n.subjects,o,u,a):t?this._countInIndex(n.predicates,u,a,o):this._countInIndex(n.objects,a,o,u));return c}forEach(e,t,r,i,s){this.some((t=>(e(t,this),!1)),t,r,i,s)}every(e,t,r,i,s){return!this.some((t=>!e(t,this)),t,r,i,s)}some(e,t,r,i,s){for(const n of this.readQuads(t,r,i,s))if(e(n,this))return!0;return!1}getSubjects(e,t,r){const i=[];return this.forSubjects((e=>{i.push(e)}),e,t,r),i}forSubjects(e,t,r,i){const s=this._getGraphs(i);let n,o,u;if(e=this._uniqueEntities(e),!(t&&!(o=this._termToNumericId(t))||r&&!(u=this._termToNumericId(r))))for(i in s)(n=s[i])&&(o?u?this._loopBy2Keys(n.predicates,o,u,e):this._loopByKey1(n.subjects,o,e):u?this._loopByKey0(n.objects,u,e):this._loop(n.subjects,e))}getPredicates(e,t,r){const i=[];return this.forPredicates((e=>{i.push(e)}),e,t,r),i}forPredicates(e,t,r,i){const s=this._getGraphs(i);let n,o,u;if(e=this._uniqueEntities(e),!(t&&!(o=this._termToNumericId(t))||r&&!(u=this._termToNumericId(r))))for(i in s)(n=s[i])&&(o?u?this._loopBy2Keys(n.objects,u,o,e):this._loopByKey0(n.subjects,o,e):u?this._loopByKey1(n.predicates,u,e):this._loop(n.predicates,e))}getObjects(e,t,r){const i=[];return this.forObjects((e=>{i.push(e)}),e,t,r),i}forObjects(e,t,r,i){const s=this._getGraphs(i);let n,o,u;if(e=this._uniqueEntities(e),!(t&&!(o=this._termToNumericId(t))||r&&!(u=this._termToNumericId(r))))for(i in s)(n=s[i])&&(o?u?this._loopBy2Keys(n.subjects,o,u,e):this._loopByKey1(n.objects,o,e):u?this._loopByKey0(n.predicates,u,e):this._loop(n.objects,e))}getGraphs(e,t,r){const i=[];return this.forGraphs((e=>{i.push(e)}),e,t,r),i}forGraphs(e,t,r,i){for(const s in this._graphs)this.some((t=>(e(t.graph),!0)),t,r,i,this._termFromId(this._entities[s]))}createBlankNode(e){return this._entityIndex.createBlankNode(e)}extractLists({remove:e=!1,ignoreErrors:t=!1}={}){const r={},i=t?()=>!0:(e,t)=>{throw new Error(`${e.value} ${t}`)},s=this.getQuads(null,o.A.rdf.rest,o.A.rdf.nil,null),n=e?[...s]:[];return s.forEach((t=>{const s=[];let u,a,c=!1;const h=t.graph;let d=t.subject;while(d&&!c){const e=this.getQuads(null,null,d,null),t=this.getQuads(d,null,null,null);let r,l=null,f=null,_=null;for(let s=0;s<t.length&&!c;s++)r=t[s],r.graph.equals(h)?u?c=i(d,"has non-list arcs out"):r.predicate.value===o.A.rdf.first?l?c=i(d,"has multiple rdf:first arcs"):n.push(l=r):r.predicate.value===o.A.rdf.rest?f?c=i(d,"has multiple rdf:rest arcs"):n.push(f=r):e.length?c=i(d,"can't be subject and object"):(u=r,a="subject"):c=i(d,"not confined to single graph");for(let s=0;s<e.length&&!c;++s)r=e[s],u?c=i(d,"can't have coreferences"):r.predicate.value===o.A.rdf.rest?_?c=i(d,"has incoming rdf:rest arcs"):_=r:(u=r,a="object");l?s.unshift(l.object):c=i(d,"has no list head"),d=_&&_.subject}c?e=!1:u&&(r[u[a].value]=s)})),e&&this.removeQuads(n),r}addAll(e){if(e instanceof B&&(e=e.filtered),Array.isArray(e))this.addQuads(e);else if(e instanceof k&&e._entityIndex===this._entityIndex)0!==e._size&&(this._graphs=S(this._graphs,e._graphs),this._size=null);else for(const t of e)this.add(t);return this}contains(e){if(e instanceof B&&(e=e.filtered),e===this)return!0;if(!(e instanceof k)||this._entityIndex!==e._entityIndex)return e.every((e=>this.has(e)));const t=this._graphs,r=e._graphs;let i,s,n,o,u;for(const a in r){if(!(i=t[a]))return!1;i=i.subjects;for(const e in s=r[a].subjects){if(!(n=i[e]))return!1;for(const t in o=s[e]){if(!(u=n[t]))return!1;for(const e in o[t])if(!(e in u))return!1}}}return!0}deleteMatches(e,t,r,i){for(const s of this.match(e,t,r,i))this.removeQuad(s);return this}difference(e){if(e&&e instanceof B&&(e=e.filtered),e===this)return new k({entityIndex:this._entityIndex});if(e instanceof k&&e._entityIndex===this._entityIndex){const t=new k({entityIndex:this._entityIndex}),r=O(this._graphs,e._graphs);return r&&(t._graphs=r,t._size=null),t}return this.filter((t=>!e.has(t)))}equals(e){return e instanceof B&&(e=e.filtered),e===this||this.size===e.size&&this.contains(e)}filter(e){const t=new k({entityIndex:this._entityIndex});for(const r of this)e(r,this)&&t.add(r);return t}intersection(e){if(e instanceof B&&(e=e.filtered),e===this){const e=new k({entityIndex:this._entityIndex});return e._graphs=S(Object.create(null),this._graphs),e._size=this._size,e}if(e instanceof k&&this._entityIndex===e._entityIndex){const t=new k({entityIndex:this._entityIndex}),r=Q(e._graphs,this._graphs);return r&&(t._graphs=r,t._size=null),t}return this.filter((t=>e.has(t)))}map(e){const t=new k({entityIndex:this._entityIndex});for(const r of this)t.add(e(r,this));return t}reduce(e,t){const r=this.readQuads();let i=void 0===t?r.next().value:t;for(const s of r)i=e(i,s,this);return i}toArray(){return this.getQuads()}toCanonical(){throw new Error("not implemented")}toStream(){return this.match()}toString(){return(new x).quadsToString(this)}union(e){const t=new k({entityIndex:this._entityIndex});return t._graphs=S(Object.create(null),this._graphs),t._size=this._size,t.addAll(e),t}*[Symbol.iterator](){yield*this.readQuads()}}function P(e,t,r=0){const i=t[r];if(i&&!(i in e))return!1;let s=!1;for(const n in i?{[i]:e[i]}:e){const i=2===r?null:P(e[n],t,r+1);!1!==i&&(s=s||Object.create(null),s[n]=i)}return s}class B extends T.Readable{constructor(e,t,r,i,s,n){super({objectMode:!0}),Object.assign(this,{n3Store:e,subject:t,predicate:r,object:i,graph:s,options:n})}get filtered(){if(!this._filtered){const{n3Store:e,graph:t,object:r,predicate:i,subject:s}=this,n=this._filtered=new k({factory:e._factory,entityIndex:this.options.entityIndex});let o,u,a;if(s&&!(o=n._termToNumericId(s))||i&&!(u=n._termToNumericId(i))||r&&!(a=n._termToNumericId(r)))return n;const c=e._getGraphs(t);for(const h in c){let e,t,r,i;(i=c[h])&&(!o&&u?(t=P(i.predicates,[u,a,o]))&&(e=P(i.subjects,[o,u,a]),r=P(i.objects,[a,o,u])):a?(r=P(i.objects,[a,o,u]))&&(e=P(i.subjects,[o,u,a]),t=P(i.predicates,[u,a,o])):(e=P(i.subjects,[o,u,a]))&&(t=P(i.predicates,[u,a,o]),r=P(i.objects,[a,o,u])),e&&(n._graphs[h]={subjects:e,predicates:t,objects:r}))}n._size=null}return this._filtered}get size(){return this.filtered.size}_read(e){e>0&&!this[$]&&(this[$]=this[Symbol.iterator]());const t=this[$];while(--e>=0){const{done:e,value:r}=t.next();if(e)return void this.push(null);this.push(r)}}addAll(e){return this.filtered.addAll(e)}contains(e){return this.filtered.contains(e)}deleteMatches(e,t,r,i){return this.filtered.deleteMatches(e,t,r,i)}difference(e){return this.filtered.difference(e)}equals(e){return this.filtered.equals(e)}every(e,t,r,i,s){return this.filtered.every(e,t,r,i,s)}filter(e){return this.filtered.filter(e)}forEach(e,t,r,i,s){return this.filtered.forEach(e,t,r,i,s)}import(e){return this.filtered.import(e)}intersection(e){return this.filtered.intersection(e)}map(e){return this.filtered.map(e)}some(e,t,r,i,s){return this.filtered.some(e,t,r,i,s)}toCanonical(){return this.filtered.toCanonical()}toStream(){return this._filtered?this._filtered.toStream():this.n3Store.match(this.subject,this.predicate,this.object,this.graph)}union(e){return this._filtered?this._filtered.union(e):this.n3Store.match(this.subject,this.predicate,this.object,this.graph).addAll(e)}toArray(){return this._filtered?this._filtered.toArray():this.n3Store.getQuads(this.subject,this.predicate,this.object,this.graph)}reduce(e,t){return this.filtered.reduce(e,t)}toString(){return(new x).quadsToString(this)}add(e){return this.filtered.add(e)}delete(e){return this.filtered.delete(e)}has(e){return this.filtered.has(e)}match(e,t,r,i){return new B(this.filtered,e,t,r,i,this.options)}*[Symbol.iterator](){yield*this._filtered||this.n3Store.readQuads(this.subject,this.predicate,this.object,this.graph)}}class F{dataset(e){return new k(e)}}function G(e){const t=[];for(const{subject:r,object:i}of e.match(null,u.Ay.namedNode("http://www.w3.org/2000/10/swap/log#implies"),null,u.Ay.defaultGraph())){const s=[...e.match(null,null,null,r)],n=[...e.match(null,null,null,i)];t.push({premise:s,conclusion:n})}return t}class q{constructor(e){this._store=e}_add(e,t,r,i,s){this._store._addToIndex(i.subjects,e,t,r)&&(this._store._addToIndex(i.predicates,t,r,e),this._store._addToIndex(i.objects,r,e,t),s())}_evaluatePremise(e,t,r,i=0){let s,n,o,u,a;const[c,h,d]=e.premise[i].value,l=t[e.premise[i].content],f=!(o=c.value);for(o in f?l:{[o]:l[o]})if(u=l[o]){for(o in f&&(c.value=Number(o)),s=!(o=h.value),s?u:{[o]:u[o]})if(a=u[o]){for(o in s&&(h.value=Number(o)),n=!(o=d.value),n?a:{[o]:a[o]})n&&(d.value=Number(o)),i===e.premise.length-1?e.conclusion.forEach((e=>{this._add(e.subject.value,e.predicate.value,e.object.value,t,(()=>{r(e)}))})):this._evaluatePremise(e,t,r,i+1);n&&(d.value=null)}s&&(h.value=null)}f&&(c.value=null)}_evaluateRules(e,t,r){for(let i=0;i<e.length;i++)this._evaluatePremise(e[i],t,r)}_reasonGraphNaive(e,t){const r=[];function i(e){e.next&&e.next.forEach((t=>{r.push([e.subject.value,e.predicate.value,e.object.value,t])}))}const s=e=>{e.forEach((e=>{this._add(e.subject.value,e.predicate.value,e.object.value,t,(()=>{i(e)}))}))};let n;this._evaluateRules(e,t,i);while(void 0!==(n=r.pop())){const[e,r,o,u]=n,a=u.basePremise.subject.value;a||(u.basePremise.subject.value=e);const c=u.basePremise.predicate.value;c||(u.basePremise.predicate.value=r);const h=u.basePremise.object.value;h||(u.basePremise.object.value=o),0===u.premise.length?s(u.conclusion):this._evaluatePremise(u,t,i),a||(u.basePremise.subject.value=null),c||(u.basePremise.predicate.value=null),h||(u.basePremise.object.value=null)}}_createRule({premise:e,conclusion:t}){const r={},i=e=>"Variable"===e.termType?r[e.value]=r[e.value]||{}:{value:this._store._termToNewNumericId(e)},s=e=>({subject:i(e.subject),predicate:i(e.predicate),object:i(e.object)});return{premise:e.map((e=>s(e))),conclusion:t.map((e=>s(e))),variables:Object.values(r)}}reason(e){Array.isArray(e)||(e=G(e)),e=e.map((e=>this._createRule(e)));for(const r of e)for(const t of e)for(let e=0;e<t.premise.length;e++){const i=t.premise[e];for(const s of r.conclusion){if(R(i.subject,s.subject)&&R(i.predicate,s.predicate)&&R(i.object,s.object)){const r=new Set,n=[];i.subject.value=i.subject.value||1,i.object.value=i.object.value||1,i.predicate.value=i.predicate.value||1;for(let i=0;i<t.premise.length;i++)i!==e&&n.push(z(t.premise[i],r));(s.next=s.next||[]).push({premise:n,conclusion:t.conclusion,basePremise:i})}t.variables.forEach((e=>{e.value=null}))}}for(const r of e){const e=new Set;r.premise=r.premise.map((t=>z(t,e)))}const t=this._store._getGraphs();for(const r in t)this._reasonGraphNaive(e,t[r]);this._store._size=null}}function z({subject:e,predicate:t,object:r},i){const s=e.value||i.has(e)||(i.add(e),!1),n=t.value||i.has(t)||(i.add(t),!1),o=r.value||i.has(r)||(i.add(r),!1);return!s&&n?{content:"predicates",value:[t,r,e]}:o?{content:"objects",value:[r,e,t]}:{content:"subjects",value:[e,t,r]}}function R(e,t){return null===e.value&&(e.value=t.value),e.value===t.value}var E=r(66731);class L extends T.Transform{constructor(e){super({encoding:"utf8",writableObjectMode:!0});const t=this._writer=new x({write:(e,t,r)=>{this.push(e),r&&r()},end:e=>{this.push(null),e&&e()}},e);this._transform=(e,r,i)=>{t.addQuad(e,i)},this._flush=e=>{t.end(e)}}import(e){return e.on("data",(e=>{this.write(e)})),e.on("end",(()=>{this.end()})),e.on("error",(e=>{this.emit("error",e)})),e.on("prefix",((e,t)=>{this._writer.addPrefix(e,t)})),this}}var M={Lexer:s.A,Parser:n.A,Writer:x,Store:k,StoreFactory:F,EntityIndex:A,StreamParser:E.A,StreamWriter:L,Util:i,Reasoner:q,DataFactory:u.Ay,Term:u.x1,NamedNode:u.Yo,Literal:u.uS,BlankNode:u.PB,Variable:u.rT,DefaultGraph:u.yV,Quad:u.kO,Triple:u.n7,termFromId:u.iN,termToId:u.FL}}}]);
//# sourceMappingURL=564.fd07a41f.js.map