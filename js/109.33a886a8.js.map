{"version":3,"file":"js/109.33a886a8.js","mappings":"+HACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,yBAAsB,EAI9B,MAAMA,EACF,WAAAC,CAAYC,GACRC,KAAKD,QAAUA,CACnB,CACA,iBAAAE,GACI,OAAO,CACX,CACA,gBAAAC,GACI,OAAO,CACX,CACA,cAAMC,CAASC,EAAgBC,EAAMC,EAAMC,EAAOC,GAC9C,OAAO,CACX,CACA,UAAMC,CAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,GACxC,OAAOG,IAAQV,KAAKD,OACxB,EAEJJ,EAAQE,oBAAsBA,C,kCCtB9BJ,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQgB,iBAAc,EAOtB,MAAMA,EACF,WAAAb,GACIE,KAAKY,SAAW,CAAC,CACrB,CACA,UAAAC,CAAWP,GACP,GAAIA,EAAKQ,OAAS,EAAG,CACjB,MAAOC,KAASC,GAAQV,EAClBW,EAAUjB,KAAKY,SAASG,GAC9B,GAAIE,EAAS,CACT,MAAMC,EAAaD,EAAQJ,WAAWG,GACtC,GAAIE,EACA,OAAOA,EAAWC,MAAK,EAAGC,UAASb,YAAY,CAAGa,UAASb,MAAOA,EAAQ,KAElF,CACJ,CACA,OAAOP,KAAKoB,QAAUpB,KAAKoB,QAAQD,MAAMC,IAAY,CAAGA,UAASb,MAAO,MAAQ,IACpF,CACA,UAAAc,CAAWf,EAAMc,GACb,GAAoB,IAAhBd,EAAKQ,OACLd,KAAKoB,QAAUA,MAEd,CACD,MAAOL,KAASC,GAAQV,EACxB,IAAIW,EAAUjB,KAAKY,SAASG,GACvBE,IACDA,EAAUjB,KAAKY,SAASG,GAAQ,IAAIJ,GAExCM,EAAQI,WAAWL,EAAMI,EAC7B,CACJ,CACA,aAAAE,CAAcC,GACVvB,KAAKqB,WAAWE,EAAM,KAC1B,EAEJ5B,EAAQgB,YAAcA,C,mBC3CtB,SAASa,EAAUC,GACjB,IAAKA,EACH,OAAO,KAGT,GAA0B,cAAtBA,EAASC,SACX,OAAO1B,KAAK2B,UAAUF,EAAS7B,OAGjC,GAA0B,iBAAtB6B,EAASC,SACX,OAAO1B,KAAK4B,eAGd,GAA0B,YAAtBH,EAASC,SACX,OAAO1B,KAAK6B,QAAQJ,EAAS7B,MAAO6B,EAASK,UAAY9B,KAAK+B,UAAUN,EAASO,SAASpC,QAG5F,GAA0B,cAAtB6B,EAASC,SACX,OAAO1B,KAAK+B,UAAUN,EAAS7B,OAGjC,GAA0B,SAAtB6B,EAASC,SAAqB,CAChC,MAAMO,EAAUjC,KAAKwB,SAASC,EAASQ,SACjCC,EAAYlC,KAAKwB,SAASC,EAASS,WACnCC,EAASnC,KAAKwB,SAASC,EAASU,QAChCC,EAAQpC,KAAKwB,SAASC,EAASW,OAErC,OAAOpC,KAAKqC,KAAKJ,EAASC,EAAWC,EAAQC,EAC/C,CAEA,GAA0B,aAAtBX,EAASC,SACX,OAAO1B,KAAKsC,SAASb,EAAS7B,OAGhC,MAAM,IAAI2C,MAAM,oBAAoBd,EAASC,WAC/C,CAEAc,EAAO7C,QAAU6B,C,uBCrCjB,MAAMiB,EAAO,EAAQ,OACfC,EAAe,EAAQ,OAE7B,MAAMC,UAAeF,EACnB,WAAA3C,CAAa8C,GACXC,MAAMH,EAAcE,EACtB,EAGFJ,EAAO7C,QAAUgD,C,kCCRjBlD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmD,gCAA6B,EAOrC,MAAMA,EACF,mBAAAC,GACI,OAAO,CACX,CACA,YAAMC,CAAOC,EAAY7C,EAAgBC,EAAMC,EAAMV,EAAOW,GACxD,IAAI2C,EAEJ,GAAI9C,EAAe+C,aAAa5C,EAAQ,IAAMH,EAAegD,QAAQ7C,EAAQ,GAEzE2C,EAAK9C,EAAegD,QAAQ7C,EAAQ,GAAG,OAEtC,CAED,MAAM8C,QAAqBhD,EAAKiD,gBAAgBhD,EAAKC,GAAQD,EAAMC,GAC7DgD,EAA2B,OAAjBF,QACJhD,EAAKmD,qBAAqBpD,EAAeS,WAAWP,GAAOA,EAAKC,IACtEF,EAAKoD,YAAY9B,YAEvB,IAAK4B,EAED,YADAnD,EAAe+C,aAAa5C,IAAS,GAGzC2C,EAAKK,EAELnD,EAAegD,QAAQ7C,EAAQ,GAAK,CAAC2C,EACzC,CAGA,IAAIQ,EAAMtD,EAAegD,QAAQ7C,GAC5BmD,IACDA,EAAMtD,EAAegD,QAAQ7C,GAAS,IAGrCmD,EAAIC,MAAMC,GAASA,EAAKC,OAAOX,MAChCQ,EAAII,KAAKZ,SAGF9C,EAAe2D,uCACtB3D,EAAe+C,aAAa5C,IAAS,EAE7C,EAEJZ,EAAQmD,2BAA6BA,C,qCClDrCrD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqE,UAAO,EACf,MAAMC,EAA0B,EAAQ,OAClCC,EAAqB,EAAQ,OAC7BC,EAA0B,EAAQ,OAElCC,EAAmB,EAAQ,OAIjC,MAAMJ,EACF,WAAAlE,CAAY8C,GACR5C,KAAKI,eAAiBwC,EAAQxC,eAC9BJ,KAAKyD,YAAcb,EAAQa,aAAe,IAAIS,EAAmBG,YACjErE,KAAKsE,SAAWtE,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,SACtDvE,KAAKwE,QAAUxE,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,QACrDvE,KAAKyE,OAASzE,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,OACpDvE,KAAK0E,QAAU1E,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,QACrDvE,KAAK2E,QAAU3E,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,OACzD,CAYA,sBAAOK,CAAgBxD,EAASyD,EAAYnE,EAAKoE,GAC7C,MAAMC,EAAQ3D,EAAQ4D,gBAAgBtE,GACtC,IAAKqE,EACD,OAAOD,EAEX,MAAMG,EAAOF,EAAMF,GACnB,YAAgBK,IAATD,EAAqBH,EAAWG,CAC3C,CAYA,+BAAOE,CAAyB/D,EAASV,GACrC,OAAOsD,EAAKY,gBAAgBxD,EAAS,aAAcV,EAAK,CAAE,QAAQ,GACtE,CAOA,0BAAO0E,CAAoBhE,EAASV,GAChC,MAAM2E,EAAYrB,EAAKY,gBAAgBxD,EAAS,QAASV,EAAK,MAC9D,MAAkB,UAAd2E,EACO,KAEJA,CACX,CAOA,8BAAOC,CAAwBlE,EAASV,GACpC,OAAOsD,EAAKY,gBAAgBxD,EAAS,YAAaV,EAAKU,EAAQ4D,gBAAgB,cAAgB,KACnG,CAOA,+BAAOO,CAAyBnE,EAASV,GACrC,OAAOsD,EAAKY,gBAAgBxD,EAAS,aAAcV,EAAKU,EAAQ4D,gBAAgB,eAAiB,KACrG,CAOA,4BAAOQ,CAAsBpE,EAASV,GAClC,QAASsD,EAAKY,gBAAgBxD,EAAS,WAAYV,EAAK,KAC5D,CAOA,2BAAO+E,CAAqBrE,EAASV,GACjC,OAAOsD,EAAKY,gBAAgBxD,EAAS,SAAUV,EAAKU,EAAQ4D,gBAAgB,WAAa,KAC7F,CAQA,wBAAOU,CAAkBtE,EAASV,EAAKiF,GAEnC,MAAqB,aAAdA,IAA6B3B,EAAKwB,sBAAsBpE,EAASV,EAC5E,CAMA,iBAAOkF,CAAWC,GACd,OAAe,OAARA,GAAgB5B,EAAwBD,KAAK4B,WAAWC,EACnE,CAMA,oBAAOC,CAAcC,EAAQC,GACzB,GAAID,EAAOjF,OAASkF,EAASlF,OACzB,OAAO,EAEX,IAAK,IAAImF,EAAI,EAAGA,EAAIF,EAAOjF,OAAQmF,IAC/B,GAAIF,EAAOE,KAAOD,EAASC,GACvB,OAAO,EAGf,OAAO,CACX,CAOA,0BAAMC,CAAqBtG,GACvB,GAAII,KAAKI,eAAe8F,qBAAsB,CAC1C,MAAMC,EAAc,CAAC,EACrB,IAAK,MAAMpB,KAASnF,EAChB,GAAImF,GAA0B,kBAAVA,EAAoB,CACpC,MAAM7B,EAAK6B,EAAM,OACXqB,EAAQrB,EAAM,UACpB,GAAI7B,GAAMkD,EAAO,CACb,MAAMC,EAAqBF,EAAYjD,GACvC,GAAImD,GAAsBA,IAAuBD,EAC7C,MAAM,IAAInC,EAAwBqC,WAAW,gCAAgCpD,IAAMe,EAAwBsC,YAAYC,qBAE3HL,EAAYjD,GAAMkD,CACtB,CACJ,CAER,CACJ,CAUA,iBAAMK,CAAYrF,EAASV,EAAKd,EAAOW,EAAOD,GAE1C,GAA+C,UAA3C0D,EAAKoB,oBAAoBhE,EAASV,GAClC,MAAO,CAACV,KAAKyD,YAAY5B,QAAQ7B,KAAK0G,kBAAkB9G,GAAQI,KAAK2E,UAEzE,MAAMM,SAAcrF,EACpB,OAAQqF,GACJ,IAAK,SAED,GAAc,OAAVrF,QAA4BsF,IAAVtF,EAClB,MAAO,GAGX,GAAI+G,MAAMC,QAAQhH,GAGd,MAAI,UAAWoE,EAAKmB,yBAAyB/D,EAASV,GAC7B,IAAjBd,EAAMkB,OACC,CAACd,KAAKyE,QAGNzE,KAAKI,eAAegD,QAAQ7C,EAAQ,IAAM,UAGnDP,KAAKkG,qBAAqBtG,GACzB,IAUX,GAPAwB,QAAgBpB,KAAK6G,+BAA+BzF,EAASV,GAEzD,aAAcd,IACdwB,QAAgBpB,KAAKI,eAAe0G,aAAalH,EAAM,mBAAoBI,KAAKI,eAAeS,WAAWP,EAAM,IAAI0E,kBAGxHpF,QAAcI,KAAK+G,gBAAgBnH,EAAOU,EAAMC,EAAOa,GACnD,WAAYxB,EAAO,CACnB,IAAIoH,EACAC,EACAC,EACA7B,EACA8B,EACJ,IAAKzG,KAAOd,EAAO,CACf,MAAMwH,EAAWxH,EAAMc,GACvB,OAAQA,GACJ,IAAK,SACDsG,EAAMI,EACN,MACJ,IAAK,YACDH,EAAgBG,EAChB,MACJ,IAAK,aACDF,EAAiBE,EACjB,MACJ,IAAK,QACD/B,EAAY+B,EACZ,MACJ,IAAK,SACDD,EAAaC,EACb,MACJ,QACI,MAAM,IAAInD,EAAwBqC,WAAW,wBAAwB5F,iBAAmB2G,KAAKC,UAAU1H,KAAUqE,EAAwBsC,YAAYgB,sBAEjK,CAEA,GAAyE,gBAA/DvH,KAAKwH,eAAenC,EAAW/E,EAAMC,GAAO,EAAMa,GACxD,MAAO,CAACpB,KAAKyD,YAAY5B,QAAQ7B,KAAK0G,kBAAkBM,GAAMhH,KAAK2E,UAGvE,GAAY,OAARqC,EACA,MAAO,GAEX,GAAmB,kBAARA,EACP,MAAM,IAAI/C,EAAwBqC,WAAW,uDAAuDe,KAAKC,UAAUN,MAAS/C,EAAwBsC,YAAYkB,4BAGpK,GAAIzH,KAAKI,eAAe8F,sBAAwBiB,GAAoC,kBAAfA,EACjE,MAAM,IAAIlD,EAAwBqC,WAAW,mDAAmDe,KAAKC,UAAUH,MAAgBlD,EAAwBsC,YAAYmB,qBAGvK,GAAIT,EAAe,CACf,GAAmB,kBAARD,EACP,MAAM,IAAI/C,EAAwBqC,WAAW,4EAA4Ee,KAAKC,UAAUN,MAAS/C,EAAwBsC,YAAYoB,+BAEzL,IAAK1D,EAAwB2D,cAAcC,iBAAiBZ,EAAejH,KAAKI,eAAe0H,aAAc7D,EAAwBsC,YAAYwB,gCAC7I,MAAO,IAGP/H,KAAKI,eAAe4H,uBAAsE,IAA7ChI,KAAKI,eAAe6H,wBACjEhB,EAAgBA,EAAciB,cAEtC,CACA,GAAIhB,EAAgB,CAChB,GAAmB,kBAARF,EACP,MAAM,IAAIzE,MAAM,6EAA6E8E,KAAKC,UAAUN,OAEhH,IAAK/C,EAAwB2D,cAAcO,kBAAkBjB,EAAgBlH,KAAKI,eAAe0H,cAC7F,MAAO,EAEf,CAEA,GAAIb,GAAiBC,GAAkBlH,KAAKI,eAAegI,aAAc,CACrE,GAAI/C,EACA,MAAM,IAAIpB,EAAwBqC,WAAW,mEAAmEe,KAC3GC,UAAU1H,MAAWqE,EAAwBsC,YAAYgB,sBAElE,OAAOvH,KAAKqI,oBAAoBrI,KAC3BsI,+BAA+B/H,EAAOyG,EAAKC,EAAeC,GACnE,CACK,GAAID,EAAe,CACpB,GAAI5B,EACA,MAAM,IAAIpB,EAAwBqC,WAAW,0DAA0De,KAAKC,UAAU1H,MAAWqE,EAAwBsC,YAAYgB,sBAEzK,MAAO,CAACvH,KAAKyD,YAAY5B,QAAQmF,EAAKC,GAC1C,CACK,GAAIC,GAAkBlH,KAAKI,eAAegI,aAAc,CACzD,GAAI/C,EACA,MAAM,IAAIpB,EAAwBqC,WAAW,2DAA2De,KAAKC,UAAU1H,MAAWqE,EAAwBsC,YAAYgB,sBAE1K,OAAOvH,KAAKqI,oBAAoBrI,KAC3BsI,+BAA+B/H,EAAOyG,EAAKC,EAAeC,GACnE,CACK,GAAI7B,EAAW,CAChB,GAAyB,kBAAdA,EACP,MAAM,IAAIpB,EAAwBqC,WAAW,kDAAkDe,KAAKC,UAAUjC,MAAepB,EAAwBsC,YAAYgC,qBAErK,MAAMC,EAAWxI,KAAKyI,sBAAsBrH,EAASiE,GACrD,IAAKmD,EACD,MAAM,IAAIvE,EAAwBqC,WAAW,+BAA+Be,KAAKC,UAAUjC,MAAepB,EAAwBsC,YAAYgC,qBAElJ,GAA0B,cAAtBC,EAAS9G,SACT,MAAM,IAAIuC,EAAwBqC,WAAW,uBAAuBkC,EAAS9G,cAAc2D,IAAapB,EAAwBsC,YAAYgC,qBAEhJ,MAAO,CAACvI,KAAKyD,YAAY5B,QAAQmF,EAAKwB,GAC1C,CAEA,aAAaxI,KAAKyG,YAAY,IAAIxC,EAAwByE,wBAAwB,CAAC,GAAIhI,EAAKsG,EAAKzG,EAAOD,EAC5G,CACK,GAAI,SAAUV,EAAO,CAEtB,GAAIH,OAAOa,KAAKV,GAAOkB,OAAS,EAC5B,MAAM,IAAImD,EAAwBqC,WAAW,6DAA6D5F,KAAQuD,EAAwBsC,YAAYoC,4BAG1J,MAAO,EACX,CACK,GAAI,UAAW/I,EAAO,CAEvB,GAAIH,OAAOa,KAAKV,GAAOkB,OAAS,EAC5B,MAAM,IAAImD,EAAwBqC,WAAW,8DAA8D5F,KAAQuD,EAAwBsC,YAAYoC,4BAE3J,MAAMC,EAAYhJ,EAAM,SAGxB,OAAI+G,MAAMC,QAAQgC,GACW,IAArBA,EAAU9H,OACH,CAACd,KAAKyE,QAGNzE,KAAKI,eAAegD,QAAQ7C,EAAQ,IAAM,SAKxCP,KAAKyG,kBAAkBzG,KAAKI,eAAeS,WAAWP,GAAOI,EAAKkI,EAAWrI,EAAQ,EAAGD,EAAKuI,MAAM,GAAI,GAE5H,CACK,GAAI,aAAcjJ,GAAsC,mBAAtBA,EAAM,YAGzC,MAAO,GAEN,GAAI,WAAYoE,EAAKmB,+BAA+BnF,KAAKI,eAAeS,WAAWP,GAAOI,GAAM,CAEjG,MAAMoI,EAAwB9I,KAAKI,eAAe2I,wBAAwBxI,EAAQ,GAClF,OAAOuI,EAAwBrJ,OAAOuJ,OAAOF,GAAyB,CAAC9I,KAAKyD,YAAY9B,YAC5F,CACK,MAAI,QAAS/B,GAEVH,OAAOa,KAAKV,GAAOkB,OAAS,IAC5BM,QAAgBpB,KAAKI,eAAeS,WAAWP,EAAM,IAGrD,aAAcV,IACdwB,QAAgBpB,KAAKI,eAAe0G,aAAalH,EAAM,YAAawB,EAAQ4D,kBAEzD,WAAnBpF,EAAM,SACCI,KAAKqI,oBAAoBrI,KAAKyI,sBAAsBrH,EAASxB,EAAM,SAGnEI,KAAKqI,oBAAoBrI,KAAKwD,eAAepC,EAASxB,EAAM,UAKnEI,KAAKI,eAAe+C,aAAa5C,EAAQ,IACrCX,GAA0B,kBAAVA,GAAoD,IAA9BH,OAAOa,KAAKV,GAAOkB,OACrDd,KAAKI,eAAegD,QAAQ7C,EAAQ,KACpCP,KAAKI,eAAegD,QAAQ7C,EAAQ,GAAK,CAACP,KAAKyD,YAAY9B,cAG5D,GAGnB,IAAK,SACD,OAAO3B,KAAKqI,oBAAoBrI,KAAKiJ,kBAAkB1I,QAAaP,KAAK6G,+BAA+BzF,EAASV,GAAMA,EAAKd,EAAO,OACvI,IAAK,UACD,OAAOI,KAAKqI,oBAAoBrI,KAAKiJ,kBAAkB1I,QAAaP,KAAK6G,+BAA+BzF,EAASV,GAAMA,EAAKwI,QAAQtJ,GAAOuJ,WAAYnJ,KAAKyD,YAAY1B,UAAUiC,EAAKoF,eAC3L,IAAK,SACD,OAAOpJ,KAAKqI,oBAAoBrI,KAAKiJ,kBAAkB1I,QAAaP,KAAK6G,+BAA+BzF,EAASV,GAAMA,EAAKd,EAAOI,KAAKyD,YAAY1B,UAAUnC,EAAQ,IAAM,GAAKA,EAAQ,KAAOoE,EAAKqF,YAAcrF,EAAKsF,cAC5N,QAEI,OADAtJ,KAAKI,eAAemJ,UAAU,IAAIhH,MAAM,yCAAyC0C,MAC1E,GAEnB,CAUA,oCAAM4B,CAA+BzF,EAASV,GAC1C,MAAM8I,EAAkBpI,EAAQ4D,gBAAgBtE,GAIhD,OAHI8I,GAA8C,kBAApBA,GAAgC,aAAcA,IACxEpI,QAAgBpB,KAAKI,eAAe0G,aAAa0C,EAAiBpI,EAAQ4D,iBAAiB,IAExF5D,CACX,CAKA,mBAAAiH,CAAoBzE,GAChB,OAAOA,EAAO,CAACA,GAAQ,EAC3B,CAQA,eAAA6F,CAAgBrI,EAASV,GACrB,MAAMgJ,EAAWtI,EAAQuI,WAAWjJ,GAAK,EAAMV,KAAKI,eAAewJ,oBAEnE,OAAKF,EAIe,MAAhBA,EAAS,IAA8B,MAAhBA,EAAS,GAC5B1J,KAAKI,eAAeyJ,sBACb7J,KAAKyD,YAAY9B,UAAU+H,EAASI,OAAO,IAG3C,KAIX9F,EAAK4B,WAAW8D,GACT1J,KAAKyD,YAAY1B,UAAU2H,GAG9BA,GAAY1J,KAAKI,eAAe0H,cAChC9H,KAAKI,eAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,0BAA0BoD,IAAYzF,EAAwBsC,YAAYwD,sBAMhJ,MAHQ,KApBJ,IAwBf,CAQA,cAAAvG,CAAepC,EAASV,GACpB,GAAIA,EAAIsJ,WAAW,MACf,OAAOhK,KAAKyD,YAAY9B,UAAUjB,EAAIoJ,OAAO,IAEjD,MAAMjE,EAAMzE,EAAQuI,WAAWjJ,GAAK,EAAOV,KAAKI,eAAewJ,oBAC/D,IAAK5F,EAAK4B,WAAWC,GAAM,CACvB,IAAIA,IAAO7F,KAAKI,eAAe0H,aAI3B,OAAO,KAHP9H,KAAKI,eAAemJ,UAAU,IAAIhH,MAAM,yBAAyBsD,KAKzE,CACA,OAAO7F,KAAKyD,YAAY1B,UAAU8D,EACtC,CASA,qBAAA4C,CAAsBrH,EAASV,GAC3B,GAAIA,EAAIsJ,WAAW,MACf,OAAOhK,KAAKyD,YAAY9B,UAAUjB,EAAIoJ,OAAO,IAEjD,MAAMG,EAAgBjK,KAAKI,eAAewJ,mBAC1C,IAAIF,EAAWtI,EAAQuI,WAAWjJ,GAAK,EAAMuJ,GAI7C,GAHIP,IAAahJ,IACbgJ,EAAWtI,EAAQuI,WAAWjJ,GAAK,EAAOuJ,KAEzCjG,EAAK4B,WAAW8D,GAAW,CAC5B,IAAIA,IAAY1J,KAAKI,eAAe0H,cAAiB4B,EAASM,WAAW,KAIrE,OAAO,KAHPhK,KAAKI,eAAemJ,UAAU,IAAIhH,MAAM,qBAAqBmH,KAKrE,CACA,OAAO1J,KAAKyD,YAAY1B,UAAU2H,EACtC,CAOA,WAAAQ,CAAYtK,EAAOoC,GACf,GAAqB,kBAAVpC,EAAoB,CAC3B,GAAIuK,OAAOC,SAASxK,GAAQ,CACxB,MAAMyK,EAAYzK,EAAQ,IAAM,EAChC,OAAIyK,GAAerI,GAAYA,EAASpC,QAAUoE,EAAKsF,WAI5C1J,EAAM0K,cAAc,IAAIC,QAAQ,aAAc,OAH9CJ,OAAOvK,GAAOuJ,UAK7B,CAEI,OAAOvJ,EAAQ,EAAI,MAAQ,MAEnC,CAEI,OAAOA,CAEf,CAUA,iBAAAqJ,CAAkB1I,EAAOa,EAASV,EAAKd,EAAO4K,GAE1C,MAAMC,EAAczG,EAAKoB,oBAAoBhE,EAASV,GACtD,GAAI+J,EACA,GAAoB,QAAhBA,GACA,IAAKD,EACD,OAAOxK,KAAKwD,eAAepC,EAASpB,KAAKkK,YAAYtK,EAAO4K,SAG/D,GAAoB,WAAhBC,GACL,IAAKD,EACD,OAAOxK,KAAKyI,sBAAsBrH,EAASpB,KAAKkK,YAAYtK,EAAO4K,SAIvEA,EAAkBxK,KAAKyD,YAAY1B,UAAU0I,GAIrD,IAAKD,EAAiB,CAClB,MAAME,EAAkB1G,EAAKsB,wBAAwBlE,EAASV,GACxDiK,EAAmB3G,EAAKuB,yBAAyBnE,EAASV,GAChE,OAAIiK,GAAoB3K,KAAKI,eAAegI,aACjCpI,KAAKsI,+BAA+B/H,EAAOP,KAAKkK,YAAYtK,EAAO4K,GAAkBE,EAAiBC,GAGtG3K,KAAKyD,YAAY5B,QAAQ7B,KAAKkK,YAAYtK,EAAO4K,GAAkBE,EAElF,CAEA,OAAO1K,KAAKyD,YAAY5B,QAAQ7B,KAAKkK,YAAYtK,EAAO4K,GAAkBA,EAC9E,CAUA,8BAAAlC,CAA+B/H,EAAOX,EAAOkC,EAAU8I,GACnD,GAAyC,kBAArC5K,KAAKI,eAAegI,aAKpB,OAHKtG,IACDA,EAAW,IAER9B,KAAKyD,YAAY5B,QAAQjC,EAAOI,KAAKyD,YAAY1B,UAAU,8BAA8BD,KAAY8I,MAE3G,CAED,MAAMC,EAAY7K,KAAKyD,YAAY9B,YAC7BS,EAAQpC,KAAK8K,kBAMnB,OALA9K,KAAKI,eAAe2K,SAASxK,EAAOP,KAAKyD,YAAYpB,KAAKwI,EAAW7K,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,SAAUvE,KAAKyD,YAAY5B,QAAQjC,GAAQwC,IAClJN,GACA9B,KAAKI,eAAe2K,SAASxK,EAAOP,KAAKyD,YAAYpB,KAAKwI,EAAW7K,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,YAAavE,KAAKyD,YAAY5B,QAAQC,GAAWM,IAEhKpC,KAAKI,eAAe2K,SAASxK,EAAOP,KAAKyD,YAAYpB,KAAKwI,EAAW7K,KAAKyD,YAAY1B,UAAUiC,EAAKO,IAAM,aAAcvE,KAAKyD,YAAY5B,QAAQ+I,GAAYxI,IACvJyI,CACX,CACJ,CAMA,iBAAAnE,CAAkB9G,GACd,OAAOwE,EAAiBxE,EAC5B,CAYA,oBAAM4H,CAAe9G,EAAKJ,EAAMC,EAAOyK,EAAc5J,GAEjD,GAAI+I,OAAOE,UAAU3J,GACjB,OAAOA,EAGX,IAAKsK,EAAc,CACf,MAAMC,EAAyBjL,KAAKI,eAAe8K,2BAA2B3K,GAC9E,GAAI0K,EACA,OAAOA,CAEf,CACA,IAAKhH,EAAwBD,KAAKmH,mBAAmBzK,GAAM,CACvDU,EAAUA,SAAiBpB,KAAKI,eAAeS,WAAWP,GAC1D,IAAI8K,EAAWhK,EAAQ4D,gBAAgBtE,GACnC0K,GAAgC,kBAAbA,IACnBA,EAAWA,EAAS,QAEpBnH,EAAwBD,KAAKqH,eAAeD,KAC5C1K,EAAM0K,EAEd,CACA,OAAOJ,EAAetK,EAAOV,KAAKI,eAAe8K,2BAA2B3K,GAASG,CACzF,CAQA,0BAAM4K,CAAqBhL,EAAMC,GAC7B,aAAaP,KAAKwH,eAAejH,EAAQ,GAAKD,EAAKC,EAAQ,GAAID,EAAMC,EAAQ,EACjF,CAUA,qBAAMwG,CAAgBwE,EAAMjL,EAAMC,EAAOa,GACrC,MAAMoK,EAAU,CAAC,EACjB,IAAK,MAAM9K,KAAO6K,EACdC,QAAcxL,KAAKwH,eAAe9G,EAAKJ,EAAMC,EAAQ,GAAG,EAAMa,IAAYmK,EAAK7K,GAEnF,OAAO8K,CACX,CASA,SAAAC,CAAUlL,GACN,IAAK,IAAI0F,EAAI1F,EAAO0F,GAAK,EAAGA,IACxB,GAAIjG,KAAKI,eAAesL,aAAazF,IAAMjG,KAAKI,eAAeuL,iBAAiB1F,GAC5E,OAAO,EAGf,OAAO,CACX,CAQA,yBAAM2F,CAAoBrL,EAAOD,GAC7B,IAAK,IAAI2F,EAAI1F,EAAQ,EAAG0F,EAAI,EAAGA,IAC3B,GAAoD,iBAA1CjG,KAAKwH,eAAelH,EAAK2F,GAAI3F,EAAM2F,GAAiB,CAE1D,MAAMhD,SAAoBkB,EAAwB0H,sBAAsBC,oBAAoB9L,KAAKI,eAAgBE,EAAM2F,IAAIhD,WAC3H,OAAIkB,EAAwB0H,sBAAsBE,wBAAwB9I,IAC9D,EAEL1C,EAAQ0F,EAAI,CACvB,CAEJ,OAAQ,CACZ,CAMA,sBAAA+F,CAAuB/J,GACnB,GAAyB,YAArBA,EAAQP,SACR,MAAM,IAAIuC,EAAwBqC,WAAW,8CAA8CrE,EAAQrC,QAASqE,EAAwBsC,YAAY0F,+BAExJ,CAKA,eAAAnB,GACI,OAAO9K,KAAKI,eAAewB,cAAgB5B,KAAKyD,YAAY7B,cAChE,CAOA,4BAAMsK,CAAuB5L,EAAMC,GAE/B,IAAI6B,EAAQpC,KAAK8K,kBAEjB,MAAM,WAAE7H,EAAY1C,MAAO4L,SAAyBhI,EAAwB0H,sBACvEC,oBAAoB9L,KAAKI,eAAgBE,EAAMC,GACpD,GAAI,WAAY0C,EAAY,CAExB,MAAMmJ,EAAsBjI,EAAwB0H,sBAAsBQ,uBAAuBpJ,EAAYkJ,EAAgB7L,GACvHyE,EAAQ/E,KAAKI,eAAe2I,wBAAwBoD,GAG1D,GAFA/J,EAAQ2C,EAAQA,EAAMqH,GAAuB,MAExChK,EAAO,CACR,IAAIkK,EAAU,KACd,GAAI,QAASrJ,EAAY,CACrB,MAAMI,QAAqBrD,KAAKsD,gBAAgBhD,EAAK6L,GAAiB7L,EAAM6L,GACvD,OAAjB9I,IACAiJ,QAAgBtM,KAAKwD,qBAAqBxD,KAAKI,eAAeS,WAAWP,GAAO+C,GAExF,CACKiJ,IACDA,EAAUtM,KAAKyD,YAAY9B,aAE1B3B,KAAKI,eAAe2I,wBAAwBoD,KAC7CnM,KAAKI,eAAe2I,wBAAwBoD,GAAkB,CAAC,GAEnE/J,EAAQpC,KAAKI,eAAe2I,wBAAwBoD,GAAgBC,GAAuBE,CAC/F,CACJ,CACA,OAAOlK,CACX,CAeA,wBAAMmK,CAAmBjM,EAAMC,GAC3B,IAAIiM,EAAiBjM,EACrB,IAAK,IAAI0F,EAAI1F,EAAQ,EAAG0F,EAAI,EAAGA,IAC3B,GAAuB,kBAAZ3F,EAAK2F,GAAiB,CAC7B,MAAMN,QAAkB3F,KAAKwH,eAAelH,EAAK2F,GAAI3F,EAAM2F,GAC3D,GAAkB,aAAdN,EACA,OAAOM,EAEN,GAAkB,UAAdN,EAIL,OAAO6G,EAHPA,EAAiBvG,CAKzB,CAEJ,OAAOuG,CACX,CASA,qBAAMlJ,CAAgB5C,EAAKJ,EAAMC,GAC7B,MAAM8C,QAAqBrD,KAAKwH,eAAe9G,EAAKJ,EAAMC,GAC1D,MAAwB,UAAjB8C,EAA2B,KAAOA,CAC7C,EAEJ1D,EAAQqE,KAAOA,EACfA,EAAKyI,IAAM,oCACXzI,EAAKoF,YAAcpF,EAAKyI,IAAM,UAC9BzI,EAAKqF,YAAcrF,EAAKyI,IAAM,UAC9BzI,EAAKsF,WAAatF,EAAKyI,IAAM,SAC7BzI,EAAKO,IAAM,6C,wBC7xBX,MAAMF,EAAc,EAAQ,OAE5B7B,EAAO7C,QAAU0E,C,oBCFjB,MAAMqI,EACJ,WAAA5M,CAAaoD,GACXlD,KAAKJ,MAAQsD,GAAO,OAASwJ,EAAUC,MACzC,CAEA,MAAA9I,CAAQ+I,GACN,QAASA,GAASA,EAAMlL,WAAa1B,KAAK0B,UAAYkL,EAAMhN,QAAUI,KAAKJ,KAC7E,EAGF8M,EAAUG,UAAUnL,SAAW,YAE/BgL,EAAUC,OAAS,EAEnBnK,EAAO7C,QAAU+M,C,qCCbjBjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmN,2BAAwB,EAChC,MAAM7I,EAA0B,EAAQ,OAClC8I,EAAwB,EAAQ,MAItC,MAAMD,UAA8BC,EAAsBlN,oBACtD,WAAAC,GACI+C,MAAM,MACV,CACA,gBAAA3C,GACI,OAAO,CACX,CACA,YAAM8C,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GAC5B,kBAAVX,GACPQ,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,sBAAsB1G,KAAUqE,EAAwBsC,YAAYyG,mBAIxI,MAAMC,QAAwB5M,EAAKkM,mBAAmBjM,EAAMC,QAEZ2E,IAA5C9E,EAAegD,QAAQ6J,KACnB7M,EAAegD,QAAQ6J,GAAiB,GAAGC,SAE3C9M,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,8DAA8DhG,EAAKC,EAAQ,MAAO0D,EAAwBsC,YAAYoC,6BAItLvI,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,yBAAyBlG,EACpFgD,QAAQ6J,GAAiB,GAAGrN,eAAeA,KAAUqE,EAAwBsC,YAAY4G,sBAItG/M,EAAegD,QAAQ6J,GAAmB5M,EAAKgI,0BAA0BhI,EAAKmD,qBAAqBpD,EAAeS,WAAWP,GAAOV,GACxI,EAEJD,EAAQmN,sBAAwBA,C,oBCtChC,MAAMrK,EACJ,WAAA3C,CAAasN,EAAMxK,GACjB5C,KAAKoN,KAAOA,EACZpN,KAAK4C,QAAUA,CACjB,CAEA,MAAAyK,CAAQC,EAAO1K,GACb,MAAM2K,EAAS,IAAIvN,KAAKoN,KAAKE,EAAO7N,OAAO+N,OAAO,CAAC,EAAGxN,KAAK4C,QAASA,IAYpE,OAVA0K,EAAMG,GAAG,OAAO,KACTF,EAAOG,UACVH,EAAOI,KAAK,MACd,IAGFL,EAAMG,GAAG,SAAUG,IACjBL,EAAOI,KAAK,QAASC,EAAG,IAGnBL,CACT,EAGF/K,EAAO7C,QAAU8C,C,mCCtBjBhD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkO,iCAA8B,EAKtC,MAAMA,EACF,iBAAA5N,GACI,OAAO,CACX,CACA,gBAAAC,GACI,OAAO,CACX,CACA,cAAMC,CAASC,EAAgBC,EAAMC,EAAMC,EAAOC,GAC9C,OAAO,CACX,CACA,UAAMC,CAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,GACxC,OAAO,CACX,CACA,YAAMyC,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GACjDH,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQkO,4BAA8BA,C,qCCvBtCpO,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmO,gCAA6B,EACrC,MAAM7J,EAA0B,EAAQ,OAClC8I,EAAwB,EAAQ,MAItC,MAAMe,UAAmCf,EAAsBlN,oBAC3D,WAAAC,GACI+C,MAAM,WACV,CACA,gBAAA3C,GACI,OAAO,CACX,CACA,YAAM8C,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GAE7CH,EAAe2N,mBACX3N,EAAe4N,gBAAgBzN,IAC5BH,EAAe6N,eAAe1N,SACI2E,IAAlC9E,EAAegD,QAAQ7C,KAC9BH,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,yFAC5BrC,EAAwBsC,YAAY2H,8BAK5E,MAAMC,EAAgB/N,EAAeS,WAAWP,GAE1Cc,EAAUhB,EAAe0G,aAAalH,SAAcuO,GAAenJ,iBACzE5E,EAAegO,YAAY/M,WAAWf,EAAKuI,MAAM,GAAI,GAAIzH,GACzDhB,EAAeiO,YAAYzO,SACrBQ,EAAekO,sBAAsBlN,EAC/C,EAEJzB,EAAQmO,2BAA6BA,C,qCClCrCrO,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4O,6BAA0B,EAClC,MAAMtK,EAA0B,EAAQ,OAClC8I,EAAwB,EAAQ,MAItC,MAAMwB,UAAgCxB,EAAsBlN,oBACxD,WAAAC,GACI+C,MAAM,QACV,CACA,YAAMG,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GAC5B,kBAAVX,GACPQ,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,kCAAkC5F,QAAUd,KAAUqE,EAAwBsC,YAAYiI,qBAE1J,iBAAkBnO,EAAK0G,gBAAgBnH,EAAOU,EAAMC,QAAaH,EAAeS,WAAWP,KAC3FF,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,qCAAqC5F,KAAQuD,EAAwBsC,YAAYiI,qBAErJpO,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQ4O,wBAA0BA,C,mCCrBlC9O,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,qCCAtDH,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8O,8BAA2B,EACnC,MAAM1B,EAAwB,EAAQ,MAItC,MAAM0B,UAAiC1B,EAAsBlN,oBACzD,WAAAC,GACI+C,MAAM,SACV,CACA,cAAM1C,CAASC,EAAgBC,EAAMC,EAAMC,EAAOC,GAE9C,MAAME,EAAMJ,EAAKC,GAIjB,OAHIG,IAAQN,EAAesL,aAAanL,UAAgBP,KAAKS,KAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,KAC/FH,EAAesL,aAAanL,IAAS,GAElCsC,MAAM1C,SAASC,EAAgBC,EAAMC,EAAMC,EAAOC,EAC7D,CACA,UAAMC,CAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,GACxC,MAAmG,iBAAtFF,EAAKmH,eAAelH,EAAKC,GAAQD,EAAKuI,MAAM,EAAGvI,EAAKQ,OAAS,GAAIP,EAAQ,GAAG,EAC7F,CACA,YAAMyC,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GAMjDH,EAAesL,aAAanL,IAAS,SAE9BH,EAAesO,yBAAyBnO,UACxCH,EAAeuO,yBAAyBpO,GAE/CH,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQ8O,yBAA2BA,C,mCCnCnChP,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiP,UAAO,EAKf,MAAMA,EACF,WAAA9O,CAAYmC,EAASC,EAAWC,EAAQC,GACpCpC,KAAK0B,SAAW,OAChB1B,KAAKJ,MAAQ,GACbI,KAAKiC,QAAUA,EACfjC,KAAKkC,UAAYA,EACjBlC,KAAKmC,OAASA,EACdnC,KAAKoC,MAAQA,CACjB,CACA,MAAAyB,CAAO+I,GAEH,QAASA,IAA6B,SAAnBA,EAAMlL,WAAwBkL,EAAMlL,WACnD1B,KAAKiC,QAAQ4B,OAAO+I,EAAM3K,UAC1BjC,KAAKkC,UAAU2B,OAAO+I,EAAM1K,YAC5BlC,KAAKmC,OAAO0B,OAAO+I,EAAMzK,SACzBnC,KAAKoC,MAAMyB,OAAO+I,EAAMxK,MAChC,EAEJzC,EAAQiP,KAAOA,C,qCCxBf,IAAIC,EAAmB7O,MAAQA,KAAK6O,kBAAqBpP,OAAOqP,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EhK,IAAPgK,IAAkBA,EAAKD,GAC3BxP,OAAOC,eAAeqP,EAAGG,EAAI,CAAEC,YAAY,EAAMC,IAAK,WAAa,OAAOJ,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACThK,IAAPgK,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGI,EAAgBrP,MAAQA,KAAKqP,cAAiB,SAASL,EAAGrP,GAC1D,IAAK,IAAI2P,KAAKN,EAAa,YAANM,GAAoB7P,OAAOoN,UAAU0C,eAAeC,KAAK7P,EAAS2P,IAAIT,EAAgBlP,EAASqP,EAAGM,EAC3H,EACA7P,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDyP,EAAa,EAAQ,OAAuB1P,E,qCCX5CF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ8P,4BAAyB,EACjC,MAAMC,EAAS,EAAQ,OAIvB,MAAMD,EACF,iBAAAxP,GACI,OAAO,CACX,CACA,gBAAAC,GACI,OAAO,CACX,CACA,cAAMC,CAASC,EAAgBC,EAAMC,EAAMC,EAAOC,GAC9C,OAAOR,KAAKS,KAAKL,EAAgBC,EAAM,KAAMC,EAAMC,EACvD,CACA,UAAME,CAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,GACxC,MAA8B,kBAAhBD,EAAKC,EACvB,CACA,YAAMyC,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GACjD,IAAIoF,QAAkBtF,EAAKiL,qBAAqBhL,EAAMC,GAEtD,GAAkB,UAAdoF,EAAuB,CAGvB,IAAIgK,EAAc,KACdC,EAAgB,EACpB,IAAK,IAAI3J,EAAI1F,EAAQ,EAAG0F,EAAI,EAAGA,IAAK,CAChC,MAAM4J,EAAYvP,EAAK2F,GACvB,GAAyB,kBAAd4J,GAA+C,kBAAdA,EAAwB,CAChED,EAAgB3J,EAChB0J,EAAcE,EACd,KACJ,CACJ,CACA,GAAoB,OAAhBF,EAAsB,CAEtB,MAAM3G,QAAe3I,EAAKoG,kBAAkBrG,EAAeS,WAAWP,GAAOqP,EAAa/P,EAAOW,EAAOD,GACxG,IAAK,MAAM6B,KAAU6G,QACXhJ,KAAK8P,kBAAkB1P,EAAgBC,EAAM8B,EAAQvC,EAAOW,EAAOD,EAAKuI,MAAM,EAAG+G,GAAgBA,GAGrF,IAAlB5G,EAAOlI,cACDd,KAAK8P,kBAAkB1P,EAAgBC,EAAM,KAAMT,EAAOW,EAAOD,EAAKuI,MAAM,EAAG+G,GAAgBA,EAE7G,CACJ,MACK,GAAkB,SAAdjK,QAECvF,EAAe2P,cAAczP,EAAKuI,MAAM,GAAI,GAAIjJ,EAAOW,EAAQ,GAAG,QAEvE,QAAkB2E,IAAdS,GAAyC,UAAdA,EAAuB,CAKvD,IAAK,IAAIM,EAAI1F,EAAQ,EAAG0F,EAAI,EAAGA,IAC3B,GAAuB,kBAAZ3F,EAAK2F,GAAiB,CAC7BN,QAAkBtF,EAAKmH,eAAelH,EAAK2F,GAAI3F,EAAM2F,GACrD,KACJ,CAGJ,MAAMkI,QAAsB/N,EAAeS,WAAWP,EAAKuI,MAAM,GAAI,IACrE,GAAI,UAAW6G,EAAO1L,KAAKmB,yBAAyBgJ,EAAexI,GAAY,CAG3EvF,EAAe+C,aAAa5C,EAAQ,IAAK,EACzC,MAAMyI,QAAe3I,EAAKoG,kBAAkBrG,EAAeS,WAAWP,GAAOqF,EAAW/F,EAAOW,EAAOD,GACtG,IAAK,MAAM6B,KAAU6G,QACXhJ,KAAK8P,kBAAkB1P,EAAgBC,EAAM8B,EAAQvC,EAAOW,EAAOD,EAAKuI,MAAM,GAAI,GAAItI,EAAQ,GAGlF,IAAlByI,EAAOlI,cACDd,KAAK8P,kBAAkB1P,EAAgBC,EAAM,KAAMT,EAAOW,EAAOD,EAAKuI,MAAM,GAAI,GAAItI,EAAQ,EAE1G,MAGIH,EAAe4P,WAAWzP,EAAO,SAE3BH,EAAe2P,cAAczP,EAAKuI,MAAM,GAAI,GAAIjJ,EAAOW,EAAQ,GAAG,GAExEH,EAAegO,YAAY9M,cAAchB,EAAKuI,MAAM,GAAI,GAEhE,CACJ,CACA,uBAAMiH,CAAkB1P,EAAgBC,EAAMT,EAAOqQ,EAAe1P,EAAO2P,EAAcN,GAErF,IAAIO,EAAc/P,EAAegQ,iBAAiB7P,GAClD,GAAsB,OAAlB0P,GAAyG,cAAxE5P,EAAK0G,gBAAgBkJ,EAAeC,EAAc3P,IAAQ,UAAoB,CAC/G,GAAK4P,GAAgBA,EAAYvQ,MAI5B,CAID,MAAMyQ,EAAchQ,EAAKoD,YAAY9B,YACrCvB,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAK8N,EAAYvQ,MAAOS,EAAKmE,QAAS6L,EAAahQ,EAAKyK,oBAExGqF,EAAYvQ,MAAQyQ,CACxB,KAZwC,CACpC,MAAMC,EAAWjQ,EAAKoD,YAAY9B,YAClCwO,EAAc,CAAEvQ,MAAO0Q,EAAUV,gBAAeW,OAAQD,EAC5D,CAYI1Q,GACAQ,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAK8N,EAAYvQ,MAAOS,EAAKiE,SAAU1E,EAAOS,EAAKyK,mBAE3G,MAISqF,IACDA,EAAc,CAAEP,gBAAeW,OAAQlQ,EAAKoE,SAGpDrE,EAAegQ,iBAAiB7P,GAAS4P,CAC7C,EAEJxQ,EAAQ8P,uBAAyBA,C,qCCxHjC,IAAIZ,EAAmB7O,MAAQA,KAAK6O,kBAAqBpP,OAAOqP,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EhK,IAAPgK,IAAkBA,EAAKD,GAC3B,IAAIuB,EAAO/Q,OAAOgR,yBAAyBzB,EAAGC,GACzCuB,KAAS,QAASA,GAAQxB,EAAE0B,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAErB,YAAY,EAAMC,IAAK,WAAa,OAAOJ,EAAEC,EAAI,IAE5DxP,OAAOC,eAAeqP,EAAGG,EAAIsB,EAChC,EAAI,SAAUzB,EAAGC,EAAGC,EAAGC,QACThK,IAAPgK,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGI,EAAgBrP,MAAQA,KAAKqP,cAAiB,SAASL,EAAGrP,GAC1D,IAAK,IAAI2P,KAAKN,EAAa,YAANM,GAAoB7P,OAAOoN,UAAU0C,eAAeC,KAAK7P,EAAS2P,IAAIT,EAAgBlP,EAASqP,EAAGM,EAC3H,EACA7P,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDyP,EAAa,EAAQ,OAAwB1P,GAC7C0P,EAAa,EAAQ,OAAqB1P,GAC1C0P,EAAa,EAAQ,OAA8B1P,GACnD0P,EAAa,EAAQ,OAA0B1P,GAC/C0P,EAAa,EAAQ,OAAwB1P,GAC7C0P,EAAa,EAAQ,OAAkC1P,GACvD0P,EAAa,EAAQ,OAAe1P,E,mCCrBpCF,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkR,eAAY,EAIpB,MAAMA,EACF,WAAA/Q,CAAYF,GACRI,KAAK0B,SAAW,YAChB1B,KAAKJ,MAAQA,CACjB,CACA,MAAAiE,CAAO+I,GACH,QAASA,GAA4B,cAAnBA,EAAMlL,UAA4BkL,EAAMhN,QAAUI,KAAKJ,KAC7E,EAEJD,EAAQkR,UAAYA,C,mCCbpBpR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,G,oBCFtD,MAAMkR,EACJ,WAAAhR,CAAaiR,GACX/Q,KAAKJ,MAAQmR,CACf,CAEA,MAAAlN,CAAQ+I,GACN,QAASA,GAASA,EAAMlL,WAAa1B,KAAK0B,UAAYkL,EAAMhN,QAAUI,KAAKJ,KAC7E,EAGFkR,EAASjE,UAAUnL,SAAW,WAE9Bc,EAAO7C,QAAUmR,C,qCCXjBrR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqR,0BAAuB,EAC/B,MAAMC,EAA0B,EAAQ,OAClCvB,EAAS,EAAQ,OAMvB,MAAMsB,EACF,mBAAAjO,GACI,OAAO,CACX,CACA,YAAMC,CAAOC,EAAY7C,EAAgBC,EAAMC,EAAMV,EAAOW,GACxD,IAAKoG,MAAMC,QAAQhH,GAAQ,CACvB,GAAqB,kBAAVA,EAAoB,CAE3B,MAAMwB,QAAgBhB,EAAeS,WAAWP,GAC1C4Q,EAAoBxB,EAAO1L,KAAKoB,oBAAoBhE,EAASd,EAAKC,EAAQ,IAE1E2C,EAA2B,WAAtBgO,QACC7Q,EAAKoI,sBAAsBrH,EAASxB,SACpCS,EAAKmD,eAAepC,EAASxB,GACzC,GAAIsD,EAAI,CAEJ,MAAMkE,EAAW,CAAE,MAAuB,cAAhBlE,EAAGxB,SAA2BwB,EAAGtD,MAAQA,SAC7DQ,EAAe2P,cAAczP,EAAKuI,MAAM,EAAGvI,EAAKQ,OAAS,GAAIsG,EAAU7G,EAAQ,GAAG,GAExFH,EAAegD,QAAQ7C,EAAQ,GAAK,CAAC2C,EACzC,CACJ,KACK,CAGD,MAAMiO,IAAuB/Q,EAAegD,QAAQ7C,EAAQ,GAEvD4Q,UACM/Q,EAAegD,QAAQ7C,SAE5BH,EAAe2P,cAAczP,EAAKuI,MAAM,EAAGvI,EAAKQ,OAAS,GAAIlB,EAAOW,EAAQ,GAAG,GAChF4Q,IACD/Q,EAAegD,QAAQ7C,EAAQ,GAAKH,EAAegD,QAAQ7C,GAEnE,CAEA,MAAM6Q,QAAoB/Q,EAAKiD,gBAAgBhD,EAAKC,GAAQD,EAAMC,GAC5D0E,EAAuB,OAAhBmM,EACP/Q,EAAKoI,4BAA4BrI,EAAeS,WAAWP,GAAO8Q,GAClE,KACFnM,SAEMgM,EAAwBI,sBAAsBC,sBAAsBlR,EAAgBC,EAAMC,EAAMC,EAAQ,EAAGF,EAAKqE,QAASO,GAAM,SAGnI7E,EAAe2D,oCACzB,CACA3D,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQqR,qBAAuBA,C,qCC3D/B,IAAInC,EAAmB7O,MAAQA,KAAK6O,kBAAqBpP,OAAOqP,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EhK,IAAPgK,IAAkBA,EAAKD,GAC3B,IAAIuB,EAAO/Q,OAAOgR,yBAAyBzB,EAAGC,GACzCuB,KAAS,QAASA,GAAQxB,EAAE0B,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAErB,YAAY,EAAMC,IAAK,WAAa,OAAOJ,EAAEC,EAAI,IAE5DxP,OAAOC,eAAeqP,EAAGG,EAAIsB,EAChC,EAAI,SAAUzB,EAAGC,EAAGC,EAAGC,QACThK,IAAPgK,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGI,EAAgBrP,MAAQA,KAAKqP,cAAiB,SAASL,EAAGrP,GAC1D,IAAK,IAAI2P,KAAKN,EAAa,YAANM,GAAoB7P,OAAOoN,UAAU0C,eAAeC,KAAK7P,EAAS2P,IAAIT,EAAgBlP,EAASqP,EAAGM,EAC3H,EACA7P,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDyP,EAAa,EAAQ,OAAoB1P,GACzC0P,EAAa,EAAQ,OAAsB1P,GAC3C0P,EAAa,EAAQ,OAAuB1P,GAC5C0P,EAAa,EAAQ,OAAkB1P,GACvC0P,EAAa,EAAQ,OAAoB1P,GACzC0P,EAAa,EAAQ,OAAe1P,GACpC0P,EAAa,EAAQ,OAAmB1P,E,wBCtBxC,MAAMkR,EAAY,EAAQ,OAE1B,MAAMU,EACJ,WAAAzR,CAAaF,EAAOkC,EAAUE,GAC5BhC,KAAKJ,MAAQA,EACbI,KAAKgC,SAAWuP,EAAQC,eACxBxR,KAAK8B,SAAW,GAEZA,GACF9B,KAAK8B,SAAWA,EAChB9B,KAAKgC,SAAWuP,EAAQE,oBACfzP,IACThC,KAAKgC,SAAWA,EAEpB,CAEA,MAAA6B,CAAQ+I,GACN,QAASA,GAASA,EAAMlL,WAAa1B,KAAK0B,UAAYkL,EAAMhN,QAAUI,KAAKJ,OACzEgN,EAAM9K,WAAa9B,KAAK8B,UAAY8K,EAAM5K,SAAS6B,OAAO7D,KAAKgC,SACnE,EAGFuP,EAAQ1E,UAAUnL,SAAW,UAE7B6P,EAAQE,mBAAqB,IAAIZ,EAAU,yDAC3CU,EAAQC,eAAiB,IAAIX,EAAU,2CAEvCrO,EAAO7C,QAAU4R,C,mCC1BjB9R,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+M,eAAY,EAIpB,MAAMA,EACF,WAAA5M,CAAYF,GACRI,KAAK0B,SAAW,YAChB1B,KAAKJ,MAAQA,CACjB,CACA,MAAAiE,CAAO+I,GACH,QAASA,GAA4B,cAAnBA,EAAMlL,UAA4BkL,EAAMhN,QAAUI,KAAKJ,KAC7E,EAEJD,EAAQ+M,UAAYA,C,qCCdpBjN,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+R,kBAAe,EAEvB,MAAM/O,EAAS,EAAQ,OACjBsB,EAA0B,EAAQ,OAClC0N,EAAW,EAAQ,OACnBC,EAA2B,EAAQ,OACnCzN,EAA0B,EAAQ,OAClC0N,EAAgC,EAAQ,OACxCZ,EAA0B,EAAQ,OAClCa,EAA+B,EAAQ,OACvCC,EAA6B,EAAQ,OACrCC,EAA0B,EAAQ,OAClCC,EAAgC,EAAQ,OACxCC,EAA4B,EAAQ,OACpCC,EAA4B,EAAQ,OACpCC,EAAuC,EAAQ,OAC/CC,EAA6B,EAAQ,OACrCC,EAAmB,EAAQ,OAC3B5C,EAAS,EAAQ,OACjB6C,EAAqB,EAAQ,MAInC,MAAMb,UAAqBC,EAASa,UAChC,WAAA1S,CAAY8C,GACRC,MAAM,CAAE4P,oBAAoB,IAC5B7P,EAAUA,GAAW,CAAC,EACtB5C,KAAK4C,QAAUA,EACf5C,KAAKI,eAAiB,IAAIkS,EAAiBI,eAAejT,OAAO+N,OAAO,CAAEmF,OAAQ3S,MAAQ4C,IAC1F5C,KAAKK,KAAO,IAAIqP,EAAO1L,KAAK,CAAEP,YAAab,EAAQa,YAAarD,eAAgBJ,KAAKI,iBACrFJ,KAAK4S,WAAa,IAAIjQ,EACtB3C,KAAK6S,YAAc,GACnB7S,KAAK8S,SAAW,GAChB9S,KAAK+S,oBAAsB,GAC3B/S,KAAKgT,UAAY,EACjBhT,KAAKiT,SAAW,GAChBjT,KAAKkT,eAAiBC,QAAQC,UAC9BpT,KAAKqT,4BACLrT,KAAKyN,GAAG,OAAO,KACyB,qBAAzBzN,KAAK4S,WAAWU,MACvBtT,KAAK2N,KAAK,QAAS,IAAIpL,MAAM,qBACjC,GAER,CAgBA,uBAAOgR,CAAiBC,EAASC,EAAWC,EAAS9Q,GACjD,IAAIxB,EA0BA2M,EAxBJ,GAAkB,wBAAd0F,EAAqC,CAErC,GAAkB,qBAAdA,IAAqCA,EAAUE,SAAS,SACxD,MAAM,IAAI1P,EAAwBqC,WAAW,kCAAkCmN,IAAaxP,EAAwBsC,YAAYqN,yBAgBpI,GAbIF,GAAWA,EAAQG,IAAI,SACvBH,EAAQI,SAAQ,CAAClU,EAAOc,KACpB,GAAY,SAARA,EAAgB,CAChB,MAAMqT,EAAaxB,EAAmByB,MAAMpU,GAC5C,IAAK,MAAMqU,KAAQF,EAAW3E,IAAI,MAAO,wCAAyC,CAC9E,GAAIhO,EACA,MAAM,IAAI6C,EAAwBqC,WAAW,uDAAyDkN,EAASvP,EAAwBsC,YAAY2N,+BAEvJ9S,EAAU6S,EAAKE,GACnB,CACJ,MAGH/S,KAAyB,OAAZwB,QAAgC,IAAZA,OAAqB,EAASA,EAAQwR,gCACxE,MAAM,IAAInQ,EAAwBqC,WAAW,8CAA8CmN,QAAgBD,IAAWvP,EAAwBsC,YAAYqN,wBAElK,CAGA,GAAIF,GAAWA,EAAQG,IAAI,gBAAiB,CACxC,MAAMQ,EAAcX,EAAQtE,IAAI,gBAC1BkF,EAAQ,qBAAqBC,KAAKF,GACpCC,GAAsB,2CAAbA,EAAM,KACfvG,GAAmB,EAE3B,CACA,OAAO,IAAI2D,EAAajS,OAAO+N,OAAO,CAAEgG,UACpCpS,UACA2M,oBAAoBnL,GAAoB,CAAC,GACjD,CAMA,MAAAyK,CAAOmH,GACH,MAAMjH,EAAS,IAAIoE,EAAS8C,YAAY,CAAEhC,oBAAoB,IAC9D+B,EAAO/G,GAAG,SAAUiH,GAAUC,EAAOhH,KAAK,QAAS+G,KACnDF,EAAO/G,GAAG,QAASmH,GAASrH,EAAOzJ,KAAK8Q,KACxCJ,EAAO/G,GAAG,OAAO,IAAMF,EAAOzJ,KAAK,QACnC,MAAM6Q,EAASpH,EAAOsH,KAAK,IAAInD,EAAa1R,KAAK4C,UACjD,OAAO+R,CACX,CACA,UAAAG,CAAWC,EAAOC,EAAUC,GACxBjV,KAAK4S,WAAWsC,MAAMH,GACtB/U,KAAKkT,eACA/R,MAAK,IAAM8T,MAAaP,GAAUO,EAASP,IACpD,CAYA,mBAAM3E,CAAczP,EAAMV,EAAOW,EAAO4U,GACpC,IAAIC,GAAc,EAGlB,GAAID,GAAkB5U,EAAQP,KAAKgT,UAAW,CAE1C,MAAM7C,EAAcnQ,KAAKI,eAAegQ,iBAAiBpQ,KAAKgT,WAC1D7C,IAEIA,EAAYvQ,OACZI,KAAK2N,KAAK,OAAQ3N,KAAKK,KAAKoD,YAAYpB,KAAK8N,EAAYvQ,MAAOI,KAAKK,KAAKmE,QAASxE,KAAKK,KAAKoE,OAAQzE,KAAKK,KAAKyK,oBAGnHqF,EAAYI,OAAOrD,UAAW,EAC9BlN,KAAKI,eAAegD,QAAQ+M,EAAYP,cAAgB,GAAK,CAACO,EAAYI,QAC1EvQ,KAAKI,eAAegQ,iBAAiBiF,OAAOrV,KAAKgT,UAAW,UAItD7O,EAAwB0H,sBAAsByJ,6BAA6BtV,KAAKI,eAAgBJ,KAAKiT,SAAUjT,KAAKgT,YAC1HhT,KAAKI,eAAemV,6BACfzR,KAAK,CAAEvD,MAAOP,KAAKgT,UAAW1S,KAAMN,KAAKiT,SAASpK,MAAM,EAAG7I,KAAKiT,SAASnS,UAC9EsU,GAAc,SAGRpV,KAAKwV,YAAYxV,KAAKgT,UAAWhT,KAAKiT,SAEpD,CACA,MAAMvS,QAAYV,KAAKK,KAAKmH,eAAelH,EAAKC,GAAQD,EAAMC,GACxDoF,QAAkB3F,KAAKK,KAAKiL,qBAAqBhL,EAAMC,GAC7DP,KAAKI,eAAe+C,aAAa5C,IAAS,EAC1C,IAAIkV,GAAY,EAEZxR,EAAwBD,KAAKqH,eAAe3K,IAAsB,aAAdiF,GAAoC,aAARjF,GAChFV,KAAK2N,KAAK,QAAS,IAAI1J,EAAwBqC,WAAW,kBAAkB1G,iCAAsCqE,EAAwBsC,YAAYmP,+BAI1J,IAAIlV,GAAa,EACbR,KAAKI,eAAeuV,gBAAgB7U,OAAS,IAC7CN,EAAaR,KAAKI,eAAeuV,gBAAgB3V,KAAKI,eAAeuV,gBAAgB7U,OAAS,GAAG8U,UAErG,IAAK,IAAI3P,EAAI4P,KAAKC,IAAI,EAAG9V,KAAKI,eAAeuV,gBAAgB7U,OAAS,GAAImF,EAAI3F,EAAKQ,OAAS,EAAGmF,IAAK,CAChG,MAAM8P,EAAmB/V,KAAKI,eAAeuV,gBAAgB1P,KACrDjG,KAAKI,eAAeuV,gBAAgB1P,SAAWjG,KAAKgW,YAAY1V,EAAKuI,MAAM,EAAG5C,EAAI,GAAIA,EAAGzF,IACjG,IAAKuV,EAAiBE,MAAO,CACzBjW,KAAKI,eAAe+C,aAAa5C,IAAS,EAC1CkV,GAAY,EACZ,KACJ,EACUjV,GAAcuV,EAAiBH,WACrCpV,GAAa,EAErB,CAMA,GAJIR,KAAKK,KAAKoL,UAAUlL,KACpBkV,GAAY,GAGZA,EACA,IAAK,MAAMS,KAAgBxE,EAAayE,eAAgB,CACpD,MAAMC,QAAmBF,EAAazV,KAAKT,KAAKI,eAAgBJ,KAAKK,KAAMK,EAAKJ,EAAMC,GACtF,GAAI6V,EAAY,OAENF,EAAalT,OAAOhD,KAAKI,eAAgBJ,KAAKK,KAAMK,EAAKJ,EAAMV,EAAOW,EAAO6V,GAE/EF,EAAahW,qBACbF,KAAKI,eAAe4N,gBAAgBzN,IAAS,GAEjD,KACJ,CACJ,CAGU,IAAVA,GAAeoG,MAAMC,QAAQhH,UACvBI,KAAKK,KAAK6F,qBAAqBtG,GAGrCwV,GAAe7U,EAAQP,KAAKgT,WAE5BhT,KAAKoV,YAAYpV,KAAKgT,WAE1BhT,KAAKgT,UAAYzS,EACjBP,KAAKiT,SAAW3S,EAEhBN,KAAKI,eAAe8K,2BAA2BmK,OAAO9U,EAAQ,EAClE,CAKA,WAAA6U,CAAY7U,GACRP,KAAKI,eAAe4N,gBAAgBqH,OAAO9U,EAAO,GAClDP,KAAKI,eAAe6N,eAAeoH,OAAO9U,EAAO,GACjDP,KAAKI,eAAe+C,aAAakS,OAAO9U,EAAO,GAC/CP,KAAKI,eAAegD,QAAQiS,OAAO9U,EAAO,GAC1CP,KAAKI,eAAeiW,WAAWhB,OAAO9U,EAAQ,EAAG,GACjDP,KAAKI,eAAe2I,wBAAwBsM,OAAO9U,EAAO,GAC1DP,KAAKI,eAAeuL,iBAAiB0J,OAAO9U,EAAO,GACnDP,KAAKI,eAAeuV,gBAAgBN,OAAO9U,EAAQ,EAAG,GACtDP,KAAKI,eAAesL,aAAa2J,OAAO9U,EAAOP,KAAKI,eAAesL,aAAa5K,OAASP,EAE7F,CAUA,iBAAMiV,CAAYjV,EAAOD,GACrB,IAAIgW,EAAWtW,KAAKI,eAAegD,QAAQ7C,GACtC+V,IACDA,EAAWtW,KAAKI,eAAegD,QAAQ7C,GAAS,CAACP,KAAKK,KAAKoD,YAAY9B,cAG3E,MAAM4U,EAAcvW,KAAKI,eAAesO,yBAAyBnO,GACjE,GAAIgW,EAAa,CACb,IAAK,MAAMtU,KAAWqU,EAAU,CAC5B,MAAME,QAAyBxW,KAAKK,KAAKuL,oBAAoBrL,EAAOD,GAC9DmW,EAAUzW,KAAKI,eAAeiW,WAAW9V,IAAUiW,GAAoB,EACvExW,KAAKI,eAAegD,QAAQ7C,EAAQiW,EAAmB,GACvD,OAAOxW,KAAKK,KAAK6L,uBAAuB5L,EAAMC,IACpD,GAAIkW,EACA,IAAK,MAAMrU,KAASqU,EAAQ,CAExBzW,KAAKI,eAAe+C,aAAa5C,IAAS,EAC1C,IAAK,MAAMmW,KAAiBH,EACpBG,EAAcC,QACd3W,KAAKI,eAAe2K,SAASxK,EAAOP,KAAKK,KAAKoD,YAAYpB,KAAKqU,EAAcvU,OAAQuU,EAAcxU,UAAWD,EAASG,IAGvHpC,KAAKI,eAAe2K,SAASxK,EAAOP,KAAKK,KAAKoD,YAAYpB,KAAKJ,EAASyU,EAAcxU,UAAWwU,EAAcvU,OAAQC,GAGnI,KAEC,CAED,MAAMwU,EAAiB5W,KAAKI,eAAeyW,+BAA+BtW,QAAcP,KAAKK,KAAKuL,oBAAoBrL,EAAOD,GAAQ,GACrI,IAAK,MAAMoW,KAAiBH,EACpBG,EAAcC,QACdC,EAAe9S,KAAK,CAChB3B,OAAQF,EACRC,UAAWwU,EAAcxU,UACzBD,QAASyU,EAAcvU,SAI3ByU,EAAe9S,KAAK,CAChB3B,OAAQuU,EAAcvU,OACtBD,UAAWwU,EAAcxU,UACzBD,WAIhB,CACJ,CACAjC,KAAKI,eAAesO,yBAAyB2G,OAAO9U,EAAO,GAC3DP,KAAKI,eAAesL,aAAa2J,OAAO9U,EAAO,GAC/CP,KAAKI,eAAeuL,iBAAiB0J,OAAO9U,EAAO,EACvD,CAEA,MAAMuW,EAAc9W,KAAKI,eAAeuO,yBAAyBpO,GACjE,GAAIuW,EAAa,CACb,IAAK,MAAM7U,KAAWqU,EAAU,CAI5B,MAAMlU,EAAkB,IAAV7B,GAAoC,cAArB0B,EAAQP,UAC7B1B,KAAKI,eAAe2W,mBAAmD9U,EAA9BjC,KAAKK,KAAKyK,kBAC3D9K,KAAKI,eAAe+C,aAAa5C,IAAS,EAC1C,IAAK,MAAMmW,KAAiBI,EACxB9W,KAAKI,eAAe2K,SAASxK,EAAOP,KAAKK,KAAKoD,YAAYpB,KAAKqU,EAAczU,QAASyU,EAAcxU,UAAWwU,EAAcvU,OAAQC,GAE7I,CACApC,KAAKI,eAAeuO,yBAAyB0G,OAAO9U,EAAO,EAC/D,CACJ,CAQA,iBAAMyV,CAAY1V,EAAMC,EAAOC,GAC3B,IAAK,MAAM0V,KAAgBxE,EAAayE,eACpC,SAAUD,EAAa/V,SAASH,KAAKI,eAAgBJ,KAAKK,KAAMC,EAAMC,EAAOC,GACzE,MAAO,CAAEyV,OAAO,EAAML,SAAUpV,GAAc0V,EAAajW,qBAGnE,MAAO,CAAEgW,OAAO,EAAOL,UAAU,EACrC,CAMA,yBAAAvC,GAEIrT,KAAK4S,WAAWoE,QAAWpX,IACvB,MAAMW,EAAQP,KAAK4S,WAAWqE,MAAMnW,OAC9BR,EAAQ,IAAIqG,MAAMpG,EAAQ,GAAG2W,KAAK,GAAIC,KAAI,CAACC,EAAGnR,IACzCA,IAAM1F,EAAQP,KAAK4S,WAAWlS,IAAMV,KAAK4S,WAAWqE,MAAMhR,GAAGvF,MAExE,IAAKV,KAAKqX,sBAAsB9W,GAAQ,CACpC,MAAM+W,EAAa,IAAMtX,KAAK+P,cAAczP,EAAMV,EAAOW,GAAO,GAChE,GAAKP,KAAKI,eAAe2N,kBACjB/N,KAAKI,eAAegO,YAAYvN,WAAWP,EAAKuI,MAAM,GAAI,IAwB9D7I,KAAKkT,eAAiBlT,KAAKkT,eAAe/R,KAAKmW,QAlB/C,GAAoB,aAAhBhX,EAAKC,GAAuB,CAC5B,IAAIgX,EAAOvX,KAAK6S,YAAYtS,GACvBgX,IACDA,EAAOvX,KAAK6S,YAAYtS,GAAS,IAErCgX,EAAKzT,KAAKwT,EACd,KACyB,UAAhBhX,EAAKC,IACgB,kBAAhBD,EAAKC,IAA2C,UAApBD,EAAKC,EAAQ,GAEnDP,KAAK8S,SAAShP,KAAK,CAAE0T,IAAKF,EAAYhX,KAAMA,EAAKuI,MAAM,EAAGvI,EAAKQ,OAAS,KAGxEd,KAAK+S,oBAAoBjP,KAAK,CAAE0T,IAAKF,EAAYhX,SAQpDN,KAAKI,eAAe2N,kBAA8B,IAAVxN,IACzCP,KAAKkT,eAAiBlT,KAAKkT,eACtB/R,MAAK,IAAMnB,KAAKyX,wBAE7B,GAEJzX,KAAK4S,WAAW8E,QAAWhD,IACvB1U,KAAK2N,KAAK,QAAS+G,EAAM,CAEjC,CAMA,qBAAA2C,CAAsB9W,GAClB,IAAK,IAAI0F,EAAI1F,EAAO0F,EAAI,EAAGA,IACvB,GAAyC,aAArCjG,KAAK4S,WAAWqE,MAAMhR,EAAI,GAAGvF,IAC7B,OAAO,EAGf,OAAO,CACX,CAKA,yBAAM+W,GAEF,IAAK,MAAMF,KAAQvX,KAAK6S,YACpB,GAAI0E,EACA,IAAK,MAAMC,KAAOD,QACRC,IAKlBxX,KAAKI,eAAe8K,2BAA2BmK,OAAO,GAEtD,IAAK,MAAMmC,KAAOxX,KAAK+S,oBAAqB,CAGxC,GAAI/S,KAAK8S,SAAShS,OAAS,EAAG,CAE1B,MAAM6W,EAAqB,GACrBC,EAAuB,GAC7B,IAAK,IAAI3R,EAAI,EAAGA,EAAIjG,KAAK8S,SAAShS,OAAQmF,IAAK,CAC3C,MAAM4R,EAAU7X,KAAK8S,SAAS7M,GAC1ByJ,EAAO1L,KAAK8B,cAAc+R,EAAQvX,KAAMkX,EAAIlX,QAC5CqX,EAAmB7T,KAAK+T,GACxBD,EAAqB9T,KAAKmC,GAElC,CAEA,MAAM6R,EAAiBH,EAAmBI,MAAK,CAACC,EAAMC,IAASD,EAAK1X,KAAKQ,OAASmX,EAAK3X,KAAKQ,SAE5F,IAAK,MAAM+W,KAAWC,QACZD,EAAQL,MAIlB,MAAMU,EAA6BN,EAAqBG,OAAOpB,UAC/D,IAAK,MAAMwB,KAASD,EAChBlY,KAAK8S,SAASuC,OAAO8C,EAAO,EAEpC,OACMX,EAAIA,KACd,CACJ,EAEJ7X,EAAQ+R,aAAeA,EACvBA,EAAa0G,wBAA0B,MACvC1G,EAAayE,eAAiB,CAC1B,IAAIvE,EAAyBnC,uBAC7B,IAAIqC,EAA6BhE,2BACjC,IAAIkE,EAAwBlF,sBAC5B,IAAImF,EAA8BoG,4BAClC,IAAItG,EAA2BuG,yBAC/B,IAAIpG,EAA0B3D,wBAC9B,IAAI4D,EAA0BoG,wBAC9B,IAAIlG,EAA2B5D,yBAC/B,IAAItK,EAAwB0H,sBAC5B,IAAIuG,EAAqCoG,mCACzC,IAAIvH,EAAwBI,sBAC5B,IAAIQ,EAA8BhE,4B,iDCjclC4K,EAAI,CAAC,EAELC,EAAgBD,EAAEC,WAAgB,EAClCC,EAAgBF,EAAEE,YAAgB,EAClCC,EAAgBH,EAAEG,aAAgB,EAClCC,EAAgBJ,EAAEI,cAAgB,EAClCC,EAAgBL,EAAEK,MAAgB,EAClCC,EAAgBN,EAAEM,MAAgB,EAClCC,EAAgBP,EAAEO,KAAgB,EAClCC,EAAgBR,EAAEQ,MAAgB,EAClCC,EAAgBT,EAAES,KAAgB,EAClCC,EAAgBV,EAAEU,OAAgB,GAClCC,EAAgBX,EAAEW,OAAgB,GAElCC,EAAUZ,EAAEY,MAAU,GACtBC,EAAUb,EAAEa,KAAU,GACtBC,EAAUd,EAAEc,MAAU,GACtBC,EAAUf,EAAEe,MAAU,GACtBC,EAAUhB,EAAEgB,MAAU,GACtBC,EAAUjB,EAAEiB,OAAU,GACtBC,EAAUlB,EAAEkB,OAAU,GACtBC,EAAUnB,EAAEmB,OAAU,GACtBC,EAAUpB,EAAEoB,OAAU,GACtBC,EAAUrB,EAAEqB,MAAU,GACtBC,EAAUtB,EAAEsB,MAAU,GACtBC,EAAUvB,EAAEuB,MAAU,GACtBC,EAAUxB,EAAEwB,QAAU,GACtBC,EAAUzB,EAAEyB,QAAU,GACtBC,EAAU1B,EAAE0B,QAAU,GACtBC,EAAU3B,EAAE2B,QAAU,GACtBC,EAAU5B,EAAE4B,QAAU,GACtBC,EAAU7B,EAAE6B,QAAU,IACtBC,EAAU9B,EAAE8B,QAAU,IACtBC,EAAU/B,EAAE+B,QAAU,IAEtBC,EAAUhC,EAAEgC,MAAU,IACtBC,EAAUjC,EAAEiC,IAAU,IAEtBC,EAAUlC,EAAEkC,OAAU,IACtBC,EAAUnC,EAAEmC,MAAU,IAEtBC,EAAkB,KAAKC,WAAW,GAClCC,EAAkB,IAAKD,WAAW,GAClCE,EAAkB,KAAKF,WAAW,GAClCG,EAAkB,KAAKH,WAAW,GAClCI,EAAkB,KAAKJ,WAAW,GAClCK,EAAkB,KAAKL,WAAW,GAClCM,EAAkB,KAAKN,WAAW,GAElCO,EAAqB,MAEzB,SAAS1Y,IACP3C,KAAKsb,OAASjC,EACdrZ,KAAKJ,WAAQsF,EAEblF,KAAKub,YAASrW,EACdlF,KAAKwb,aAAeC,EAAOC,MAAQD,EAAOC,MAAML,GAAsB,IAAII,EAAOJ,GACjFrb,KAAK2b,mBAAqB,EAC1B3b,KAAK4b,aAAU1W,EACflF,KAAK6b,mBAAgB3W,EAErBlF,KAAKU,SAAMwE,EACXlF,KAAKsT,UAAOpO,EACZlF,KAAKiX,MAAQ,GACbjX,KAAK8b,MAAQrB,EACbza,KAAK+b,gBAAkB,EACvB/b,KAAKgc,kBAAoB,EACzBhc,KAAKic,WAAa,CAAE,EAAK,IAAIR,EAAO,GAAI,EAAK,IAAIA,EAAO,GAAI,EAAK,IAAIA,EAAO,IAG5Ezb,KAAKkc,QAAU,CACjB,CAGAvZ,EAAOwZ,OAAS,SAAUC,GAExB,IADA,IAAI9b,EAAOb,OAAOa,KAAKmY,GACdxS,EAAI,EAAGoW,EAAI/b,EAAKQ,OAAQmF,EAAIoW,EAAGpW,IAAK,CAC3C,IAAIvF,EAAMJ,EAAK2F,GACf,GAAIwS,EAAE/X,KAAS0b,EAAQ,OAAO1b,CAChC,CACA,OAAO0b,GAAS,KAAOA,EAAKjT,SAAS,GACvC,EAEA,IAAImT,EAAQ3Z,EAAOkK,UACnByP,EAAM5E,QAAU,SAAU9J,GAAO,MAAMA,CAAK,EAC5C0O,EAAMC,UAAY,SAAUC,EAAQvW,GAClCjG,KAAKsb,OAAShC,EACdtZ,KAAK0X,QAAQ,IAAInV,MAAM,cAAgB8E,KAAKC,UAAUmV,OAAOC,aAAaF,EAAOvW,KAAO,gBAAkBA,EAAI,aAAetD,EAAOwZ,OAAOnc,KAAKsb,SAClJ,EACAgB,EAAMK,iBAAmB,SAAUC,GAC7B5c,KAAK2b,oBAAsBN,IAC7Brb,KAAKub,QAAUvb,KAAKwb,aAAarS,SAAS,QAC1CnJ,KAAK2b,mBAAqB,GAG5B3b,KAAKwb,aAAaxb,KAAK2b,sBAAwBiB,CACjD,EACAN,EAAMO,gBAAkB,SAAUC,EAAKC,EAAOC,GAC5C,IAAIC,EAAOH,EAAIhc,OACM,kBAAVic,IAILE,EAHe,kBAARD,EACLA,EAAM,EAEDF,EAAIhc,OAASic,EAAQC,EAErBA,EAAMD,EAGRD,EAAIhc,OAASic,GAIpBE,EAAO,IACTA,EAAO,GAGLjd,KAAK2b,mBAAqBsB,EAAO5B,IACnCrb,KAAKub,QAAUvb,KAAKwb,aAAarS,SAAS,OAAQ,EAAGnJ,KAAK2b,oBAC1D3b,KAAK2b,mBAAqB,GAG5BmB,EAAII,KAAKld,KAAKwb,aAAcxb,KAAK2b,mBAAoBoB,EAAOC,GAC5Dhd,KAAK2b,oBAAsBsB,CAC7B,EACAX,EAAMpH,MAAQ,SAAUsH,GAEtB,IAAIW,EADkB,kBAAXX,IAAqBA,EAAS,IAAIf,EAAOe,IAEpD,IAAK,IAAIvW,EAAI,EAAGoW,EAAIG,EAAO1b,OAAQmF,EAAIoW,EAAGpW,IACxC,GAAIjG,KAAKsb,SAAWjC,GAGlB,GAFA8D,EAAIX,EAAOvW,GACXjG,KAAKkc,SACI,MAANiB,EAAand,KAAKod,QAAQ1E,EAAY,UACnC,GAAS,MAANyE,EAAand,KAAKod,QAAQzE,EAAa,UAC1C,GAAS,KAANwE,EAAand,KAAKod,QAAQxE,EAAc,UAC3C,GAAS,KAANuE,EAAand,KAAKod,QAAQvE,EAAe,UAC5C,GAAS,KAANsE,EAAand,KAAKod,QAAQtE,EAAO,UACpC,GAAS,KAANqE,EAAand,KAAKod,QAAQrE,EAAO,UACpC,GAAS,MAANoE,EAAand,KAAKsb,OAAS/B,OAC9B,GAAS,MAAN4D,EAAand,KAAKsb,OAAS5B,OAC9B,GAAS,MAANyD,EAAand,KAAKsb,OAASxB,OAC9B,GAAS,KAANqD,EACPnd,KAAKub,OAAS,GACdvb,KAAK2b,mBAAqB,EAC1B3b,KAAKsb,OAASnB,OACV,GAAS,KAANgD,EAAand,KAAKub,OAAS,IAAKvb,KAAKsb,OAASrB,OAErD,GAAIkD,GAAK,IAAQA,EAAI,GACnBnd,KAAKub,OAASkB,OAAOC,aAAaS,GAAInd,KAAKsb,OAASpB,OAC/C,GAAU,KAANiD,GAAoB,IAANA,GAAoB,KAANA,GAAoB,KAANA,EAGnD,OAAOnd,KAAKuc,UAAUC,EAAQvW,QAG9B,GAAIjG,KAAKsb,SAAWnB,EAIxB,GAHAgD,EAAIX,EAAOvW,GAGPjG,KAAK+b,gBAAkB,EAAG,CAC5B,IAAK,IAAIsB,EAAI,EAAGA,EAAIrd,KAAK+b,gBAAiBsB,IACxCrd,KAAKic,WAAWjc,KAAKgc,mBAAmBhc,KAAKgc,kBAAoBhc,KAAK+b,gBAAkBsB,GAAKb,EAAOa,GAGtGrd,KAAK6c,gBAAgB7c,KAAKic,WAAWjc,KAAKgc,oBAC1Chc,KAAKgc,kBAAoBhc,KAAK+b,gBAAkB,EAChD9V,EAAIA,EAAIoX,EAAI,CACd,MAAO,GAA6B,IAAzBrd,KAAK+b,iBAAyBoB,GAAK,IAAK,CACjD,GAAIA,GAAK,KAAOA,EAAI,IAClB,OAAOnd,KAAK0X,QAAQ,IAAInV,MAAM,uCAAyC0D,EAAI,aAAetD,EAAOwZ,OAAOnc,KAAKsb,UAK/G,GAHK6B,GAAK,KAASA,GAAK,MAAMnd,KAAKgc,kBAAoB,GAClDmB,GAAK,KAASA,GAAK,MAAMnd,KAAKgc,kBAAoB,GAClDmB,GAAK,KAASA,GAAK,MAAMnd,KAAKgc,kBAAoB,GAClDhc,KAAKgc,kBAAoB/V,EAAKuW,EAAO1b,OAAQ,CAChD,IAAK,IAAImO,EAAI,EAAGA,GAAMuN,EAAO1b,OAAS,EAAImF,EAAIgJ,IAC5CjP,KAAKic,WAAWjc,KAAKgc,mBAAmB/M,GAAKuN,EAAOvW,EAAIgJ,GAE1DjP,KAAK+b,gBAAmB9V,EAAIjG,KAAKgc,kBAAqBQ,EAAO1b,OAC7DmF,EAAIuW,EAAO1b,OAAS,CACtB,MACEd,KAAK6c,gBAAgBL,EAAQvW,EAAGA,EAAIjG,KAAKgc,mBACzC/V,EAAIA,EAAIjG,KAAKgc,kBAAoB,CAErC,MAAO,GAAU,KAANmB,EACTnd,KAAKsb,OAASjC,EACdrZ,KAAKub,QAAUvb,KAAKwb,aAAarS,SAAS,OAAQ,EAAGnJ,KAAK2b,oBAC1D3b,KAAK2b,mBAAqB,EAC1B3b,KAAKod,QAAQjE,EAAQnZ,KAAKub,QAC1Bvb,KAAKkc,QAAUT,EAAO6B,WAAWtd,KAAKub,OAAQ,QAAU,EACxDvb,KAAKub,YAASrW,OAEX,GAAU,KAANiY,EACPnd,KAAKsb,OAASlB,MAEX,MAAI+C,GAAK,IAEV,OAAOnd,KAAKuc,UAAUC,EAAQvW,GAFZjG,KAAK2c,iBAAiBQ,EAG5C,MACI,GAAInd,KAAKsb,SAAWlB,EAExB,GADA+C,EAAIX,EAAOvW,GACF,KAANkX,EAAand,KAAK2c,iBAAiBQ,GAAInd,KAAKsb,OAASnB,OAClD,GAAS,KAANgD,EAAand,KAAK2c,iBAAiB9B,GAAa7a,KAAKsb,OAASnB,OACjE,GAAS,KAANgD,EAAand,KAAK2c,iBAAiB5B,GAAgB/a,KAAKsb,OAASnB,OACpE,GAAS,KAANgD,EAAand,KAAK2c,iBAAiB3B,GAAYhb,KAAKsb,OAASnB,OAChE,GAAS,MAANgD,EAAand,KAAK2c,iBAAiB1B,GAAYjb,KAAKsb,OAASnB,OAChE,GAAS,MAANgD,EAAand,KAAK2c,iBAAiBzB,GAAUlb,KAAKsb,OAASnB,OAC9D,GAAS,MAANgD,EAAand,KAAK2c,iBAAiBxB,GAAkBnb,KAAKsb,OAASnB,OACtE,GAAS,MAANgD,EAAand,KAAK2c,iBAAiBvB,GAAMpb,KAAKsb,OAASnB,MAC1D,IAAS,MAANgD,EAEP,OAAOnd,KAAKuc,UAAUC,EAAQvW,GAFVjG,KAAK4b,QAAU,GAAI5b,KAAKsb,OAASjB,CAGvD,MACI,GAAIra,KAAKsb,SAAWjB,GAAWra,KAAKsb,SAAWhB,GAAWta,KAAKsb,SAAWf,GAAWva,KAAKsb,SAAWd,EAAQ,CAGjH,GAFA2C,EAAIX,EAAOvW,KAENkX,GAAK,IAAQA,EAAI,IAAUA,EAAI,IAAQA,GAAK,IAAUA,EAAI,IAAQA,GAAK,KAoB1E,OAAOnd,KAAKuc,UAAUC,EAAQvW,GAlB9B,GADAjG,KAAK4b,SAAWa,OAAOC,aAAaS,GAChCnd,KAAKsb,WAAad,EAAS,CAC7B,IAAI+C,EAASC,SAASxd,KAAK4b,QAAS,IACpC5b,KAAK4b,aAAU1W,OACYA,IAAvBlF,KAAK6b,eAA+B0B,GAAU,OAAUA,EAAS,OACnEvd,KAAK6c,gBAAgB,IAAIpB,EAAOgB,OAAOC,aAAa1c,KAAK6b,cAAe0B,KACxEvd,KAAK6b,mBAAgB3W,QACWA,IAAvBlF,KAAK6b,eAA+B0B,GAAU,OAAUA,EAAS,MAC1Evd,KAAK6b,cAAgB0B,QAEMrY,IAAvBlF,KAAK6b,gBACP7b,KAAK6c,gBAAgB,IAAIpB,EAAOgB,OAAOC,aAAa1c,KAAK6b,iBACzD7b,KAAK6b,mBAAgB3W,GAEvBlF,KAAK6c,gBAAgB,IAAIpB,EAAOgB,OAAOC,aAAaa,MAEtDvd,KAAKsb,OAASnB,CAChB,CAIJ,MAAO,GAAIna,KAAKsb,SAAWrB,GAAWja,KAAKsb,SAAWpB,EAGlD,OAFAiD,EAAIX,EAAOvW,GAEHkX,GACN,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,GACL,KAAK,GACL,KAAK,GACHnd,KAAKub,QAAUkB,OAAOC,aAAaS,GACnCnd,KAAKsb,OAASpB,EACd,MACF,QACEla,KAAKsb,OAASjC,EACd,IAAIoE,EAAStT,OAAOnK,KAAKub,QAEzB,GAAImC,MAAMD,GACR,OAAOzd,KAAKuc,UAAUC,EAAQvW,GAG3BjG,KAAKub,OAAOjH,MAAM,WAAatU,KAAKub,QAAYkC,EAAOtU,YAAcnJ,KAAKub,OAE7Evb,KAAKod,QAAQjE,EAAQnZ,KAAKub,QAE1Bvb,KAAKod,QAAQhE,EAAQqE,GAGvBzd,KAAKkc,QAAUlc,KAAKub,OAAOza,OAAS,EACpCd,KAAKub,YAASrW,EACde,IACA,WAEF,GAAIjG,KAAKsb,SAAW/B,EAAM,CAC9B,GAAkB,MAAdiD,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAAS9B,CAE1C,MAAM,GAAIxZ,KAAKsb,SAAW9B,EAAM,CAC9B,GAAkB,MAAdgD,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAAS7B,CAE1C,MAAM,GAAIzZ,KAAKsb,SAAW7B,EAAM,CAC9B,GAAkB,MAAd+C,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAASjC,EAAOrZ,KAAKod,QAAQpE,GAAM,GAAOhZ,KAAKkc,QAAS,CAEzF,MAAM,GAAIlc,KAAKsb,SAAW5B,EAAO,CAC/B,GAAkB,KAAd8C,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAAS3B,CAE1C,MAAM,GAAI3Z,KAAKsb,SAAW3B,EAAO,CAC/B,GAAkB,MAAd6C,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAAS1B,CAE1C,MAAM,GAAI5Z,KAAKsb,SAAW1B,EAAO,CAC/B,GAAkB,MAAd4C,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAASzB,CAE1C,MAAM,GAAI7Z,KAAKsb,SAAWzB,EAAO,CAC/B,GAAkB,MAAd2C,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAASjC,EAAOrZ,KAAKod,QAAQnE,GAAO,GAAQjZ,KAAKkc,QAAS,CAE3F,MAAM,GAAIlc,KAAKsb,SAAWxB,EAAM,CAC9B,GAAkB,MAAd0C,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAASvB,CAE1C,MAAM,GAAI/Z,KAAKsb,SAAWvB,EAAM,CAC9B,GAAkB,MAAdyC,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAAStB,CAE1C,MAAM,GAAIha,KAAKsb,SAAWtB,EAAM,CAC9B,GAAkB,MAAdwC,EAAOvW,GACJ,OAAOjG,KAAKuc,UAAUC,EAAQvW,GADXjG,KAAKsb,OAASjC,EAAOrZ,KAAKod,QAAQlE,EAAM,MAAOlZ,KAAKkc,QAAU,CAE1F,CAEJ,EACAI,EAAMc,QAAU,SAAUO,EAAO/d,GAEjC,EAEA0c,EAAMsB,WAAa,SAAUD,EAAO/d,GAClCI,KAAKsb,OAAShC,EACdtZ,KAAK0X,QAAQ,IAAInV,MAAM,cAAgBI,EAAOwZ,OAAOwB,IAAU/d,EAAS,IAAMyH,KAAKC,UAAU1H,GAAS,IAAO,IAAM,aAAe+C,EAAOwZ,OAAOnc,KAAK8b,QACvJ,EACAQ,EAAMxY,KAAO,WACX9D,KAAKiX,MAAMnT,KAAK,CAAClE,MAAOI,KAAKJ,MAAOc,IAAKV,KAAKU,IAAK4S,KAAMtT,KAAKsT,MAChE,EACAgJ,EAAMuB,IAAM,WACV,IAAIje,EAAQI,KAAKJ,MACbke,EAAS9d,KAAKiX,MAAM4G,MACxB7d,KAAKJ,MAAQke,EAAOle,MACpBI,KAAKU,IAAMod,EAAOpd,IAClBV,KAAKsT,KAAOwK,EAAOxK,KACnBtT,KAAK2N,KAAK/N,GACLI,KAAKsT,OAAQtT,KAAK8b,MAAQrB,EACjC,EACA6B,EAAM3O,KAAO,SAAU/N,GACjBI,KAAKsT,OAAQtT,KAAK8b,MAAQ/C,GAC9B/Y,KAAKgX,QAAQpX,EACf,EACA0c,EAAMtF,QAAU,SAAUpX,GAE1B,EACA0c,EAAMc,QAAU,SAAUO,EAAO/d,GAC/B,GAAGI,KAAK8b,QAAUrB,EAChB,GAAGkD,IAAUxE,GAAUwE,IAAUvE,GAAUuE,IAAU3E,GAAQ2E,IAAU1E,GAAS0E,IAAUzE,EACpFlZ,KAAKJ,QACPI,KAAKJ,MAAMI,KAAKU,KAAOd,GAEzBI,KAAK2N,KAAK/N,QACN,GAAG+d,IAAUjF,EACjB1Y,KAAK8D,OACD9D,KAAKJ,MACPI,KAAKJ,MAAQI,KAAKJ,MAAMI,KAAKU,KAAO,CAAC,EAErCV,KAAKJ,MAAQ,CAAC,EAEhBI,KAAKU,SAAMwE,EACXlF,KAAK8b,MAAQpB,EACb1a,KAAKsT,KAAOqH,OACR,GAAGgD,IAAU/E,EACjB5Y,KAAK8D,OACD9D,KAAKJ,MACPI,KAAKJ,MAAQI,KAAKJ,MAAMI,KAAKU,KAAO,GAEpCV,KAAKJ,MAAQ,GAEfI,KAAKU,IAAM,EACXV,KAAKsT,KAAOsH,EACZ5a,KAAK8b,MAAQrB,OACT,GAAGkD,IAAUhF,EAAY,CAC7B,GAAI3Y,KAAKsT,OAASqH,EAGhB,OAAO3a,KAAK4d,WAAWD,EAAO/d,GAF9BI,KAAK6d,KAIT,KAAM,IAAGF,IAAU9E,EAOjB,OAAO7Y,KAAK4d,WAAWD,EAAO/d,GAN9B,GAAII,KAAKsT,OAASsH,EAGhB,OAAO5a,KAAK4d,WAAWD,EAAO/d,GAF9BI,KAAK6d,KAMT,MACI,GAAG7d,KAAK8b,QAAUpB,EACtB,GAAIiD,IAAUxE,EACZnZ,KAAKU,IAAMd,EACXI,KAAK8b,MAAQhD,MACR,IAAI6E,IAAUhF,EAGnB,OAAO3Y,KAAK4d,WAAWD,EAAO/d,GAF9BI,KAAK6d,KAGP,MACI,GAAG7d,KAAK8b,QAAUhD,EAAM,CAC5B,GAAI6E,IAAU7E,EACP,OAAO9Y,KAAK4d,WAAWD,EAAO/d,GADdI,KAAK8b,MAAQrB,CAEtC,KAAM,IAAGza,KAAK8b,QAAU/C,EAWtB,OAAO/Y,KAAK4d,WAAWD,EAAO/d,GAV9B,GAAI+d,IAAU5E,EACR/Y,KAAKsT,OAASsH,GAAS5a,KAAKU,MAAOV,KAAK8b,MAAQrB,GAC3Cza,KAAKsT,OAASqH,IAAU3a,KAAK8b,MAAQpB,OAEzC,MAAIiD,IAAU9E,GAAiB7Y,KAAKsT,OAASsH,GAAS+C,IAAUhF,GAAe3Y,KAAKsT,OAASqH,GAGlG,OAAO3a,KAAK4d,WAAWD,EAAO/d,GAF9BI,KAAK6d,KAGP,CAGF,CACF,EAEAlb,EAAO8V,EAAIA,EAEXjW,EAAO7C,QAAUgD,C,qCC3ZjBlD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2Y,8BAA2B,EACnC,MAAMvL,EAAwB,EAAQ,MAItC,MAAMuL,UAAiCvL,EAAsBlN,oBACzD,WAAAC,GACI+C,MAAM,SACV,CACA,YAAMG,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GAEjDH,EAAeiW,WAAW9V,EAAQ,IAAK,CAC3C,EAEJZ,EAAQ2Y,yBAA2BA,C,qCCfnC7Y,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQoe,yBAAsB,EAC9B,EAAQ,OACR,MAAMC,EAAe,EAAQ,OACvBzL,EAAqB,EAAQ,MAC7B0L,EAA6B,EAAQ,OAI3C,MAAMF,EACF,WAAAje,CAAYoe,GACRle,KAAKke,QAAUA,CACnB,CACA,UAAMC,CAAKC,GACP,MAAMC,QAAkBre,KAAKke,SAAWI,OAAOF,EAAK,CAAE1K,QAAS,IAAI6K,QAAQ,CAAEC,OAAQ,0BACrF,GAAIH,EAASI,IAAMJ,EAAS3K,QAAS,CACjC,IAAID,EAAY4K,EAAS3K,QAAQtE,IAAI,gBACrC,GAAIqE,EAAW,CACX,MAAMiL,EAAWjL,EAAUkL,QAAQ,KAC/BD,EAAW,IACXjL,EAAYA,EAAU3J,OAAO,EAAG4U,GAExC,CACA,GAAkB,wBAAdjL,EAEA,aAAc4K,EAASO,OAIvB,GAAIP,EAAS3K,QAAQG,IAAI,QAAS,CAC9B,IAAIgL,EAcJ,GAbAR,EAAS3K,QAAQI,SAAQ,CAAClU,EAAOc,KAC7B,GAAY,SAARA,EAAgB,CAChB,MAAMqT,GAAa,EAAIxB,EAAmByB,OAAOpU,GACjD,IAAK,MAAMqU,KAAQF,EAAW3E,IAAI,OAAQ,uBACtC,GAAiB,cAAb6E,EAAK6K,IAAqB,CAC1B,GAAID,EACA,MAAM,IAAItc,MAAM,kDAAoD6b,GAExES,GAAe,EAAIZ,EAA2B7K,SAASa,EAAKE,IAAKiK,EACrE,CAER,KAEAS,EACA,OAAO7e,KAAKme,KAAKU,EAEzB,CACA,MAAM,IAAIb,EAAa1X,WAAW,kCAAkCmN,IAAauK,EAAazX,YAAYqN,wBAElH,CAEI,MAAM,IAAIrR,MAAM8b,EAASU,YAAc,gBAAgBV,EAASW,SAExE,EAEJrf,EAAQoe,oBAAsBA,C,qCCxD9Bte,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4Y,6BAA0B,EAClC,MAAMtU,EAA0B,EAAQ,OAClCyL,EAAS,EAAQ,OACjBuB,EAA0B,EAAQ,OAClClE,EAAwB,EAAQ,MAItC,MAAMwL,UAAgCxL,EAAsBlN,oBACxD,WAAAC,GACI+C,MAAM,QACV,CACA,gBAAA3C,GACI,OAAO,CACX,CACA,YAAM8C,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GACjD,MAAM6Q,EAAc9Q,EAAKC,GAInBa,QAAgBhB,EAAeS,WAAWP,GAC1C4B,EAAY7B,EAAKqE,QACjBiS,EAAUjH,EAAO1L,KAAK0B,kBAAkBtE,EAASgQ,QAAmB/Q,EAAKiL,qBAAqBhL,EAAMC,IAEpG0e,EAAWtY,MAAMC,QAAQhH,GAASA,EAAQ,CAACA,GACjD,IAAK,MAAMsf,KAAWD,EAAU,CACL,kBAAZC,GACP9e,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,wBAAwB4Y,KAAYjb,EAAwBsC,YAAY4Y,qBAE5I,MAAMla,EAAO5E,EAAKoI,sBAAsBrH,EAAS8d,GAC7Cja,SACMgM,EAAwBI,sBAAsBC,sBAAsBlR,EAAgBC,EAAMC,EAAMC,EAAO2B,EAAW+C,EAAM0R,EAEtI,CAEA,IAAIyI,EAAgBjM,QAAQC,QAAQhS,GAChCie,GAAwB,EAC5B,IAAK,MAAMH,KAAWD,EAASlH,OAAQ,CACnC,MAAMuH,EAAc5P,EAAO1L,KAAKY,gBAAgBxD,EAAS,WAAY8d,EAAS,MAC1EI,IACAD,GAAwB,EACxBD,EAAgBA,EAAcje,MAAMoe,GAAMnf,EAAe0G,aAAawY,EAAaC,EAAEva,mBAE7F,EAEI5E,EAAe2N,mBACXsR,GAA0Bjf,EAAeof,2CACzCpf,EAAe4N,gBAAgBzN,KAAUH,EAAegD,QAAQ7C,IACpEH,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,qGAC5BrC,EAAwBsC,YAAY2H,8BAGxEmR,IAEAD,EAAgBA,EAAcje,MAAMoe,IAC1B,eAAgBA,EAAEva,kBACpBua,EAAEva,gBAAgB,eAAgB,IAKE,IAApCua,EAAEva,gBAAgB,gBAClBua,EAAEva,gBAAgB,wBAA0B5D,EAAQ4D,iBAEjDua,KAGXnf,EAAegO,YAAY/M,WAAWf,EAAKuI,MAAM,EAAGvI,EAAKQ,OAAS,GAAIse,IAG1Ehf,EAAe6N,eAAe1N,IAAS,CAC3C,EAEJZ,EAAQ4Y,wBAA0BA,C,qCC1ElC9Y,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4R,aAAU,EAClB,MAAMkO,EAAc,EAAQ,OAI5B,MAAMlO,EACF,WAAAzR,CAAYF,EAAO8f,GACf1f,KAAK0B,SAAW,UAChB1B,KAAKJ,MAAQA,EACqB,kBAAvB8f,GACP1f,KAAK8B,SAAW4d,EAChB1f,KAAKgC,SAAWuP,EAAQoO,qBAEnBD,GACL1f,KAAK8B,SAAW,GAChB9B,KAAKgC,SAAW0d,IAGhB1f,KAAK8B,SAAW,GAChB9B,KAAKgC,SAAWuP,EAAQqO,WAEhC,CACA,MAAA/b,CAAO+I,GACH,QAASA,GAA4B,YAAnBA,EAAMlL,UAA0BkL,EAAMhN,QAAUI,KAAKJ,OACnEgN,EAAM9K,WAAa9B,KAAK8B,UAAY9B,KAAKgC,SAAS6B,OAAO+I,EAAM5K,SACvE,EAEJrC,EAAQ4R,QAAUA,EAClBA,EAAQoO,oBAAsB,IAAIF,EAAY5O,UAAU,yDACxDU,EAAQqO,WAAa,IAAIH,EAAY5O,UAAU,0C,qCC9B/CpR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkgB,8BAA2B,EACnC,MAAM5b,EAA0B,EAAQ,OAOxC,MAAM4b,EACF,mBAAA9c,GACI,OAAO,CACX,CACA,YAAMC,CAAOC,EAAY7C,EAAgBC,EAAMC,EAAMV,EAAOW,GACxD,MAAMuB,QAAiBzB,EAAKiD,gBAAgBhD,EAAKC,GAAQD,EAAMC,GAC/D,GAAIoG,MAAMC,QAAQhH,GAEdA,EAAQA,EAAMuX,KAAK/P,IAAa,CAAG,SAAUA,EAAU,YAAatF,UAEnE,CACD,GAAqB,kBAAVlC,EACP,MAAM,IAAIqE,EAAwBqC,WAAW,wCAAwCe,KAAKC,UAAU1H,2BAAgCqE,EAAwBsC,YAAYuZ,4BAE5KlgB,EAAQ,CAAE,SAAUA,EAAO,YAAakC,EAC5C,OACM1B,EAAe2P,cAAczP,EAAKuI,MAAM,EAAGvI,EAAKQ,OAAS,GAAIlB,EAAOW,EAAQ,GAAG,GACrFH,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQkgB,yBAA2BA,C,qCC7BnCpgB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQkM,2BAAwB,EAChC,MAAMkU,EAA+B,EAAQ,MACvCC,EAA0B,EAAQ,OAClCC,EAA6B,EAAQ,OACrCC,EAAyB,EAAQ,OACjCxQ,EAAS,EAAQ,OAKvB,MAAM7D,EAMF,6BAAOsU,CAAuBld,GAC1B,MAAO,WAAYA,IACV,SAAUA,GAAiD,IAAnCxD,OAAOa,KAAK2C,GAAYnC,QAAoD,IAAnCrB,OAAOa,KAAK2C,GAAYnC,OACtG,CAMA,8BAAOiL,CAAwB9I,GAC3B,MAAO,WAAYA,IACV,SAAUA,GAAcxD,OAAOa,KAAK2C,GAAYnC,OAAS,KACpD,SAAUmC,IAAexD,OAAOa,KAAK2C,GAAYnC,OAAS,EAC5E,CAQA,6BAAOuL,CAAuBpJ,EAAY1C,EAAOD,GAC7C,IAAI6f,EAAyBtU,EAAsBsU,uBAAuBld,GACtEmD,EAAQ,GACZ,IAAK,IAAIH,EAAI1F,EAAO0F,EAAI3F,EAAKQ,OAAQmF,IAC5Bka,GAA6C,kBAAZ7f,EAAK2F,KACvCG,GAAS,IAAM9F,EAAK2F,IAGnBka,GAA6C,kBAAZ7f,EAAK2F,KACvCka,GAAyB,GAGjC,OAAO/Z,CACX,CAeA,gCAAa0F,CAAoB1L,EAAgBE,EAAMC,GACnD,MAAMuE,EAAW,CACb7B,WAAY,CAAE,QAAQ,GACtB1C,QACAuE,UAAU,GAGd,IAAIsb,GAAsB,EAE1B,MAAMhf,QAAgBhB,EAAeS,WAAWP,EAAM,GACtD,IAAK,IAAI2F,EAAI1F,EAAQ,EAAG0F,GAAK,EAAGA,IAC5B,GAAuB,kBAAZ3F,EAAK2F,GAAiB,CAE7B,MAAMoa,EAAiB3Q,EAAO1L,KAAKY,gBAAgBxD,EAAS,aAAcd,EAAK2F,IAAI,GACnF,GAAIoa,GAAkBxU,EAAsBsU,uBAAuBE,GAC/D,MAAO,CACHpd,WAAYod,EACZ9f,MAAO0F,EAAI,EACXnB,UAAU,GAGlB,MAAMwb,EAAmB5Q,EAAO1L,KAAKY,gBAAgBxD,EAAS,aAAcd,EAAK2F,EAAI,IAAI,GACzF,GAAKqa,EAQA,CAED,MAAMC,EAAiB,WAAYD,EAEnC,IAAK,MAAME,KAAuB3U,EAAsB4U,mBACpD,GAAIH,EAAiBE,GACjB,OAAID,EAEI1U,EAAsB4U,mBAAmBD,GAAqBzd,sBACvD,CACHE,WAAYqd,EACZ/f,MAAO0F,EACPnB,UAAU,GAIPA,EAKPsb,EACOtb,EAGA,CACH7B,WAAYqd,EACZ/f,MAAO0F,EACPnB,UAAU,GAO9B,OAAOA,CACX,CA3CI,GAAIsb,EAEA,OAAOtb,EAGXsb,GAAsB,CAuC9B,CAEJ,OAAOtb,CACX,CAeA,yCAAawQ,CAA6BlV,EAAgBE,EAAMC,GAC5D,MAAMmgB,QAAgB7U,EAAsBC,oBAAoB1L,EAAgBE,EAAMC,GACtF,OAAQmgB,EAAQ5b,YAAc,WAAY4b,EAAQzd,WACtD,CACA,iBAAAhD,GACI,OAAO,CACX,CACA,gBAAAC,GACI,OAAO,CACX,CACA,cAAMC,CAASC,EAAgBC,EAAMC,EAAMC,EAAOC,GAC9C,cAAeR,KAAKS,KAAKL,EAAgBC,EAAM,KAAMC,EAAMC,EAC/D,CACA,UAAME,CAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,GACxC,MAAM0C,EAAayM,EAAO1L,KAAKmB,+BAA+B/E,EAAeS,WAAWP,EAAM,GAAIA,EAAKC,EAAQ,IAC/G,IAAK,MAAMogB,KAAiB9U,EAAsB4U,mBAC9C,GAAIxd,EAAW0d,GACX,MAAO,CACH1d,aACAyd,QAAS7U,EAAsB4U,mBAAmBE,IAI9D,OAAO,IACX,CACA,YAAM3d,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,EAAO6V,GACxD,OAAOA,EAAWsK,QAAQ1d,OAAOoT,EAAWnT,WAAY7C,EAAgBC,EAAMC,EAAMV,EAAOW,EAC/F,EAEJZ,EAAQkM,sBAAwBA,EAChCA,EAAsB4U,mBAAqB,CACvC,MAAO,IAAIV,EAA6Bjd,2BACxC,SAAU,IAAIkd,EAAwBY,sBACtC,YAAa,IAAIX,EAA2BJ,yBAC5C,QAAS,IAAIK,EAAuBlP,qB,wBC1LxC,MAAM6P,EAAM,EAAQ,QACd,aAAEnP,GAAiB,EAAQ,QAC3B,UAAEc,GAAc,EAAQ,OAExBsO,EAAsB,QAE5B,SAASC,EAAaC,GACpB,OAAOpd,GACiB,cAAlBA,EAAKlC,SACA,KAGJkC,EAAKhE,MAAMoK,WAAW8W,GAKpBE,EAAQjf,UAAU6B,EAAKhE,MAAMiJ,MAAMiY,EAAoBhgB,SAJrD,IAMb,CAEA,SAASmgB,EAAaD,GACpB,MAAME,EAAUH,EAAYC,GAE5B,OAAO3e,IACL,MAAMJ,EAAUif,EAAQ7e,EAAKJ,SACvBC,EAAYgf,EAAQ7e,EAAKH,WACzBC,EAAS+e,EAAQ7e,EAAKF,QACtBC,EAAQ8e,EAAQ7e,EAAKD,OAE3B,OAAIH,GAAWC,GAAaC,GAAUC,EAC7B4e,EAAQ3e,KACbJ,GAAWI,EAAKJ,QAChBC,GAAaG,EAAKH,UAClBC,GAAUE,EAAKF,OACfC,GAASC,EAAKD,OAIXC,EAEX,CAEA,MAAMK,EACJ,WAAA5C,CAAawN,GAAO,QAAEkG,EAAUsN,EAAmB,QAAE1f,EAAU,KAAI,QAAE4f,EAAUH,GAAQ,CAAC,GACtF,MAAMlO,EAAS,IAAIjB,EAAa,CAC9B8B,UACApS,UACAqC,YAAaud,EACbjT,kBAAkB,IAGpBT,EAAMuH,KAAKlC,GAEX,MAAMuO,EAAUD,EAAYD,GAEtBG,EAAY,IAAI3O,EAAU,CAC9B4O,YAAY,EACZD,UAAW,CAAC9e,EAAM2S,EAAUC,KAC1BA,EAAS,KAAMiM,EAAQ7e,GAAK,IAYhC,OARAsQ,EAAOlF,GAAG,WAAWrM,IACnB3B,OAAO4hB,QAAQjgB,GAAS0S,SAAQ,EAAEwN,EAAQzb,MACxCsb,EAAUxT,KAAK,SAAU2T,EAAQN,EAAQjf,UAAU8D,GAAI,GACxD,IAEH8M,EAAOlF,GAAG,SAASG,GAAOuT,EAAUI,QAAQ3T,KAC5C+E,EAAOkC,KAAKsM,GAELA,CACT,EAGF3e,EAAO7C,QAAU+C,C,qCC1EjBjD,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0Y,iCAA8B,EACtC,MAAMpU,EAA0B,EAAQ,OAClC8I,EAAwB,EAAQ,MAItC,MAAMsL,UAAoCtL,EAAsBlN,oBAC5D,WAAAC,GACI+C,MAAM,YACV,CACA,YAAMG,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GAC5B,kBAAVX,GACPQ,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,4BAA4B1G,KAAUqE,EAAwBsC,YAAYib,yBAE9I,MAAMC,QAAsBphB,EAAK0G,gBAAgBnH,EAAOU,EAAMC,QAAaH,EAAeS,WAAWP,IACjG,WAAYmhB,GACZrhB,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,2CAA2Ce,KAAKC,UAAU1H,MAAWqE,EAAwBsC,YAAYib,yBAEzK,UAAWC,GACXrhB,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,0CAA0Ce,KAAKC,UAAU1H,MAAWqE,EAAwBsC,YAAYib,yBAE5KphB,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQ0Y,4BAA8BA,C,qCCzBtC5Y,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQihB,2BAAwB,EAChC,MAAM3c,EAA0B,EAAQ,OAClCgN,EAA0B,EAAQ,OAClCvB,EAAS,EAAQ,OAMvB,MAAMkR,EACF,mBAAA7d,GACI,OAAO,CACX,CACA,YAAMC,CAAOC,EAAY7C,EAAgBC,EAAMC,EAAMV,EAAOW,GACxD,IAAKoG,MAAMC,QAAQhH,GAAQ,CACvB,MAAM2gB,EAAiB,WAAYtd,EAE7B7B,QAAgBhB,EAAeS,WAAWP,GAC1CohB,EAAWphB,EAAKC,EAAQ,GACxBohB,EAAmBjS,EAAO1L,KAAKyB,qBAAqBrE,EAASsgB,GACnE,GAAIC,EAAkB,CAElB,GAAI1d,EAAwBD,KAAKmH,mBAAmBwW,GAChD,MAAM,IAAI1d,EAAwBqC,WAAW,kDAAkDqb,IAAoB1d,EAAwBsC,YAAYqb,yBAE3J,GAAgC,kBAArBD,EACP,MAAM,IAAI1d,EAAwBqC,WAAW,uCAAuCqb,IAAoB1d,EAAwBsC,YAAYqb,yBAGhJ,GAAqB,kBAAVhiB,EAAoB,CAE3B,GAA2D,QAAvD8P,EAAO1L,KAAKoB,oBAAoBhE,EAASsgB,GACzC,MAAM,IAAIzd,EAAwBqC,WAAW,gGAAgG1G,IAASqE,EAAwBsC,YAAYgB,sBAG9L,MAAMrE,EAAK7C,EAAKmD,eAAepC,EAASxB,GACpCsD,IACA9C,EAAegD,QAAQ7C,EAAQ,GAAK,CAAC2C,GAE7C,CAEA,MAAM2e,EAAgBxhB,EAAKoI,sBAAsBrH,EAASugB,GAC1D,GAAIE,EAAe,CACf,MAAMC,QAAoBzhB,EAAKoG,YAAYrF,EAASugB,QAAwBthB,EAAKiD,gBAAgBhD,EAAKC,GAAQD,EAAMC,GAAQA,EAAOD,GACnI,GAAIigB,EAAgB,CAEhB,MAAMjU,QAAgBjM,EAAK6L,uBAAuB5L,EAAMC,EAAQ,GAChE,IAAK,MAAMwhB,KAAcD,EACrB1hB,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAKiK,EAASuV,EAAeE,EAAY1hB,EAAKyK,mBAEtG,MAGI,IAAK,MAAMiX,KAAcD,QACf7Q,EAAwBI,sBAAsBC,sBAAsBlR,EAAgBC,EAAMC,EAAMC,EAAQ,EAAGshB,EAAeE,GAAY,EAGxJ,CACJ,CACA,MAAMC,EAAczB,EAAiB,EAAI,QACnCngB,EAAe2P,cAAczP,EAAKuI,MAAM,EAAGvI,EAAKQ,OAASkhB,GAAcpiB,EAAOW,EAAQyhB,GAAa,SAEnG5hB,EAAe2D,oCACzB,CACA3D,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQihB,sBAAwBA,C,qCCpEhCnhB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQiI,mBAAgB,EACxB,EAAQ,OACR,MAAMqW,EAA6B,EAAQ,OACrCD,EAAe,EAAQ,OACvBiE,EAAwB,EAAQ,OAChCC,EAA4B,EAAQ,OACpCxS,EAAS,EAAQ,OAIvB,MAAM9H,EACF,WAAA9H,CAAY8C,GACRA,EAAUA,GAAW,CAAC,EACtB5C,KAAKmiB,eAAiBvf,EAAQuf,gBAAkB,IAAIF,EAAsBlE,oBAC1E/d,KAAKoiB,cAAgB,CAAC,EACtBpiB,KAAKsO,iBAAmB1L,EAAQyf,eAChCriB,KAAKsiB,0BAA4B1f,EAAQ0f,wBACzCtiB,KAAKuiB,yBAA2B3f,EAAQ2f,0BAA4B,GACpEviB,KAAKwiB,yBAAyB,2BAA4B5f,MAAYA,EAAQ4f,sBAClF,CAUA,uBAAO3a,CAAiBjI,EAAO6iB,EAAaC,GACxC,GAAqB,kBAAV9iB,EACP,MAAM,IAAIoe,EAAa1X,WAAW,sDAAsDe,KAAKC,UAAU1H,MAAW8iB,GAEtH,IAAKhT,EAAO1L,KAAK2e,mBAAmBliB,KAAKb,GAAQ,CAC7C,GAAI6iB,EACA,MAAM,IAAIzE,EAAa1X,WAAW,kEAAkEe,KAAKC,UAAU1H,MAAW8iB,GAG9H,OAAO,CAEf,CACA,OAAO,CACX,CASA,wBAAOva,CAAkBvI,EAAOkI,GAC5B,GAAqB,kBAAVlI,EACP,MAAM,IAAIoe,EAAa1X,WAAW,uDAAuDe,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYqc,wBAEhJ,IAAKlT,EAAO1L,KAAK6e,oBAAoBpiB,KAAKb,GAAQ,CAC9C,GAAIkI,EACA,MAAM,IAAIkW,EAAa1X,WAAW,6DAA6De,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYqc,wBAGlJ,OAAO,CAEf,CACA,OAAO,CACX,CAMA,iBAAAE,CAAkB1hB,GACd,IAAK,MAAMV,KAAOjB,OAAOa,KAAKc,GAAU,CACpC,IAAIxB,EAAQwB,EAAQV,GACpB,GAAId,GAA0B,kBAAVA,GACZA,EAAM,cAAgBA,EAAM,OAAQ,CACpC,GAAiC,kBAAtBA,EAAM,aAA4B8P,EAAO1L,KAAKqH,eAAezL,EAAM,aAC1E,MAAM,IAAIoe,EAAa1X,WAAW,gEAAgE1G,EAAM,eAAgBoe,EAAazX,YAAYwD,qBAErJnK,EAAQwB,EAAQV,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5N,GAAQ,CAAE,MAAOA,EAAM,cAC9EA,EAAM,OAASA,EAAM,YACjB8P,EAAO1L,KAAKmH,mBAAmBvL,EAAM,oBAC9BA,EAAM,YAGbA,EAAM,aAAc,CAE5B,CAER,CACA,OAAOwB,CACX,CASA,mBAAA2hB,CAAoB3hB,EAASkhB,EAAyBhiB,GAClD,MAAM0iB,EAAa5hB,EAAQ4D,gBAC3B,IAAK,MAAMtE,KAAQJ,GAAQb,OAAOa,KAAK0iB,GAEnC,GAAItT,EAAO1L,KAAKif,sBAAsBtE,QAAQje,GAAO,IAAMgP,EAAO1L,KAAKkf,0BAA0BxiB,GAAM,CAEnG,MAAMyiB,EAAWH,EAAWtiB,GAC5B,GAAIgP,EAAO1L,KAAKmH,mBAAmBzK,IAAQgP,EAAO1L,KAAKof,uBAAuBzE,QAAQje,IAAQ,IAC9E,UAARA,GAA8C,kBAApBsiB,EAAWtiB,KAChCsiB,EAAWtiB,GAAK,eAAmD,SAAlCsiB,EAAWtiB,GAAK,eACtD,MAAM,IAAIsd,EAAa1X,WAAW,iEAC1C5F,QAAU2G,KAAKC,UAAU6b,KAAanF,EAAazX,YAAY8c,sBAI/D,GAAI3T,EAAO1L,KAAKsf,sBAAsB3E,QAAQjP,EAAO1L,KAAKuf,kBAAkBJ,KAAc,EACtF,MAAM,IAAInF,EAAa1X,WAAW,+DACtC5F,QAAU2G,KAAKC,UAAU6b,KAAanF,EAAazX,YAAYid,uBAG/D,GAAIL,GAAYzT,EAAO1L,KAAKmH,mBAAmBuE,EAAO1L,KAAKuf,kBAAkBJ,MAC9C,IAAxBA,EAAS,WACZ,MAAM,IAAInF,EAAa1X,WAAW,4CAA4C5F,QAAU2G,KAAKC,UAAU6b,MAAcnF,EAAazX,YAAYqb,yBAGlJ,MAAOlS,EAAO1L,KAAKyf,cAAcT,EAAWtiB,IAAO,CAC/C,MAAMd,EAAQojB,EAAWtiB,GACzB,IAAIgjB,GAAU,EACd,GAAqB,kBAAV9jB,EACPojB,EAAWtiB,GAAOU,EAAQuI,WAAW/J,GAAO,GAC5C8jB,EAAUA,GAAW9jB,IAAUojB,EAAWtiB,OAEzC,CACD,MAAMwC,EAAKtD,EAAM,OACXqF,EAAOrF,EAAM,SAEb+jB,IAAkB,YAAa/jB,IAAU8P,EAAO1L,KAAK4B,WAAWlF,GACtE,GAAI,QAASd,OAEEsF,IAAPhC,GAA2B,OAAPA,GAA6B,kBAAPA,IAC1C8f,EAAWtiB,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGwV,EAAWtiB,IAAO,CAAE,MAAOU,EAAQuI,WAAWzG,GAAI,KACpGwgB,EAAUA,GAAWxgB,IAAO8f,EAAWtiB,GAAK,aAG/C,IAAKgP,EAAO1L,KAAKmH,mBAAmBzK,IAAQijB,EAAe,CAE5D,MAAMC,EAAQxiB,EAAQuI,WAAWjJ,GAAK,GAClCkjB,IAAUljB,IAEVsiB,EAAWtiB,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGwV,EAAWtiB,IAAO,CAAE,MAAOkjB,IAC7EF,GAAU,EAElB,CACA,GAAIze,GAAwB,kBAATA,GAA8B,WAATA,KAC/BrF,EAAM,gBAAkBA,EAAM,cAAc,WAC9C+jB,EAAe,CAElB,IAAIE,EAAeziB,EAAQuI,WAAW1E,GAAM,GACxCqd,GAA2Brd,IAAS4e,IACpCA,EAAeziB,EAAQuI,WAAW1E,GAAM,IAExC4e,IAAiB5e,IACjBye,GAAU,EACVV,EAAWtiB,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGwV,EAAWtiB,IAAO,CAAE,QAASmjB,IAEvF,CACJ,CACA,IAAKH,EACD,KAER,CACJ,CAER,CAMA,SAAAI,CAAU1iB,GAAS,eAAE2iB,EAAc,sBAAE/b,IAEjC,GAAIA,GAA4C,IAAnB+b,EACzB,IAAK,MAAMrjB,KAAOjB,OAAOa,KAAKc,GAC1B,GAAY,cAARV,GAA+C,kBAAjBU,EAAQV,GACtCU,EAAQV,GAAOU,EAAQV,GAAKwH,kBAE3B,CACD,MAAMtI,EAAQwB,EAAQV,GACtB,GAAId,GAA0B,kBAAVA,GACkB,kBAAvBA,EAAM,aAA2B,CACxC,MAAMokB,EAAYpkB,EAAM,aAAasI,cACjC8b,IAAcpkB,EAAM,eACpBwB,EAAQV,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5N,GAAQ,CAAE,YAAaokB,IAE9E,CAER,CAGZ,CAKA,gBAAAC,CAAiB7iB,GACb,IAAK,MAAMV,KAAOjB,OAAOa,KAAKc,GAAU,CACpC,MAAMxB,EAAQwB,EAAQV,GACtB,GAAId,GAA0B,kBAAVA,EAChB,GAAmC,kBAAxBA,EAAM,cACbwB,EAAQV,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5N,GAAQ,CAAE,aAAc,CAAE,CAACA,EAAM,gBAAgB,UAE/F,GAAI+G,MAAMC,QAAQhH,EAAM,eAAgB,CACzC,MAAMskB,EAAW,CAAC,EAClB,IAAK,MAAMC,KAAkBvkB,EAAM,cAC/BskB,EAASC,IAAkB,EAE/B/iB,EAAQV,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5N,GAAQ,CAAE,aAAcskB,GAC3E,CAER,CACJ,CAMA,oBAAAE,CAAqBhjB,GAAS,eAAE2iB,GAAkB9Z,GAC9C,GAAI8Z,GAAkBA,GAAkB,KAChC3iB,EAAQ,cAAe,CACvB,IAAK,MAAMV,KAAOjB,OAAOa,KAAKc,GAC1B,IAAIsO,EAAO1L,KAAKkf,0BAA0BxiB,KAGrCgP,EAAO1L,KAAKmH,mBAAmBzK,KAASgP,EAAO1L,KAAKqgB,gBAAgBjjB,EAASV,GAAM,CACpF,MAAMd,EAAQwB,EAAQV,GAClBd,GAA0B,kBAAVA,EACV,eAAgBwB,EAAQV,KAE1BU,EAAQV,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGpM,EAAQV,IAAO,CAAE,cAAc,MAKlFU,EAAQV,GAAO,CACX,MAAOd,EACP,cAAc,GAEd8P,EAAO1L,KAAKsgB,6BAA6B1kB,EAAOqK,KAChD7I,EAAQV,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGpM,EAAQV,IAAO,CAAE,WAAW,KAGvF,QAEGU,EAAQ,aACnB,CAER,CASA,4BAAAmjB,CAA6BC,EAAeC,EAAcxa,EAAe3J,GACrE,IAAK,MAAMI,KAAiB,OAATJ,QAA0B,IAATA,EAAkBA,EAAOb,OAAOa,KAAKmkB,GACrE,GAAI/U,EAAO1L,KAAKqgB,gBAAgBG,EAAe9jB,KAIV,kBAAtB+jB,EAAa/jB,GACpB+jB,EAAa/jB,GAAO,CAAE,MAAO+jB,EAAa/jB,GAAM,cAAc,GAM9D+jB,EAAa/jB,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGiX,EAAa/jB,IAAO,CAAE,cAAc,KAGvFgP,EAAO1L,KAAK0gB,UAAUF,EAAc9jB,GAAM+jB,EAAa/jB,KACxD,MAAM,IAAIsd,EAAa1X,WAAW,+CAA+C5F,UAAY2G,KAAKC,UAAUoI,EAAO1L,KAAKuf,kBAAkBiB,EAAc9jB,WAAa2G,KAAKC,UAAUoI,EAAO1L,KAAKuf,kBAAkBkB,EAAa/jB,OAAUsd,EAAazX,YAAYoe,4BAIlR,CAMA,QAAAxkB,CAASiB,GAAS,eAAE2iB,IAChB,IAAK,MAAMrjB,KAAOjB,OAAOa,KAAKc,GAAU,CAEpC,GAAIsO,EAAO1L,KAAKkf,0BAA0BxiB,GACtC,SAGJ,GAAY,KAARA,EACA,MAAM,IAAIsd,EAAa1X,WAAW,wCAAwC5F,QAAU2G,KAAKC,UAAUlG,EAAQV,OAAUsd,EAAazX,YAAYqb,yBAElJ,MAAMhiB,EAAQwB,EAAQV,GAChB2E,SAAmBzF,EAEzB,GAAI8P,EAAO1L,KAAKmH,mBAAmBzK,GAAnC,CACI,OAAQA,EAAIoJ,OAAO,IACf,IAAK,QACD,GAAc,OAAVlK,GAAgC,WAAdyF,EAClB,MAAM,IAAI2Y,EAAa1X,WAAW,gCAAgC1G,IAASoe,EAAazX,YAAYqe,uBAExG,MACJ,IAAK,OACD,GAAc,OAAVhlB,GAAgC,WAAdyF,EAClB,MAAM,IAAI2Y,EAAa1X,WAAW,+BAA+BlF,EAAQV,KAAQsd,EAAazX,YAAYse,kBAE9G,MACJ,IAAK,WACa,OAAVjlB,GACAgI,EAAcC,iBAAiBjI,GAAO,EAAMoe,EAAazX,YAAYue,0BAEzE,MACJ,IAAK,UACD,GAAc,OAAVllB,GAAgC,WAAdyF,EAClB,MAAM,IAAI2Y,EAAa1X,WAAW,qCAAqC1G,IAASoe,EAAazX,YAAYwe,uBAE7G,MACJ,IAAK,YACa,OAAVnlB,GACAgI,EAAcO,kBAAkBvI,GAAO,GAE3C,MACJ,IAAK,YACD,GAAuB,IAAnBmkB,EACA,MAAM,IAAI/F,EAAa1X,WAAW,wCAAwC1G,IAASoe,EAAazX,YAAYye,uBAEhH,GAAc,OAAVplB,GAAgC,YAAdyF,EAClB,MAAM,IAAI2Y,EAAa1X,WAAW,sCAAsC1G,IAASoe,EAAazX,YAAY0e,yBAE9G,MAGR,GAAIvV,EAAO1L,KAAKqH,eAAe3K,IAAQgP,EAAO1L,KAAKqH,eAAeqE,EAAO1L,KAAKuf,kBAAkB3jB,IAC5F,MAAM,IAAIoe,EAAa1X,WAAW,gDAAgD5F,QAAUgP,EAAO1L,KAC9Fuf,kBAAkB3jB,MAAWoe,EAAazX,YAAY8c,qBAGnE,MAEA,GAAc,OAAVzjB,EACA,OAAQyF,GACJ,IAAK,SACD,GAAIqK,EAAO1L,KAAKkhB,UAAUtlB,EAAOwB,KAAaV,EAC1C,MAAM,IAAIsd,EAAa1X,WAAW,oDAAoD5F,QAAU2G,KAC3FC,UAAU1H,MAAWoe,EAAazX,YAAY4e,oBAEvD,GAAIzV,EAAO1L,KAAKohB,eAAe1kB,GAAM,CACjC,GAAc,UAAVd,EACA,MAAM,IAAIoe,EAAa1X,WAAW,4CAA4C5F,QAAUd,KAAUoe,EAAazX,YAAYwD,qBAE1H,GAAI2F,EAAO1L,KAAK4B,WAAWhG,IAAUA,IAAU,IAAIsiB,EAA0BxZ,wBAAwBtH,GAASuI,WAAWjJ,GAC1H,MAAM,IAAIsd,EAAa1X,WAAW,iDAAiD5F,QAAUd,KAAUoe,EAAazX,YAAYwD,oBAExI,CACA,MACJ,IAAK,SACD,IAAK2F,EAAO1L,KAAKqhB,aAAa3kB,MAAU,QAASd,KACtB,QAAnBA,EAAM,UAAsBwB,EAAQ,UAAYA,EAAQ,WAC5D,MAAM,IAAI4c,EAAa1X,WAAW,kCAAkC5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYwD,qBAErI,IAAK,MAAMub,KAAa7lB,OAAOa,KAAKV,GAAQ,CACxC,MAAM2lB,EAAc3lB,EAAM0lB,GAC1B,GAAKC,EAGL,OAAQD,GACJ,IAAK,MACD,GAAI5V,EAAO1L,KAAKqH,eAAeka,IACR,UAAhBA,GAA2C,QAAhBA,GAAyC,WAAhBA,GAA4C,UAAhBA,EACnF,MAAM,IAAIvH,EAAa1X,WAAW,gDAAgD5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYwD,qBAEnJ,GAAI2F,EAAO1L,KAAKohB,eAAe1kB,GAAM,CACjC,GAAoB,UAAhB6kB,EACA,MAAM,IAAIvH,EAAa1X,WAAW,4CAA4C5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYwD,qBAE1I,GAAI2F,EAAO1L,KAAK4B,WAAW2f,IACzBA,IAAgB,IAAIrD,EAA0BxZ,wBAAwBtH,GAASuI,WAAWjJ,GAC7F,MAAM,IAAIsd,EAAa1X,WAAW,iDAAiD5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYwD,oBAExJ,CACA,GAA2B,kBAAhBwb,EACP,MAAM,IAAIvH,EAAa1X,WAAW,8CAA8C5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYwD,qBAEjJ,GAAI2F,EAAO1L,KAAKkhB,UAAUK,EAAankB,KAAaV,EAChD,MAAM,IAAIsd,EAAa1X,WAAW,oDAAoD5F,QAAU2G,KAC3FC,UAAU1H,MAAWoe,EAAazX,YAAY4e,oBAEvD,MACJ,IAAK,QACD,GAA4B,UAAxBvlB,EAAM,eAA6C,QAAhB2lB,GAAyC,WAAhBA,EAC5D,MAAM,IAAIvH,EAAa1X,WAAW,iEAAiE5F,QAAU6kB,KAAgBvH,EAAazX,YAAYif,sBAE1J,GAA2B,kBAAhBD,EACP,MAAM,IAAIvH,EAAa1X,WAAW,kDAAkDe,KAAKC,UAAUjC,MAAe2Y,EAAazX,YAAYif,sBAE/I,GAAoB,QAAhBD,GAAyC,WAAhBA,IACF,IAAnBxB,GAA0C,UAAhBwB,KACP,IAAnBxB,GAA0C,UAAhBwB,KACP,MAAnBA,EAAY,KAAe7V,EAAO1L,KAAK4B,WAAW2f,IACtD,MAAM,IAAIvH,EAAa1X,WAAW,oDAAoD5F,QAAU6kB,KAAgBvH,EAAazX,YAAYif,sBAE7I,MACJ,IAAK,WACD,GAA2B,kBAAhBD,GAA4B3lB,EAAM,QAAUA,EAAM,SAAW2lB,EACpE,MAAM,IAAIvH,EAAa1X,WAAW,uDAAuD5F,OAC9H6kB,WAAqB3lB,EAAM,UAAWoe,EAAazX,YAAYkf,0BAE9B,GAAI,UAAW7lB,EACX,MAAM,IAAIoe,EAAa1X,WAAW,iDAAiD5F,KAAQsd,EAAazX,YAAYkf,0BAExH,MACJ,IAAK,aACD,GAAuB,IAAnB1B,IACItkB,OAAOa,KAAKilB,GAAazkB,OAAS,GAC/B4O,EAAO1L,KAAK0hB,eAAe/G,QAAQlf,OAAOa,KAAKilB,GAAa,IAAM,GACrE,MAAM,IAAIvH,EAAa1X,WAAW,gCAAgC5F,QAAUjB,OAAOa,KAAKilB,oCAC9G7V,EAAO1L,KAAK0hB,eAAeC,KAAK,QAAS3H,EAAazX,YAAYqf,2BAGpD,IAAK,MAAMzB,KAAkB1kB,OAAOa,KAAKilB,GAAc,CACnD,GAAuB,UAAnBpB,GAA8BvkB,EAAM,YACpC,MAAM,IAAIoe,EAAa1X,WAAW,6EAA6E5F,KAAQsd,EAAazX,YAAYkf,0BAEpJ,GAAI/V,EAAO1L,KAAK6hB,WAAWlH,QAAQwF,GAAkB,EACjD,MAAM,IAAInG,EAAa1X,WAAW,gCAAgC5F,QAAUyjB,uBACvGzU,EAAO1L,KAAK6hB,WAAWF,KAAK,QAAS3H,EAAazX,YAAYqf,0BAE3C,CACA,MACJ,IAAK,YACDhe,EAAcC,iBAAiB0d,GAAa,EAAMvH,EAAazX,YAAYuf,0BAC3E,MACJ,IAAK,aACDle,EAAcO,kBAAkBod,GAAa,GAC7C,MACJ,IAAK,UACD,GAAoB,OAAhBA,GAA+C,mBAAhBA,EAC/B,MAAM,IAAIvH,EAAa1X,WAAW,8CAA8C5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYwf,sBAEjJ,KAAM,QAASnmB,KAAW8P,EAAO1L,KAAK4B,WAAWlF,GAC7C,MAAM,IAAIsd,EAAa1X,WAAW,mCAAmC5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYqb,yBAEtI,MACJ,IAAK,SACD,GAAuB,IAAnBmC,IAA2BnkB,EAAM,gBAAkBA,EAAM,cAAc,UACvE,MAAM,IAAIoe,EAAa1X,WAAW,gDAAgD5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYqb,yBAEnJ,MACJ,IAAK,QACD,GAAIlS,EAAO1L,KAAKmH,mBAAmBoa,IAAgC,UAAhBA,EAC/C,MAAM,IAAIvH,EAAa1X,WAAW,0CAA0C5F,QAAU2G,KAAKC,UAAU1H,MAAWoe,EAAazX,YAAYiI,oBAGzJ,CACA,MACJ,QACI,MAAM,IAAIwP,EAAa1X,WAAW,iCAAiC5F,QAAUd,KAAUoe,EAAazX,YAAYqb,yBAGhI,CACJ,CAQA,cAAAoE,CAAe5kB,EAASwB,EAASqjB,GAE7B,MAAuB,kBAAZ7kB,IAIP6kB,KAAuB,UAAW7kB,IAAYwB,EAAQuL,eAClB,kBAA1BvL,EAAQuL,eAA8B,UAAWvL,EAAQuL,gBACnE/M,EAAQ,SAAWwB,EAAQuL,cAAc,SACrCvL,EAAQuL,cAAc,qBACtB/M,EAAQ,oBAAqB,IAIjCwB,EAAQ4Q,UAAY5Q,EAAQsjB,WACtB,UAAW9kB,EAKa,OAArBA,EAAQ,UAAiD,kBAArBA,EAAQ,UAC7CsO,EAAO1L,KAAK4B,WAAWxE,EAAQ,YAEnCA,EAAQ,UAAW,EAAI6c,EAA2B7K,SAAShS,EAAQ,SAAUwB,EAAQuL,eAAiBvL,EAAQuL,cAAc,UAAYvL,EAAQ4Q,WANhJpS,EAAQ,SAAWwB,EAAQ4Q,QAC3BpS,EAAQ,oBAAqB,KAf1BA,CAwBf,CAOA,mBAAA+kB,CAAoBC,EAAY5S,GAC5B,IAAK9D,EAAO1L,KAAK4B,WAAWwgB,GACxB,IACIA,GAAa,EAAInI,EAA2B7K,SAASgT,EAAY5S,EACrE,CACA,MAAO6S,GACH,MAAM,IAAI9jB,MAAM,wBAAwB6jB,IAC5C,CAMJ,OAHIpmB,KAAKwiB,wBAA0B4D,EAAWpc,WAAW,uBACrDoc,EAAa,uBAEVA,CACX,CASA,wBAAME,CAAmBllB,EAASwB,EAAStC,GACvC,IAAK,MAAMI,KAAiB,OAATJ,QAA0B,IAATA,EAAkBA,EAAOb,OAAOa,KAAKc,GAAW,CAChF,MAAMxB,EAAQwB,EAAQV,GACtB,GAAId,GAA0B,kBAAVA,GACZ,aAAcA,GAA+B,OAAtBA,EAAM,cAAyBgD,EAAQ2jB,qBAAsB,CAMpF,GAAIvmB,KAAKsO,gBACL,IACI,MAAMH,EAAgB1O,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGpM,GAAU,CAAE,CAACV,GAAMjB,OAAO+N,OAAO,CAAC,EAAGpM,EAAQV,aAC5FyN,EAAczN,GAAK,kBACpBV,KAAKgU,MAAMpU,EAAM,YAAaH,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5K,GAAU,CAAEsjB,UAAU,EAAO/X,gBAAeqY,kBAAkB,EAAMC,4BAA4B,EAAMF,sBAAsB,IACpM,CACA,MAAOG,GACH,MAAM,IAAI1I,EAAa1X,WAAWogB,EAAEC,QAAS3I,EAAazX,YAAYqgB,uBAC1E,CAEJxlB,EAAQV,GAAOjB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5N,GAAQ,CAAE,kBAAmBI,KAAKgU,MAAMpU,EAAM,YAAaH,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5K,GAAU,CAAEsjB,UAAU,EAAOW,mBAAmB,EAAMJ,4BAA4B,EAAMtY,cAAe/M,MACxO4D,iBACb,CAER,CACA,OAAO5D,CACX,CACA,WAAM4S,CAAM5S,EAASwB,EAAU,CAAC,EAGhCkkB,EAAkB,CAAC,GACf,MAAM,QAAEtT,EAAO,cAAErF,EAAa,SAAE+X,EAAQ,eAAEnC,EAAiBnc,EAAcwQ,wBAAuB,sBAAEpQ,EAAqB,iBAAEwe,EAAgB,kBAAEK,GAAuBjkB,EAC5JmkB,EAAiBnkB,EAAQmkB,gBAAkB,CAAC,EAElD,GAAItnB,OAAOa,KAAKymB,GAAgBjmB,QAAUd,KAAKuiB,yBAC3C,MAAM,IAAIvE,EAAa1X,WAAW,sDAAwD7G,OAAOa,KAAKymB,GAAiB/I,EAAazX,YAAYygB,kBAEpJ,GAAgB,OAAZ5lB,QAAgC8D,IAAZ9D,EAAuB,CAE3C,IAAKolB,GAAoBrY,GAAiBuB,EAAO1L,KAAKijB,kBAAkB9Y,GACpE,MAAM,IAAI6P,EAAa1X,WAAW,yDAA0D0X,EAAazX,YAAY2gB,+BAGzH,OAAO,IAAIhF,EAA0BxZ,wBAAwB1I,KAAKgmB,eAAe,CAAC,EAAGpjB,GAAS,GAClG,CACK,GAAuB,kBAAZxB,EAAsB,CAClC,MAAMglB,EAAapmB,KAAKmmB,oBAAoB/kB,EAASoS,GAC/C2T,EAAiBnnB,KAAKonB,kBAAkBhB,EAAYxjB,GAC1D,GAAIukB,EACA,OAAO,IAAIjF,EAA0BxZ,wBAAwBye,GAEjE,MAAME,QAA4BrnB,KAAKgU,YAAYhU,KAAKme,KAAKiI,GAAa3mB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5K,GAAU,CAAE4Q,QAAS4S,EAAYF,UAAU,EAAMa,eAAgBtnB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGuZ,GAAiB,CAAE,CAACX,IAAa,OAE5O,OADApmB,KAAKgmB,eAAeqB,EAAoBriB,gBAAiBpC,GAAS,GAC3DykB,CACX,CACK,GAAI1gB,MAAMC,QAAQxF,GAAU,CAE7B,MAAMkmB,EAAc,GACdC,QAAiBpU,QAAQqU,IAAIpmB,EAAQ+V,KAAI,CAACjW,EAAY+E,KACxD,GAA0B,kBAAf/E,EAAyB,CAChC,MAAMklB,EAAapmB,KAAKmmB,oBAAoBjlB,EAAYsS,GACxD8T,EAAYrhB,GAAKmgB,EACjB,MAAMe,EAAiBnnB,KAAKonB,kBAAkBhB,EAAYxjB,GAC1D,OAAIukB,GAGGnnB,KAAKme,KAAKiI,EACrB,CAEI,OAAOllB,CACX,KAGJ,GAAI2lB,EACA,OAAO,IAAI3E,EAA0BxZ,wBAAwB6e,GAEjE,MAAME,QAAwBF,EAASG,QAAO,CAACC,EAAmBC,EAAc3hB,IAAM0hB,EACjFxmB,MAAM0mB,GAAe7nB,KAAKgU,MAAM4T,EAAcnoB,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAG5K,GAAU,CAAE4Q,QAAS8T,EAAYrhB,IAAMrD,EAAQ4Q,QAAS0S,WAAYoB,EAAYrhB,IAAMrD,EAAQsjB,SAAU/X,cAAe0Z,EAAW7iB,gBAAiB+hB,eAAgBO,EAAYrhB,GAAKxG,OAAO+N,OAAO/N,OAAO+N,OAAO,CAAC,EAAGuZ,GAAiB,CAAE,CAACO,EAAYrhB,KAAK,IAAU8gB,IAEtV,CACI1E,eAAgBpc,EAAIshB,EAASzmB,OAAS,OACrCqS,QAAQC,QAAQ,IAAI8O,EAA0BxZ,wBAAwByF,GAAiB,CAAC,KAG7F,OADAnO,KAAKgmB,eAAeyB,EAAgBziB,gBAAiBpC,GAAS,GACvD6kB,CACX,CACK,GAAuB,kBAAZrmB,EAAsB,CAClC,GAAI,aAAcA,EACd,aAAapB,KAAKgU,MAAM5S,EAAQ,YAAawB,GAcjD,GAXAxB,EAAU3B,OAAO+N,OAAO,CAAC,EAAGpM,GAExB8kB,UACO9kB,EAAQ,SAGnBpB,KAAKgmB,eAAe5kB,EAASwB,GAAS,GAGtC5C,KAAKikB,iBAAiB7iB,GAElBylB,EACA,OAAO,IAAI3E,EAA0BxZ,wBAAwBtH,GAGjE,IAAI0mB,EAAgB,CAAC,EACrB,GAAI,YAAa1mB,EAAS,CACtB,KAAI2iB,GAAkB,KAUlB,MAAM,IAAI/F,EAAa1X,WAAW,oDAAqD0X,EAAazX,YAAYye,uBARhH,GAAkC,kBAAvB5jB,EAAQ,WACf,MAAM,IAAI4c,EAAa1X,WAAW,qDAAuDlF,EAAQ,WAAY4c,EAAazX,YAAYwhB,sBAG1ID,QAAsB9nB,KAAKgoB,kBAAkBhoB,KAAKmmB,oBAAoB/kB,EAAQ,WAAYoS,WACnFpS,EAAQ,UAKvB,CACApB,KAAKokB,qBAAqB0D,EAAe,CAAE/D,kBAAkB7B,EAA0B+F,sBACvF,MAAMC,EAAazoB,OAAO+N,OAAOsa,EAAe1mB,GAEhDpB,KAAK8iB,kBAAkBoF,GACvBloB,KAAK8jB,UAAUoE,EAAY,CAAEnE,iBAAgB/b,0BAC7ChI,KAAKokB,qBAAqB8D,EAAY,CAAEnE,kBAAkB7B,EAA0B+F,sBACpF,MAAM3nB,EAAOb,OAAOa,KAAK4nB,GACnBC,EAAkB,GACxB,GAA6B,kBAAlBha,EAEP,IAAK,MAAMzN,KAAOyN,EACVzN,KAAOwnB,EACPC,EAAgBrkB,KAAKpD,GAGrBwnB,EAAWxnB,GAAOyN,EAAczN,SAKtCV,KAAKsmB,mBAAmB4B,EAAYtlB,EAAStC,GACnD,MAAM8nB,EAAoB,IAAIlG,EAA0BxZ,wBAAwBwf,GAoBhF,OAlBKA,GAAcA,EAAW,aAAetgB,EAAcwQ,0BAA4B,MAC9EhX,EAAQ,WAA0C,kBAAtBA,EAAQ,WAAiD,KAAtBA,EAAQ,aACxE+M,GAAiB,WAAYA,GAAiB/M,EAAQ,UAAUud,QAAQ,KAAO,EAC/EuJ,EAAW,UAAY/Z,EAAc,UAAY/M,EAAQ,WAEpDsO,EAAO1L,KAAKqhB,aAAajkB,EAAQ,YAAcA,EAAQ,YAAa8mB,KAEzEA,EAAW,UAAYE,EAAkBze,WAAWvI,EAAQ,WAAW,KAG/EpB,KAAK+iB,oBAAoBqF,EAAmBpoB,KAAKsiB,wBAAyBhiB,IAErEkmB,GAAoBrY,GAAiB4V,GAAkB,KACxD/jB,KAAKukB,6BAA6BpW,EAAe+Z,EAAYhG,EAA0B+F,qBAAsBE,GAE7GnoB,KAAKsO,kBAAoBwY,EAAgBzE,gBACzCriB,KAAKG,SAAS+nB,EAAY,CAAEnE,mBAEzBqE,CACX,CAEI,MAAM,IAAIpK,EAAa1X,WAAW,0EAA0ElF,IAAW4c,EAAazX,YAAY8hB,sBAExJ,CAMA,UAAMlK,CAAKC,GAEP,MAAMkK,EAAStoB,KAAKoiB,cAAchE,GAClC,GAAIkK,EACA,OAAOA,EAGX,IAAIC,EACJ,IACIA,QAAiBvoB,KAAKmiB,eAAehE,KAAKC,EAC9C,CACA,MAAOsI,GACH,MAAM,IAAI1I,EAAa1X,WAAW,iCAAiC8X,MAAQsI,EAAEC,UAAW3I,EAAazX,YAAYiiB,8BACrH,CAEA,KAAM,aAAcD,GAChB,MAAM,IAAIvK,EAAa1X,WAAW,yCAAyC8X,IAAOJ,EAAazX,YAAYkiB,wBAE/G,OAAOzoB,KAAKoiB,cAAchE,GAAOmK,EAAS,WAC9C,CAUA,iBAAAnB,CAAkBhJ,EAAKxb,GACnB,GAAIwb,KAAQxb,EAAQmkB,gBAAkB,CAAC,GAAI,CACvC,GAAInkB,EAAQ6jB,2BACR,OAAOrI,EAGP,MAAM,IAAIJ,EAAa1X,WAAW,0CAA4C8X,EAAKJ,EAAazX,YAAYmiB,4BAEpH,CACA,OAAO,IACX,CAKA,uBAAMV,CAAkBW,GAEpB,IAAIb,QAAsB9nB,KAAKme,KAAKwK,GAEpC,GAA6B,kBAAlBb,GAA8BnhB,MAAMC,QAAQkhB,GACnD,MAAM,IAAI9J,EAAa1X,WAAW,gDAAkDqiB,EAAkB3K,EAAazX,YAAYkiB,wBAGnI,GAAI,YAAaX,EACb,MAAM,IAAI9J,EAAa1X,WAAW,uDAAyDqiB,EAAkB3K,EAAazX,YAAYye,uBAM1I,OAJA8C,EAAgBroB,OAAO+N,OAAO,CAAC,EAAGsa,GAGlC9nB,KAAKikB,iBAAiB6D,GACfA,CACX,EAEJlgB,EAAcwQ,wBAA0B,IACxCzY,EAAQiI,cAAgBA,C,mCCnwBxBnI,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ4G,YAAc5G,EAAQ2G,gBAAa,EAO3C,MAAMA,UAAmB/D,MAErB,WAAAzC,CAAY6mB,EAASvK,GACjBvZ,MAAM8jB,GACN3mB,KAAKoc,KAAOA,CAChB,EAEJzc,EAAQ2G,WAAaA,EAOrB,SAAWC,GACPA,EAAY,sBAAwB,qBACpCA,EAAY,uBAAyB,sBACrCA,EAAY,sBAAwB,qBACpCA,EAAY,oBAAsB,oBAClCA,EAAY,uBAAyB,uBACrCA,EAAY,sBAAwB,sBACpCA,EAAY,wBAA0B,wBACtCA,EAAY,2BAA6B,2BACzCA,EAAY,yBAA2B,yBACvCA,EAAY,wBAA0B,wBACtCA,EAAY,yBAA2B,yBACvCA,EAAY,oBAAsB,mBAClCA,EAAY,6BAA+B,4BAC3CA,EAAY,yBAA2B,wBACvCA,EAAY,iCAAmC,gCAC/CA,EAAY,4BAA8B,2BAC1CA,EAAY,0BAA4B,0BACxCA,EAAY,uBAAyB,sBACrCA,EAAY,wBAA0B,uBACtCA,EAAY,yBAA2B,wBACvCA,EAAY,8BAAgC,6BAC5CA,EAAY,4BAA8B,2BAC1CA,EAAY,kCAAoC,iCAChDA,EAAY,iCAAmC,gCAC/CA,EAAY,yBAA2B,wBACvCA,EAAY,0BAA4B,yBACxCA,EAAY,4BAA8B,2BAC1CA,EAAY,gCAAkC,+BAC9CA,EAAY,kCAAoC,iCAChDA,EAAY,0BAA4B,yBACxCA,EAAY,0BAA4B,yBACxCA,EAAY,8BAAgC,6BAC5CA,EAAY,2BAA6B,0BACzCA,EAAY,wBAA0B,uBACtCA,EAAY,sBAAwB,qBACpCA,EAAY,uBAAyB,sBACrCA,EAAY,wBAA0B,uBACtCA,EAAY,8BAAgC,6BAC5CA,EAAY,yBAA2B,wBACvCA,EAAY,4BAA8B,2BAC1CA,EAAY,wBAA0B,uBACtCA,EAAY,2BAA6B,0BACzCA,EAAY,iCAAmC,gCAC/CA,EAAY,iCAAmC,gCAC/CA,EAAY,4BAA8B,2BAC1CA,EAAY,+BAAiC,8BAC7CA,EAAY,oBAAsB,mBAClCA,EAAY,0BAA4B,yBACxCA,EAAY,+BAAiC,8BAC7CA,EAAY,+BAAiC,8BAI7CA,EAAY,yBAA2B,wBACvCA,EAAY,sBAAwB,oBACvC,CAxDD,CAwDiB5G,EAAQ4G,cAAgB5G,EAAQ4G,YAAc,CAAC,G,qCC9EhE9G,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0R,2BAAwB,EAChC,MAAMpN,EAA0B,EAAQ,OAClCyL,EAAS,EAAQ,OAKvB,MAAM2B,EAaF,kCAAaC,CAAsBlR,EAAgBC,EAAMC,EAAMC,EAAO2B,EAAWC,EAAQwU,GACrF,MAAM1J,QAAwB5M,EAAKkM,mBAAmBjM,EAAMC,GACtDiW,QAAyBnW,EAAKuL,oBAAoBrL,EAAOD,GACzDsoB,EAAuBroB,EAAQiW,EAC/BF,EAAWlW,EAAegD,QAAQ6J,GACxC,GAAIqJ,EAEA,IAAK,MAAMrU,KAAWqU,EAAU,CAE5B,MAAMuS,EAAUrS,GAAoB,EACpC,GAAIqS,EAAS,CACT,MAAMpS,EAASrW,EAAegD,QAAQwlB,EAAuB,GAC7D,GAAInS,EACA,IAAK,MAAMrU,KAASqU,EAEZE,GACAtW,EAAK2L,uBAAuB7J,GAC5B/B,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAKF,EAAQD,EAAWD,EAASG,KAGjFhC,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAKJ,EAASC,EAAWC,EAAQC,SAMrFuU,GACAtW,EAAK2L,uBAAuB7J,GAC5B/B,EAAeyW,+BAA+B+R,EAAuB,GAAG9kB,KAAK,CAAE7B,QAASE,EAAQD,YAAWC,OAAQF,KAGnH7B,EAAeyW,+BAA+B+R,EAAuB,GAChE9kB,KAAK,CAAE7B,UAASC,YAAWC,UAG5C,KACK,CAED,MAAMC,QAAc/B,EAAK6L,uBAAuB5L,EAAM2M,GAClD0J,GACAtW,EAAK2L,uBAAuB7J,GAC5B/B,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAKF,EAAQD,EAAWD,EAASG,KAGjFhC,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAKJ,EAASC,EAAWC,EAAQC,GAEzF,CACJ,MAIIuU,GACAtW,EAAK2L,uBAAuB7J,GAEhC/B,EAAe0oB,+BAA+B7b,GAAiBnJ,KAAK,CAAE5B,YAAWC,SAAQwU,WAEjG,CACA,iBAAA1W,GACI,OAAO,CACX,CACA,gBAAAC,GACI,OAAO,CACX,CACA,cAAMC,CAASC,EAAgBC,EAAMC,EAAMC,EAAOC,GAC9C,MAAME,EAAMJ,EAAKC,GACjB,GAAIG,EAAK,CACL,MAAMU,QAAgBhB,EAAeS,WAAWP,GAChD,IAAKF,EAAeuL,iBAAiBpL,UAAgBF,EAAKoJ,gBAAgBrI,EAASd,EAAKC,IAKpF,MAHsD,UAAlDmP,EAAO1L,KAAKoB,oBAAoBhE,EAASV,KACzCN,EAAeuL,iBAAiBpL,EAAQ,IAAK,IAE1C,CAEf,CACA,OAAO,CACX,CACA,UAAME,CAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,GACxC,OAAOD,EAAKC,EAChB,CACA,YAAMyC,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,EAAO6V,GACxD,MAAMhF,EAAc9Q,EAAKC,GACnBa,QAAgBhB,EAAeS,WAAWP,GAC1C4B,QAAkB7B,EAAKoJ,gBAAgBrI,EAASV,GACtD,GAAIwB,EAAW,CACX,MAAM6mB,QAAgB1oB,EAAKoG,YAAYrF,EAASV,EAAKd,EAAOW,EAAOD,GACnE,GAAIyoB,EAAQjoB,OACR,IAAK,IAAIqB,KAAU4mB,EAAS,CACxB,MAAMpS,EAAUjH,EAAO1L,KAAK0B,kBAAkBtE,EAASgQ,QAAmB/Q,EAAKiL,qBAAqBhL,EAAMC,IAC1G,GAAIX,EAAO,CAGP,MAAMopB,EAAqB,UAAWtZ,EAAO1L,KAAKmB,yBAAyB/D,EAASV,GACpF,GAAIsoB,GAAsBppB,EAAM,SAAU,CACtC,IAAMopB,IAAuBriB,MAAMC,QAAQhH,KAAWA,EAAM,UACpDA,EAAM,WAAa+G,MAAMC,QAAQhH,EAAM,YACxCuC,IAAW9B,EAAKoE,OAAQ,CAC3B,MAAM0L,EAAc9P,EAAKoD,YAAY9B,YACrCvB,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAK8N,EAAa9P,EAAKmE,QAASnE,EAAKoE,OAAQpE,EAAKyK,oBAClG1K,EAAe2K,SAASxK,EAAOF,EAAKoD,YAAYpB,KAAK8N,EAAa9P,EAAKiE,SAAUnC,EAAQ9B,EAAKyK,oBAC9F3I,EAASgO,CACb,CAEA,GAAIwG,IAAYvW,EAAe6oB,iBAC3B,MAAM,IAAIhlB,EAAwBqC,WAAW,mDAAmD5F,IAAOuD,EAAwBsC,YAAY0F,+BAEnJ,CACJ,OACMoF,EAAsBC,sBAAsBlR,EAAgBC,EAAMC,EAAMC,EAAO2B,EAAWC,EAAQwU,EAC5G,CAER,CACJ,EAEJhX,EAAQ0R,sBAAwBA,C,oBCxIhC,MAAM6X,EACJ,MAAArlB,CAAQ+I,GACN,QAASA,GAASA,EAAMlL,WAAa1B,KAAK0B,QAC5C,EAGFwnB,EAAarc,UAAUnL,SAAW,eAClCwnB,EAAarc,UAAUjN,MAAQ,GAE/B4C,EAAO7C,QAAUupB,C,wBCTjB,MAAMxc,EAAY,EAAQ,OACpBwc,EAAe,EAAQ,OACvBC,EAAc,EAAQ,MACtB5X,EAAU,EAAQ,OAClBV,EAAY,EAAQ,OACpBjC,EAAO,EAAQ,OACfkC,EAAW,EAAQ,OAEzB,SAAS/O,EAAWnC,GAClB,OAAO,IAAIiR,EAAUjR,EACvB,CAEA,SAAS+B,EAAW/B,GAClB,OAAO,IAAI8M,EAAU9M,EACvB,CAEA,SAASiC,EAASjC,EAAO8f,GACvB,MAAkC,kBAAvBA,GACgC,IAArCA,EAAmBf,QAAQ,KACtB,IAAIpN,EAAQ3R,EAAO8f,GAGrB,IAAInO,EAAQ3R,EAAO,KAAMyE,EAAYtC,UAAU2d,IAGjD,IAAInO,EAAQ3R,EAAO,KAAM8f,EAClC,CAEA,SAASpd,EAAU1C,GACjB,OAAO,IAAIkR,EAASlR,EACtB,CAEA,SAASgC,IACP,OAAOyC,EAAY+kB,oBACrB,CAEA,SAASC,EAAQpnB,EAASC,EAAWC,GACnC,OAAOkC,EAAYhC,KAAKJ,EAASC,EAAWC,EAC9C,CAEA,SAASE,EAAMJ,EAASC,EAAWC,EAAQC,GACzC,OAAO,IAAIwM,EAAK3M,EAASC,EAAWC,EAAQC,GAASiC,EAAY+kB,qBACnE,CAEA,SAAS5nB,EAAUC,GACjB,OAAO0nB,EAAY3Z,KAAKnL,EAAa5C,EACvC,CAEA,SAAS6nB,EAAU7nB,GACjB,OAAO0nB,EAAY3Z,KAAKnL,EAAa5C,EACvC,CAEA,MAAM4C,EAAc,CAClBtC,YACAJ,YACAE,UACAS,WACAV,eACAynB,SACAhnB,OACAb,WACA8nB,WACAF,qBAAsB,IAAIF,GAG5B1mB,EAAO7C,QAAU0E,C,wBCjEjB,MAAM6kB,EAAe,EAAQ,OAE7B,MAAMta,EACJ,WAAA9O,CAAamC,EAASC,EAAWC,EAAQC,GACvCpC,KAAKiC,QAAUA,EACfjC,KAAKkC,UAAYA,EACjBlC,KAAKmC,OAASA,EAGZnC,KAAKoC,MADHA,GAGW,IAAI8mB,CAErB,CAEA,MAAArlB,CAAQ+I,GAEN,QAASA,IAA6B,SAAnBA,EAAMlL,WAAwBkL,EAAMlL,WACrDkL,EAAM3K,QAAQ4B,OAAO7D,KAAKiC,UAAY2K,EAAM1K,UAAU2B,OAAO7D,KAAKkC,YAClE0K,EAAMzK,OAAO0B,OAAO7D,KAAKmC,SAAWyK,EAAMxK,MAAMyB,OAAO7D,KAAKoC,MAChE,EAGFwM,EAAK/B,UAAUnL,SAAW,OAC1BkN,EAAK/B,UAAUjN,MAAQ,GAEvB4C,EAAO7C,QAAUiP,C,oBC1BjB,MAAMiC,EACJ,WAAA/Q,CAAa+F,GACX7F,KAAKJ,MAAQiG,CACf,CAEA,MAAAhC,CAAQ+I,GACN,QAASA,GAASA,EAAMlL,WAAa1B,KAAK0B,UAAYkL,EAAMhN,QAAUI,KAAKJ,KAC7E,EAGFiR,EAAUhE,UAAUnL,SAAW,YAE/Bc,EAAO7C,QAAUkR,C,qCCXjBpR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQsoB,qBAAuBtoB,EAAQ+I,6BAA0B,EACjE,MAAMuV,EAA6B,EAAQ,OACrCD,EAAe,EAAQ,OACvBtO,EAAS,EAAQ,OAIvB,MAAMhH,EACF,WAAA5I,CAAYkjB,GACRhjB,KAAKgjB,WAAaA,CACtB,CAIA,aAAAhe,GACI,OAAOhF,KAAKgjB,UAChB,CAsBA,UAAArZ,CAAW/F,EAAM2lB,EAAa3mB,EAAUjD,EAAQsoB,sBAC5C,MAAMuB,EAAexpB,KAAKgjB,WAAWpf,GAErC,GAAqB,OAAjB4lB,GAA0BA,GAAwC,OAAxBA,EAAa,OACvD,OAAO,KAGX,IAAIC,GAAkB,EACtB,GAAID,GAAgBD,EAAa,CAC7B,MAAM3pB,EAAQ8P,EAAO1L,KAAKuf,kBAAkBiG,GAC5C,GAAI5pB,GAASA,IAAUgE,EAAM,CACzB,GAAqB,kBAAVhE,IAAwB8P,EAAO1L,KAAK4B,WAAWhG,IAAW8P,EAAO1L,KAAKqH,eAAezL,IAO5F,OAAOA,EALF8P,EAAO1L,KAAKmH,mBAAmBvL,KAChC6pB,GAAkB,EAM9B,CACJ,CAEA,MAAMnI,EAAS5R,EAAO1L,KAAKkhB,UAAUthB,EAAM5D,KAAKgjB,YAC1C0G,EAAQ1pB,KAAKgjB,WAAW,UACxB2G,KAAmBD,GAAmB,KAAVA,IAAiBA,EAAM/K,QAAQ,KAAO,EAClEiL,EAAO5pB,KAAKgjB,WAAW,SACvB6G,EAAmBna,EAAO1L,KAAKmH,mBAAmBvH,GACxD,GAAI0d,EAAQ,CACR,MAAMwI,EAAqB9pB,KAAKgjB,WAAW1B,GACrC1hB,EAAQ8P,EAAO1L,KAAKuf,kBAAkBuG,GAC5C,GAAIlqB,EAAO,CACP,GAAkC,kBAAvBkqB,GAAoClnB,EAAQmnB,oBAWnD,GAAiB,MAAbnqB,EAAM,KAAeiqB,IAAqBC,EAAmB,cAAgBlmB,KAAQ5D,KAAKgjB,YAE1F,OAAOpf,OATX,IAAK8L,EAAO1L,KAAKsgB,6BAA6B1kB,EAAOgD,GAEjD,OAAOgB,EAUf,OAAOhE,EAAQgE,EAAKkG,OAAOwX,EAAOxgB,OAAS,EAC/C,CACJ,KACK,IAAIyoB,IAAiBG,GAAmB,KAAVA,GAAkB9mB,EAAQonB,0BAA6BJ,GAAQD,KAC1FE,IAAqBna,EAAO1L,KAAKqhB,aAAazhB,GAAO,CACzD,GAAI+lB,EAAe,CACf,GAAI/mB,EAAQonB,yBACR,OAASN,GAASE,GAAQ,EAAI3L,EAA2B7K,SAASsW,EAAOE,GAAQ,IAAMhmB,EAGvF,MAAM,IAAIoa,EAAa1X,WAAW,sCAAsC1C,kBAAqB8lB,qBAA0B1L,EAAazX,YAAYqe,sBAExJ,CAEI,OAAO8E,EAAQ9lB,CAEvB,CACK,IAAK2lB,GAAeK,IAASC,IAAqBna,EAAO1L,KAAKqhB,aAAazhB,GAC5E,OAAO,EAAIqa,EAA2B7K,SAASxP,EAAMgmB,EACzD,CAEA,GAAIH,EACA,OAAO7lB,EAGP,MAAM,IAAIoa,EAAa1X,WAAW,gDAAgD1C,QAAWyD,KAAKC,UAAUkiB,MAAkBxL,EAAazX,YAAYwD,oBAE/J,CAWA,UAAAkgB,CAAWpkB,EAAK6jB,GAEZ,GAAIA,GAAS1pB,KAAKgjB,WAAW,WAAand,EAAImE,WAAWhK,KAAKgjB,WAAW,WACrE,OAAOnd,EAAIiE,OAAO9J,KAAKgjB,WAAW,UAAUliB,QAGhD,IAAK4oB,GAAS1pB,KAAKgjB,WAAW,UAAYnd,EAAImE,WAAWhK,KAAKgjB,WAAW,UACrE,OAAOnd,EAAIiE,OAAO9J,KAAKgjB,WAAW,SAASliB,QAK/C,MAAMopB,EAAoB,CAAE5I,OAAQ,GAAI6I,OAAQtkB,GAChD,IAAK,MAAMnF,KAAOV,KAAKgjB,WAAY,CAC/B,MAAMpjB,EAAQI,KAAKgjB,WAAWtiB,GAC9B,GAAId,IAAU8P,EAAO1L,KAAKmH,mBAAmBzK,GAAM,CAC/C,MAAM0lB,EAAa1W,EAAO1L,KAAKuf,kBAAkB3jB,GACjD,GAAIiG,EAAImE,WAAWoc,GAAa,CAC5B,MAAM+D,EAAStkB,EAAIiE,OAAOsc,EAAWtlB,QACrC,GAAKqpB,EAMIA,EAAOrpB,OAASopB,EAAkBC,OAAOrpB,SAE9CopB,EAAkB5I,OAAS5gB,EAC3BwpB,EAAkBC,OAASA,QAR3B,GAAIT,EAEA,OAAOhpB,CAQnB,CACJ,CACJ,CAEA,OAAIwpB,EAAkB5I,OACX4I,EAAkB5I,OAAS,IAAM4I,EAAkBC,OAEvDtkB,CACX,EAEJlG,EAAQ+I,wBAA0BA,EAClC/I,EAAQsoB,qBAAuB,CAC3B8B,oBAAoB,EACpBK,yBAAyB,EACzBJ,0BAA0B,E,qCCzK9BvqB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ6Y,wCAAqC,EAC7C,MAAMvU,EAA0B,EAAQ,OAKxC,MAAMuU,EACF,iBAAAvY,GACI,OAAO,CACX,CACA,gBAAAC,GACI,OAAO,CACX,CACA,cAAMC,CAASC,EAAgBC,EAAMC,EAAMC,EAAOC,GAC9C,MAAME,QAAYL,EAAKmH,eAAelH,EAAKC,GAAQD,EAAMC,GACzD,QAAI0D,EAAwBD,KAAKmH,mBAAmBzK,OAE3CF,GACW,UAARE,EAOhB,CACA,UAAMD,CAAKL,EAAgBC,EAAMK,EAAKJ,EAAMC,GACxC,OAAO0D,EAAwBD,KAAKmH,mBAAmBzK,EAC3D,CACA,YAAMsC,CAAO5C,EAAgBC,EAAMK,EAAKJ,EAAMV,EAAOW,GACjD,MAAM8pB,EAAc7R,EAAmC8R,qBAAqB5pB,QACxDwE,IAAhBmlB,EACIA,UAAsBzqB,IAAUyqB,EAAYplB,MAC5C7E,EAAemJ,UAAU,IAAItF,EAAwBqC,WAAW,2BAA2B5F,kBAAoBd,KAAUyqB,EAAY3H,YAGpItiB,EAAe0H,cACpB1H,EAAemJ,UAAU,IAAIhH,MAAM,oBAAoB7B,kBAAoBd,OAE/EQ,EAAe+C,aAAa5C,IAAS,CACzC,EAEJZ,EAAQ6Y,mCAAqCA,EAC7CA,EAAmC8R,qBAAuB,CACtD,SAAU,CAAErlB,KAAM,SAAUyd,UAAWze,EAAwBsC,YAAYmB,qBAC3E,QAAS,KACT,WAAY,CAAEzC,KAAM,SAAUyd,UAAWze,EAAwBsC,YAAYgkB,uBAC7E,OAAQ,KACR,SAAU,K,yBClDd,SAAUC,IAEO,SAAW7qB,GAG1B,IAAI8qB,EACqB,qBAAfC,YAA8BA,YACrB,qBAATF,GAAwBA,GAEb,qBAAX,EAAAC,GAA0B,EAAAA,GAClC,CAAC,EAECE,EAAU,CACZC,aAAc,oBAAqBH,EACnCI,SAAU,WAAYJ,GAAK,aAAcK,OACzCC,KACE,eAAgBN,GAChB,SAAUA,GACV,WACE,IAEE,OADA,IAAIO,MACG,CACT,CAAE,MAAOtE,GACP,OAAO,CACT,CACD,CAPD,GAQFuE,SAAU,aAAcR,EACxBS,YAAa,gBAAiBT,GAGhC,SAASU,EAAWC,GAClB,OAAOA,GAAOC,SAASxe,UAAUye,cAAcF,EACjD,CAEA,GAAIT,EAAQO,YACV,IAAIK,EAAc,CAChB,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGEC,EACFC,YAAYC,QACZ,SAASN,GACP,OAAOA,GAAOG,EAAY5M,QAAQlf,OAAOoN,UAAU1D,SAASqG,KAAK4b,KAAS,CAC5E,EAGJ,SAASO,EAAc5a,GAIrB,GAHoB,kBAATA,IACTA,EAAO0L,OAAO1L,IAEZ,6BAA6BtQ,KAAKsQ,IAAkB,KAATA,EAC7C,MAAM,IAAI6a,UAAU,4CAA8C7a,EAAO,KAE3E,OAAOA,EAAK7I,aACd,CAEA,SAAS2jB,EAAejsB,GAItB,MAHqB,kBAAVA,IACTA,EAAQ6c,OAAO7c,IAEVA,CACT,CAGA,SAASksB,EAAYC,GACnB,IAAIC,EAAW,CACbC,KAAM,WACJ,IAAIrsB,EAAQmsB,EAAMG,QAClB,MAAO,CAACC,UAAgBjnB,IAAVtF,EAAqBA,MAAOA,EAC5C,GASF,OANI+qB,EAAQE,WACVmB,EAASlB,OAAOkB,UAAY,WAC1B,OAAOA,CACT,GAGKA,CACT,CAEA,SAASzN,EAAQ7K,GACf1T,KAAKmX,IAAM,CAAC,EAERzD,aAAmB6K,EACrB7K,EAAQI,SAAQ,SAASlU,EAAOmR,GAC9B/Q,KAAKosB,OAAOrb,EAAMnR,EACpB,GAAGI,MACM2G,MAAMC,QAAQ8M,GACvBA,EAAQI,SAAQ,SAASuY,GACvB,GAAqB,GAAjBA,EAAOvrB,OACT,MAAM,IAAI8qB,UAAU,sEAAwES,EAAOvrB,QAErGd,KAAKosB,OAAOC,EAAO,GAAIA,EAAO,GAChC,GAAGrsB,MACM0T,GACTjU,OAAO6sB,oBAAoB5Y,GAASI,SAAQ,SAAS/C,GACnD/Q,KAAKosB,OAAOrb,EAAM2C,EAAQ3C,GAC5B,GAAG/Q,KAEP,CA8DA,SAASusB,EAASC,GAChB,IAAIA,EAAKC,QACT,OAAID,EAAKE,SACAvZ,QAAQwZ,OAAO,IAAIf,UAAU,sBAEtCY,EAAKE,UAAW,EAClB,CAEA,SAASE,EAAgBC,GACvB,OAAO,IAAI1Z,SAAQ,SAASC,EAASuZ,GACnCE,EAAOC,OAAS,WACd1Z,EAAQyZ,EAAOpP,OACjB,EACAoP,EAAOE,QAAU,WACfJ,EAAOE,EAAOnY,MAChB,CACF,GACF,CAEA,SAASsY,EAAsBjC,GAC7B,IAAI8B,EAAS,IAAII,WACbC,EAAUN,EAAgBC,GAE9B,OADAA,EAAOM,kBAAkBpC,GAClBmC,CACT,CAEA,SAASE,EAAerC,GACtB,IAAI8B,EAAS,IAAII,WACbC,EAAUN,EAAgBC,GAC1BvY,EAAQ,2BAA2BC,KAAKwW,EAAK9lB,MAC7C+P,EAAWV,EAAQA,EAAM,GAAK,QAElC,OADAuY,EAAOQ,WAAWtC,EAAM/V,GACjBkY,CACT,CAEA,SAASI,EAAsBxQ,GAI7B,IAHA,IAAIyQ,EAAO,IAAIC,WAAW1Q,GACtB2Q,EAAQ,IAAI9mB,MAAM4mB,EAAKzsB,QAElBmF,EAAI,EAAGA,EAAIsnB,EAAKzsB,OAAQmF,IAC/BwnB,EAAMxnB,GAAKwW,OAAOC,aAAa6Q,EAAKtnB,IAEtC,OAAOwnB,EAAM9H,KAAK,GACpB,CAEA,SAAS+H,EAAY5Q,GACnB,GAAIA,EAAIjU,MACN,OAAOiU,EAAIjU,MAAM,GAEjB,IAAI0kB,EAAO,IAAIC,WAAW1Q,EAAIQ,YAE9B,OADAiQ,EAAKI,IAAI,IAAIH,WAAW1Q,IACjByQ,EAAK/Q,MAEhB,CAEA,SAASoR,IAqHP,OApHA5tB,KAAK0sB,UAAW,EAEhB1sB,KAAK6tB,UAAY,SAASrB,GAYxBxsB,KAAK0sB,SAAW1sB,KAAK0sB,SACrB1sB,KAAK8tB,UAAYtB,EACZA,EAGsB,kBAATA,EAChBxsB,KAAK+tB,UAAYvB,EACR7B,EAAQI,MAAQC,KAAKne,UAAUye,cAAckB,GACtDxsB,KAAKguB,UAAYxB,EACR7B,EAAQM,UAAYgD,SAASphB,UAAUye,cAAckB,GAC9DxsB,KAAKkuB,cAAgB1B,EACZ7B,EAAQC,cAAgBuD,gBAAgBthB,UAAUye,cAAckB,GACzExsB,KAAK+tB,UAAYvB,EAAKrjB,WACbwhB,EAAQO,aAAeP,EAAQI,MAAQI,EAAWqB,IAC3DxsB,KAAKouB,iBAAmBV,EAAYlB,EAAKhQ,QAEzCxc,KAAK8tB,UAAY,IAAI9C,KAAK,CAAChrB,KAAKouB,oBACvBzD,EAAQO,cAAgBO,YAAY5e,UAAUye,cAAckB,IAAShB,EAAkBgB,IAChGxsB,KAAKouB,iBAAmBV,EAAYlB,GAEpCxsB,KAAK+tB,UAAYvB,EAAO/sB,OAAOoN,UAAU1D,SAASqG,KAAKgd,IAjBvDxsB,KAAKysB,SAAU,EACfzsB,KAAK+tB,UAAY,IAmBd/tB,KAAK0T,QAAQtE,IAAI,kBACA,kBAATod,EACTxsB,KAAK0T,QAAQia,IAAI,eAAgB,4BACxB3tB,KAAKguB,WAAahuB,KAAKguB,UAAU/oB,KAC1CjF,KAAK0T,QAAQia,IAAI,eAAgB3tB,KAAKguB,UAAU/oB,MACvC0lB,EAAQC,cAAgBuD,gBAAgBthB,UAAUye,cAAckB,IACzExsB,KAAK0T,QAAQia,IAAI,eAAgB,mDAGvC,EAEIhD,EAAQI,OACV/qB,KAAK+qB,KAAO,WACV,IAAIsD,EAAW9B,EAASvsB,MACxB,GAAIquB,EACF,OAAOA,EAGT,GAAIruB,KAAKguB,UACP,OAAO7a,QAAQC,QAAQpT,KAAKguB,WACvB,GAAIhuB,KAAKouB,iBACd,OAAOjb,QAAQC,QAAQ,IAAI4X,KAAK,CAAChrB,KAAKouB,oBACjC,GAAIpuB,KAAKkuB,cACd,MAAM,IAAI3rB,MAAM,wCAEhB,OAAO4Q,QAAQC,QAAQ,IAAI4X,KAAK,CAAChrB,KAAK+tB,YAE1C,GAGF/tB,KAAKkrB,YAAc,WACjB,GAAIlrB,KAAKouB,iBAAkB,CACzB,IAAIE,EAAa/B,EAASvsB,MAC1B,OAAIsuB,IAEO7C,YAAYC,OAAO1rB,KAAKouB,kBAC1Bjb,QAAQC,QACbpT,KAAKouB,iBAAiB5R,OAAO3T,MAC3B7I,KAAKouB,iBAAiBG,WACtBvuB,KAAKouB,iBAAiBG,WAAavuB,KAAKouB,iBAAiB9Q,aAItDnK,QAAQC,QAAQpT,KAAKouB,kBAEhC,CAAO,GAAIzD,EAAQI,KACjB,OAAO/qB,KAAK+qB,OAAO5pB,KAAK6rB,GAExB,MAAM,IAAIzqB,MAAM,gCAEpB,EAEAvC,KAAKwuB,KAAO,WACV,IAAIH,EAAW9B,EAASvsB,MACxB,GAAIquB,EACF,OAAOA,EAGT,GAAIruB,KAAKguB,UACP,OAAOZ,EAAeptB,KAAKguB,WACtB,GAAIhuB,KAAKouB,iBACd,OAAOjb,QAAQC,QAAQka,EAAsBttB,KAAKouB,mBAC7C,GAAIpuB,KAAKkuB,cACd,MAAM,IAAI3rB,MAAM,wCAEhB,OAAO4Q,QAAQC,QAAQpT,KAAK+tB,UAEhC,EAEIpD,EAAQM,WACVjrB,KAAKirB,SAAW,WACd,OAAOjrB,KAAKwuB,OAAOrtB,KAAKstB,EAC1B,GAGFzuB,KAAK4e,KAAO,WACV,OAAO5e,KAAKwuB,OAAOrtB,KAAKkG,KAAK2M,MAC/B,EAEOhU,IACT,CAzOAue,EAAQ1R,UAAUuf,OAAS,SAASrb,EAAMnR,GACxCmR,EAAO4a,EAAc5a,GACrBnR,EAAQisB,EAAejsB,GACvB,IAAI8uB,EAAW1uB,KAAKmX,IAAIpG,GACxB/Q,KAAKmX,IAAIpG,GAAQ2d,EAAWA,EAAW,KAAO9uB,EAAQA,CACxD,EAEA2e,EAAQ1R,UAAU,UAAY,SAASkE,UAC9B/Q,KAAKmX,IAAIwU,EAAc5a,GAChC,EAEAwN,EAAQ1R,UAAUuC,IAAM,SAAS2B,GAE/B,OADAA,EAAO4a,EAAc5a,GACd/Q,KAAK6T,IAAI9C,GAAQ/Q,KAAKmX,IAAIpG,GAAQ,IAC3C,EAEAwN,EAAQ1R,UAAUgH,IAAM,SAAS9C,GAC/B,OAAO/Q,KAAKmX,IAAI5H,eAAeoc,EAAc5a,GAC/C,EAEAwN,EAAQ1R,UAAU8gB,IAAM,SAAS5c,EAAMnR,GACrCI,KAAKmX,IAAIwU,EAAc5a,IAAS8a,EAAejsB,EACjD,EAEA2e,EAAQ1R,UAAUiH,QAAU,SAASmB,EAAU0Z,GAC7C,IAAK,IAAI5d,KAAQ/Q,KAAKmX,IAChBnX,KAAKmX,IAAI5H,eAAewB,IAC1BkE,EAASzF,KAAKmf,EAAS3uB,KAAKmX,IAAIpG,GAAOA,EAAM/Q,KAGnD,EAEAue,EAAQ1R,UAAUvM,KAAO,WACvB,IAAIyrB,EAAQ,GAIZ,OAHA/rB,KAAK8T,SAAQ,SAASlU,EAAOmR,GAC3Bgb,EAAMjoB,KAAKiN,EACb,IACO+a,EAAYC,EACrB,EAEAxN,EAAQ1R,UAAU7D,OAAS,WACzB,IAAI+iB,EAAQ,GAIZ,OAHA/rB,KAAK8T,SAAQ,SAASlU,GACpBmsB,EAAMjoB,KAAKlE,EACb,IACOksB,EAAYC,EACrB,EAEAxN,EAAQ1R,UAAUwU,QAAU,WAC1B,IAAI0K,EAAQ,GAIZ,OAHA/rB,KAAK8T,SAAQ,SAASlU,EAAOmR,GAC3Bgb,EAAMjoB,KAAK,CAACiN,EAAMnR,GACpB,IACOksB,EAAYC,EACrB,EAEIpB,EAAQE,WACVtM,EAAQ1R,UAAUie,OAAOkB,UAAYzN,EAAQ1R,UAAUwU,SAmLzD,IAAIuN,EAAU,CAAC,UAAW,SAAU,MAAO,OAAQ,UAAW,QAAS,OAAQ,MAAO,SAEtF,SAASC,EAAgBC,GACvB,IAAIC,EAAUD,EAAOE,cACrB,OAAOJ,EAAQjQ,QAAQoQ,IAAY,EAAIA,EAAUD,CACnD,CAEA,SAASG,EAAQ3hB,EAAO1K,GACtB,KAAM5C,gBAAgBivB,GACpB,MAAM,IAAIrD,UAAU,8FAGtBhpB,EAAUA,GAAW,CAAC,EACtB,IAAI4pB,EAAO5pB,EAAQ4pB,KAEnB,GAAIlf,aAAiB2hB,EAAS,CAC5B,GAAI3hB,EAAMof,SACR,MAAM,IAAId,UAAU,gBAEtB5rB,KAAKoe,IAAM9Q,EAAM8Q,IACjBpe,KAAKkvB,YAAc5hB,EAAM4hB,YACpBtsB,EAAQ8Q,UACX1T,KAAK0T,QAAU,IAAI6K,EAAQjR,EAAMoG,UAEnC1T,KAAK8uB,OAASxhB,EAAMwhB,OACpB9uB,KAAKsT,KAAOhG,EAAMgG,KAClBtT,KAAKmvB,OAAS7hB,EAAM6hB,OACf3C,GAA2B,MAAnBlf,EAAMwgB,YACjBtB,EAAOlf,EAAMwgB,UACbxgB,EAAMof,UAAW,EAErB,MACE1sB,KAAKoe,IAAM3B,OAAOnP,GAiBpB,GAdAtN,KAAKkvB,YAActsB,EAAQssB,aAAelvB,KAAKkvB,aAAe,eAC1DtsB,EAAQ8Q,SAAY1T,KAAK0T,UAC3B1T,KAAK0T,QAAU,IAAI6K,EAAQ3b,EAAQ8Q,UAErC1T,KAAK8uB,OAASD,EAAgBjsB,EAAQksB,QAAU9uB,KAAK8uB,QAAU,OAC/D9uB,KAAKsT,KAAO1Q,EAAQ0Q,MAAQtT,KAAKsT,MAAQ,KACzCtT,KAAKmvB,OAASvsB,EAAQusB,QAAUnvB,KAAKmvB,QAAW,WAC9C,GAAI,oBAAqB1E,EAAG,CAC1B,IAAI2E,EAAO,IAAIC,gBACf,OAAOD,EAAKD,MACd,CACF,CAL+C,GAM/CnvB,KAAKsvB,SAAW,MAEK,QAAhBtvB,KAAK8uB,QAAoC,SAAhB9uB,KAAK8uB,SAAsBtC,EACvD,MAAM,IAAIZ,UAAU,6CAItB,GAFA5rB,KAAK6tB,UAAUrB,IAEK,QAAhBxsB,KAAK8uB,QAAoC,SAAhB9uB,KAAK8uB,UACV,aAAlBlsB,EAAQ2sB,OAA0C,aAAlB3sB,EAAQ2sB,OAAsB,CAEhE,IAAIC,EAAgB,gBACpB,GAAIA,EAAc/uB,KAAKT,KAAKoe,KAE1Bpe,KAAKoe,IAAMpe,KAAKoe,IAAI7T,QAAQilB,EAAe,QAAS,IAAIC,MAAOC,eAC1D,CAEL,IAAIC,EAAgB,KACpB3vB,KAAKoe,MAAQuR,EAAclvB,KAAKT,KAAKoe,KAAO,IAAM,KAAO,MAAO,IAAIqR,MAAOC,SAC7E,CACF,CAEJ,CAMA,SAASjB,EAAOjC,GACd,IAAIoD,EAAO,IAAI3B,SAYf,OAXAzB,EACGqD,OACAC,MAAM,KACNhc,SAAQ,SAASic,GAChB,GAAIA,EAAO,CACT,IAAID,EAAQC,EAAMD,MAAM,KACpB/e,EAAO+e,EAAM5D,QAAQ3hB,QAAQ,MAAO,KACpC3K,EAAQkwB,EAAMnK,KAAK,KAAKpb,QAAQ,MAAO,KAC3CqlB,EAAKxD,OAAO4D,mBAAmBjf,GAAOif,mBAAmBpwB,GAC3D,CACF,IACKgwB,CACT,CAEA,SAASK,EAAaC,GACpB,IAAIxc,EAAU,IAAI6K,EAGd4R,EAAsBD,EAAW3lB,QAAQ,eAAgB,KAqB7D,OAjBA4lB,EACGL,MAAM,MACN3Y,KAAI,SAASkV,GACZ,OAAgC,IAAzBA,EAAO1N,QAAQ,MAAc0N,EAAOviB,OAAO,EAAGuiB,EAAOvrB,QAAUurB,CACxE,IACCvY,SAAQ,SAASsc,GAChB,IAAIC,EAAQD,EAAKN,MAAM,KACnBpvB,EAAM2vB,EAAMnE,QAAQ2D,OACxB,GAAInvB,EAAK,CACP,IAAId,EAAQywB,EAAM1K,KAAK,KAAKkK,OAC5B,IACEnc,EAAQ0Y,OAAO1rB,EAAKd,EACtB,CAAE,MAAO8U,GACP4b,QAAQC,KAAK,YAAc7b,EAAMiS,QACnC,CACF,CACF,IACKjT,CACT,CAIA,SAAS8c,EAASC,EAAU7tB,GAC1B,KAAM5C,gBAAgBwwB,GACpB,MAAM,IAAI5E,UAAU,8FAQtB,GANKhpB,IACHA,EAAU,CAAC,GAGb5C,KAAKiF,KAAO,UACZjF,KAAKgf,YAA4B9Z,IAAnBtC,EAAQoc,OAAuB,IAAMpc,EAAQoc,OACvDhf,KAAKgf,OAAS,KAAOhf,KAAKgf,OAAS,IACrC,MAAM,IAAI0R,WAAW,4FAEvB1wB,KAAKye,GAAKze,KAAKgf,QAAU,KAAOhf,KAAKgf,OAAS,IAC9Chf,KAAK+e,gBAAoC7Z,IAAvBtC,EAAQmc,WAA2B,GAAK,GAAKnc,EAAQmc,WACvE/e,KAAK0T,QAAU,IAAI6K,EAAQ3b,EAAQ8Q,SACnC1T,KAAKoe,IAAMxb,EAAQwb,KAAO,GAC1Bpe,KAAK6tB,UAAU4C,EACjB,CApEAxB,EAAQpiB,UAAU8jB,MAAQ,WACxB,OAAO,IAAI1B,EAAQjvB,KAAM,CAACwsB,KAAMxsB,KAAK8tB,WACvC,EA8CAF,EAAKpe,KAAKyf,EAAQpiB,WAsBlB+gB,EAAKpe,KAAKghB,EAAS3jB,WAEnB2jB,EAAS3jB,UAAU8jB,MAAQ,WACzB,OAAO,IAAIH,EAASxwB,KAAK8tB,UAAW,CAClC9O,OAAQhf,KAAKgf,OACbD,WAAY/e,KAAK+e,WACjBrL,QAAS,IAAI6K,EAAQve,KAAK0T,SAC1B0K,IAAKpe,KAAKoe,KAEd,EAEAoS,EAAS9b,MAAQ,WACf,IAAI2J,EAAW,IAAImS,EAAS,KAAM,CAACxR,OAAQ,IAAKD,WAAY,KAI5D,OAHAV,EAASI,IAAK,EACdJ,EAASW,OAAS,EAClBX,EAASpZ,KAAO,QACToZ,CACT,EAEA,IAAIuS,EAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,KAE5CJ,EAASK,SAAW,SAASzS,EAAKY,GAChC,IAA0C,IAAtC4R,EAAiBjS,QAAQK,GAC3B,MAAM,IAAI0R,WAAW,uBAGvB,OAAO,IAAIF,EAAS,KAAM,CAACxR,OAAQA,EAAQtL,QAAS,CAACod,SAAU1S,IACjE,EAEAze,EAAQoxB,aAAetG,EAAEsG,aACzB,IACE,IAAIpxB,EAAQoxB,YACd,CAAE,MAAOnjB,GACPjO,EAAQoxB,aAAe,SAASpK,EAAS5V,GACvC/Q,KAAK2mB,QAAUA,EACf3mB,KAAK+Q,KAAOA,EACZ,IAAI2D,EAAQnS,MAAMokB,GAClB3mB,KAAKiX,MAAQvC,EAAMuC,KACrB,EACAtX,EAAQoxB,aAAalkB,UAAYpN,OAAOqP,OAAOvM,MAAMsK,WACrDlN,EAAQoxB,aAAalkB,UAAU/M,YAAcH,EAAQoxB,YACvD,CAEA,SAASzS,EAAMhR,EAAO0jB,GACpB,OAAO,IAAI7d,SAAQ,SAASC,EAASuZ,GACnC,IAAIsE,EAAU,IAAIhC,EAAQ3hB,EAAO0jB,GAEjC,GAAIC,EAAQ9B,QAAU8B,EAAQ9B,OAAO+B,QACnC,OAAOvE,EAAO,IAAIhtB,EAAQoxB,aAAa,UAAW,eAGpD,IAAII,EAAM,IAAIC,eAEd,SAASC,IACPF,EAAIG,OACN,CAuCA,SAASC,EAAOnT,GACd,IACE,MAAe,KAARA,GAAcqM,EAAEqG,SAASU,KAAO/G,EAAEqG,SAASU,KAAOpT,CAC3D,CAAE,MAAOsI,GACP,OAAOtI,CACT,CACF,CAoBA,GA/DA+S,EAAIrE,OAAS,WACX,IAAIlqB,EAAU,CACZmc,WAAYoS,EAAIpS,WAChBrL,QAASuc,EAAakB,EAAIM,yBAA2B,KAIhB,IAAnCR,EAAQ7S,IAAIO,QAAQ,aAAqBwS,EAAInS,OAAS,KAAOmS,EAAInS,OAAS,KAC5Epc,EAAQoc,OAAS,IAEjBpc,EAAQoc,OAASmS,EAAInS,OAEvBpc,EAAQwb,IAAM,gBAAiB+S,EAAMA,EAAIO,YAAc9uB,EAAQ8Q,QAAQtE,IAAI,iBAC3E,IAAIod,EAAO,aAAc2E,EAAMA,EAAI9S,SAAW8S,EAAIQ,aAClDC,YAAW,WACTxe,EAAQ,IAAIod,EAAShE,EAAM5pB,GAC7B,GAAG,EACL,EAEAuuB,EAAIpE,QAAU,WACZ6E,YAAW,WACTjF,EAAO,IAAIf,UAAU,0BACvB,GAAG,EACL,EAEAuF,EAAIU,UAAY,WACdD,YAAW,WACTjF,EAAO,IAAIf,UAAU,6BACvB,GAAG,EACL,EAEAuF,EAAIW,QAAU,WACZF,YAAW,WACTjF,EAAO,IAAIhtB,EAAQoxB,aAAa,UAAW,cAC7C,GAAG,EACL,EAUAI,EAAIY,KAAKd,EAAQnC,OAAQyC,EAAON,EAAQ7S,MAAM,GAElB,YAAxB6S,EAAQ/B,YACViC,EAAIa,iBAAkB,EACW,SAAxBf,EAAQ/B,cACjBiC,EAAIa,iBAAkB,GAGpB,iBAAkBb,IAChBxG,EAAQI,KACVoG,EAAIc,aAAe,OAEnBtH,EAAQO,cAERiG,EAAIc,aAAe,gBAInBjB,GAAgC,kBAAjBA,EAAKtd,WAA0Bsd,EAAKtd,mBAAmB6K,GAAYkM,EAAElM,SAAWyS,EAAKtd,mBAAmB+W,EAAElM,SAAW,CACtI,IAAI2T,EAAQ,GACZzyB,OAAO6sB,oBAAoB0E,EAAKtd,SAASI,SAAQ,SAAS/C,GACxDmhB,EAAMpuB,KAAK6nB,EAAc5a,IACzBogB,EAAIgB,iBAAiBphB,EAAM8a,EAAemF,EAAKtd,QAAQ3C,IACzD,IACAkgB,EAAQvd,QAAQI,SAAQ,SAASlU,EAAOmR,IACT,IAAzBmhB,EAAMvT,QAAQ5N,IAChBogB,EAAIgB,iBAAiBphB,EAAMnR,EAE/B,GACF,MACEqxB,EAAQvd,QAAQI,SAAQ,SAASlU,EAAOmR,GACtCogB,EAAIgB,iBAAiBphB,EAAMnR,EAC7B,IAGEqxB,EAAQ9B,SACV8B,EAAQ9B,OAAOiD,iBAAiB,QAASf,GAEzCF,EAAIkB,mBAAqB,WAEA,IAAnBlB,EAAImB,YACNrB,EAAQ9B,OAAOoD,oBAAoB,QAASlB,EAEhD,GAGFF,EAAIqB,KAAkC,qBAAtBvB,EAAQnD,UAA4B,KAAOmD,EAAQnD,UACrE,GACF,CAEAxP,EAAMmU,UAAW,EAEZhI,EAAEnM,QACLmM,EAAEnM,MAAQA,EACVmM,EAAElM,QAAUA,EACZkM,EAAEwE,QAAUA,EACZxE,EAAE+F,SAAWA,GAGf7wB,EAAQ4e,QAAUA,EAClB5e,EAAQsvB,QAAUA,EAClBtvB,EAAQ6wB,SAAWA,EACnB7wB,EAAQ2e,MAAQA,EAEhB7e,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,GAIvD,EA9oBgB,CA8oBd,CAAC,EACH,EAjpBD,CAipBmB,qBAAT4qB,KAAuBA,KAAOxqB,K,mCChpBxCP,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQmR,cAAW,EAInB,MAAMA,EACF,WAAAhR,CAAYF,GACRI,KAAK0B,SAAW,WAChB1B,KAAKJ,MAAQA,CACjB,CACA,MAAAiE,CAAO+I,GACH,QAASA,GAA4B,aAAnBA,EAAMlL,UAA2BkL,EAAMhN,QAAUI,KAAKJ,KAC5E,EAEJD,EAAQmR,SAAWA,C,qCCdnBrR,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ0E,iBAAc,EACtB,MAAMquB,EAAc,EAAQ,OACtBC,EAAiB,EAAQ,OACzBC,EAAY,EAAQ,OACpBnT,EAAc,EAAQ,OACtBoT,EAAS,EAAQ,OACjBC,EAAa,EAAQ,OAC3B,IAAIC,EAAqB,EAIzB,MAAM1uB,EACF,WAAAvE,CAAY8C,GACR5C,KAAKgzB,iBAAmB,EACxBpwB,EAAUA,GAAW,CAAC,EACtB5C,KAAKizB,gBAAkBrwB,EAAQqwB,iBAAmB,MAAMF,MAC5D,CAMA,SAAAhxB,CAAUnC,GACN,OAAO,IAAI6f,EAAY5O,UAAUjR,EACrC,CAQA,SAAA+B,CAAU/B,GACN,OAAO,IAAI8yB,EAAYhmB,UAAU9M,GAAS,GAAGI,KAAKizB,kBAAkBjzB,KAAKgzB,qBAC7E,CAWA,OAAAnxB,CAAQjC,EAAO8f,GACX,OAAO,IAAIkT,EAAUrhB,QAAQ3R,EAAO8f,EACxC,CAOA,QAAApd,CAAS1C,GACL,OAAO,IAAIkzB,EAAWhiB,SAASlR,EACnC,CAIA,YAAAgC,GACI,OAAO+wB,EAAezJ,aAAagK,QACvC,CASA,IAAA7wB,CAAKJ,EAASC,EAAWC,EAAQC,GAC7B,OAAO,IAAIywB,EAAOjkB,KAAK3M,EAASC,EAAWC,EAAQC,GAASpC,KAAK4B,eACrE,CAMA,QAAAJ,CAASC,GAGL,OAAQA,EAASC,UACb,IAAK,YACD,OAAO1B,KAAK+B,UAAUN,EAAS7B,OACnC,IAAK,YACD,OAAOI,KAAK2B,UAAUF,EAAS7B,OACnC,IAAK,UACD,OAAI6B,EAASK,SACF9B,KAAK6B,QAAQJ,EAAS7B,MAAO6B,EAASK,UAE5CL,EAASO,SAAS6B,OAAO+uB,EAAUrhB,QAAQqO,YAGzC5f,KAAK6B,QAAQJ,EAAS7B,OAFlBI,KAAK6B,QAAQJ,EAAS7B,MAAOI,KAAKwB,SAASC,EAASO,WAGnE,IAAK,WACD,OAAOhC,KAAKsC,SAASb,EAAS7B,OAClC,IAAK,eACD,OAAOI,KAAK4B,eAChB,IAAK,OACD,OAAO5B,KAAKqC,KAAKrC,KAAKwB,SAASC,EAASQ,SAAUjC,KAAKwB,SAASC,EAASS,WAAYlC,KAAKwB,SAASC,EAASU,QAASnC,KAAKwB,SAASC,EAASW,QAExJ,CAMA,QAAAknB,CAAS7nB,GACL,OAAOzB,KAAKwB,SAASC,EACzB,CAIA,qBAAA0xB,GACInzB,KAAKgzB,iBAAmB,CAC5B,EAEJrzB,EAAQ0E,YAAcA,C,mCCvHtB5E,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQupB,kBAAe,EAKvB,MAAMA,EACF,WAAAppB,GACIE,KAAK0B,SAAW,eAChB1B,KAAKJ,MAAQ,EAEjB,CACA,MAAAiE,CAAO+I,GACH,QAASA,GAA4B,iBAAnBA,EAAMlL,QAC5B,EAEJ/B,EAAQupB,aAAeA,EACvBA,EAAagK,SAAW,IAAIhK,C,qCCjB5BzpB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ+S,oBAAiB,EACzB,MAAMzO,EAA0B,EAAQ,OAClC+Z,EAAe,EAAQ,OACvBoV,EAAgB,EAAQ,MACxBC,EAAiB,EAAQ,OAI/B,MAAM3gB,EACF,WAAA5S,CAAY8C,GAER5C,KAAKszB,cAAgB,IAAIrvB,EAAwB2D,cAAc,CAAEua,eAAgBvf,EAAQuf,eAAgBE,eAAgBzf,EAAQ2wB,wBACjIvzB,KAAK+N,mBAAqBnL,EAAQmL,iBAClC/N,KAAKwT,QAAU5Q,EAAQ4Q,QACvBxT,KAAK6J,wBAA0BjH,EAAQiH,sBACvC7J,KAAKipB,mBAAqBrmB,EAAQqmB,iBAClCjpB,KAAK+jB,eAAiBnhB,EAAQmhB,gBAAkBsP,EAAe3hB,aAAa0G,wBAC5EpY,KAAK8H,eAAiBlF,EAAQkF,aAC9B9H,KAAKkG,uBAAyBtD,EAAQsD,qBACtClG,KAAK4B,aAAegB,EAAQhB,aAC5B5B,KAAKoI,aAAexF,EAAQwF,aAC5BpI,KAAKgI,sBAAwBpF,EAAQoF,sBACrChI,KAAKwf,yCAA2C5c,EAAQ4c,yCACxDxf,KAAK+W,oBAAqB,EAC1B/W,KAAKiI,qBAAuBurB,WAAWxzB,KAAK+jB,gBAE5C/jB,KAAKgO,gBAAkB,GACvBhO,KAAKiO,eAAiB,GACtBjO,KAAKmD,aAAe,GACpBnD,KAAKoD,QAAU,GACfpD,KAAKqW,WAAa,GAClBrW,KAAK+I,wBAA0B,GAC/B/I,KAAKoQ,iBAAmB,GACxBpQ,KAAKoO,YAAc,IAAIglB,EAAczyB,YACrCX,KAAK0L,aAAe,GACpB1L,KAAK2V,gBAAkB,GACvB3V,KAAKkL,2BAA6B,GAClClL,KAAK2L,iBAAmB,GACxB3L,KAAK0O,yBAA2B,GAChC1O,KAAK2O,yBAA2B,GAChC3O,KAAKuV,6BAA+B,GACpCvV,KAAK2S,OAAS/P,EAAQ+P,OAClB/P,EAAQxB,SACRpB,KAAKyzB,YAAczzB,KAAK8G,aAAalE,EAAQxB,SAC7CpB,KAAKyzB,YAAYtyB,MAAMC,GAAYpB,KAAKsO,gBAAgBlN,MAGxDpB,KAAKyzB,YAActgB,QAAQC,QAAQ,IAAInP,EAAwByE,wBAAwB1I,KAAKwT,QAAU,CAAE,QAASxT,KAAKwT,QAAS,mBAAmB,GAAS,CAAC,GAEpK,CAQA,kBAAM1M,CAAa1F,EAAS+M,EAAeqY,GACvC,OAAOxmB,KAAKszB,cAActf,MAAM5S,EAAS,CACrCoS,QAASxT,KAAKwT,QACdgT,mBACAxe,sBAAuBhI,KAAKgI,sBAC5BmG,gBACA4V,eAAgB/jB,KAAKiI,sBAE7B,CAMA,eAAAqG,CAAgBlN,GACZ,MAAMsyB,EAAgBtyB,EAAQ4D,gBAAgB,YAC9C,GAAI0uB,EAAe,CACf,GAAI1zB,KAAKiI,sBAAwByrB,EAAgB1zB,KAAKiI,qBAClD,MAAM,IAAI+V,EAAa1X,WAAW,gCAAgCotB,mCAA+C1zB,KAAKiI,wBAAyB+V,EAAazX,YAAYotB,0BAGxK,GAAI3zB,KAAKiI,sBAAwByrB,EAAgB1zB,KAAKiI,qBAClD,MAAM,IAAI+V,EAAa1X,WAAW,2BAA2BotB,kCAA8C1zB,KAAKiI,wBAAyB+V,EAAazX,YAAYwe,uBAEtK/kB,KAAKiI,qBAAuByrB,CAEpC,CACJ,CAOA,gBAAM7yB,CAAWP,EAAM4b,EAAS,GAC5B,MAAM0X,EAAetzB,EAErB,MAAwC,kBAA1BA,EAAKA,EAAKQ,OAAS,GAC7BR,EAAOA,EAAKuI,MAAM,EAAGvI,EAAKQ,OAAS,GAGnCob,IACA5b,EAAOA,EAAKuI,MAAM,GAAIqT,IAG1B,MAAM2X,QAAoB7zB,KAAK8zB,2BAA2BxzB,GACpDc,EAAUyyB,EAAYzyB,QAE5B,IAAI4hB,EAAa5hB,EAAQ4D,gBACzB,IAAK,IAAIiB,EAAI4tB,EAAYtzB,MAAO0F,EAAI2tB,EAAa9yB,OAASob,EAAQjW,IAAK,CACnE,MAAMvF,EAAMkzB,EAAa3tB,GACnBuD,EAAkBwZ,EAAWtiB,GACnC,GAAI8I,GAA8C,kBAApBA,GAAgC,aAAcA,EAAiB,CACzF,MAAM4V,SAAuBpf,KAAK8G,aAAa0C,EAAiBwZ,GAAY,IAAOhe,gBAC7E+uB,IAAcrzB,KAAO0e,IACpBA,EAAc1e,GAAK,YAAY,eACpB,IAAdqzB,GAAuB9tB,IAAM2tB,EAAa9yB,OAAS,EAAIob,IACvD8G,EAAa5D,SAEN4D,EAAW,cAClBA,EAAWtiB,GAAOjB,OAAO+N,OAAO,CAAC,EAAGwV,EAAWtiB,IAC3C,QAAS8I,IACTwZ,EAAWtiB,GAAK,OAAS8I,EAAgB,eAEtCwZ,EAAWtiB,GAAK,aACL,IAAdqzB,GACA/zB,KAAKoO,YAAY/M,WAAWuyB,EAAa/qB,MAAM,EAAG5C,EAAIiW,GAAS/I,QAAQC,QAAQ,IAAInP,EAAwByE,wBAAwBsa,KAG/I,CACJ,CACA,OAAO,IAAI/e,EAAwByE,wBAAwBsa,EAC/D,CAaA,gCAAM8Q,CAA2BxzB,GAC7B,MAAM0zB,EAAgB1zB,EAAKQ,OAC3B,IACImzB,EADAJ,EAAc,KAElB,EAAG,CACCI,GAAqC,EACjCJ,GAAe,yBAA0BA,EAAYzyB,QAAQ4D,gBAG7D6uB,EAAYzyB,QAAU,IAAI6C,EAAwByE,wBAAwBmrB,EAAYzyB,QAAQ4D,gBAAgB,0BAG1G6uB,IAIAvzB,EAAOA,EAAKuI,MAAM,EAAGgrB,EAAYtzB,MAAQ,IAE7CszB,QAAoB7zB,KAAKoO,YAAYvN,WAAWP,IAAS,CAAEc,cAAepB,KAAKyzB,YAAalzB,MAAO,IAKvG,MAAM2zB,EAAU5zB,EAAKA,EAAKQ,OAAS,GACnC,GAAIozB,KAAWL,EAAYzyB,QAAQ4D,gBAAiB,CAChD,MAAMmvB,EAAeN,EAAYzyB,QAAQ4D,gBAAgBkvB,GACrDC,GAAwC,kBAAjBA,GAA6B,aAAcA,IAClEF,GAAqC,EAE7C,CACJ,OAASJ,EAAYtzB,MAAQ,IACgC,IAAtDszB,EAAYzyB,QAAQ4D,gBAAgB,eACpC6uB,EAAYtzB,QAAUyzB,IACrBC,GAQR,OAL0B,IAAtBJ,EAAYtzB,QAC6C,IAAtDszB,EAAYzyB,QAAQ4D,gBAAgB,eACpC6uB,EAAYtzB,QAAUyzB,IACzBH,EAAYzyB,QAAU,IAAI6C,EAAwByE,wBAAwB,CAAC,IAExEmrB,CACX,CASA,mBAAM9jB,CAAczP,EAAMV,EAAOW,EAAO4U,SAC9BnV,KAAK2S,OAAO5C,cAAczP,EAAMV,EAAOW,EAAO4U,EACxD,CAKA,wCAAMpR,GACF,GAAI/D,KAAKuV,6BAA6BzU,OAAS,EAAG,CAC9C,IAAK,MAAMszB,KAAsBp0B,KAAKuV,mCAC5BvV,KAAK2S,OAAO6C,YAAY4e,EAAmB7zB,MAAO6zB,EAAmB9zB,MAC3EN,KAAK2S,OAAOyC,YAAYgf,EAAmB7zB,OAG/C,OADAP,KAAKuV,6BAA6BF,OAAO,EAAGrV,KAAKuV,6BAA6BzU,SACvE,CACX,CAEI,OAAO,CAEf,CAMA,QAAAiK,CAASxK,EAAO8B,GACE,IAAV9B,IACAP,KAAK+W,oBAAqB,GAE9B/W,KAAK2S,OAAO7O,KAAKzB,EACrB,CAKA,SAAAkH,CAAUmL,GACN1U,KAAK2S,OAAOhF,KAAK,QAAS+G,EAC9B,CAKA,WAAArG,CAAYjN,GACRpB,KAAK2S,OAAOhF,KAAK,UAAWvM,EAChC,CAOA,8BAAA0nB,CAA+BvoB,GAC3B,IAAIic,EAASxc,KAAK0O,yBAAyBnO,GAK3C,OAJKic,IACDA,EAAS,GACTxc,KAAK0O,yBAAyBnO,GAASic,GAEpCA,CACX,CAOA,8BAAA3F,CAA+BtW,GAC3B,IAAIic,EAASxc,KAAK2O,yBAAyBpO,GAK3C,OAJKic,IACDA,EAAS,GACTxc,KAAK2O,yBAAyBpO,GAASic,GAEpCA,CACX,CAIA,gBAAA5S,GACI,OAAO8I,EAAe2hB,eAAer0B,KAAKiI,qBAC9C,CAUA,UAAA+H,CAAWzP,EAAOyhB,GAEd,MAAMsS,EAAgBt0B,KAAKoD,QAAQ7C,EAAQyhB,GAO3C,GANIsS,IACAt0B,KAAKoD,QAAQ7C,GAAS+zB,EACtBt0B,KAAKmD,aAAa5C,IAAS,SACpBP,KAAKoD,QAAQ7C,EAAQyhB,IAG5BhiB,KAAKuV,6BAA6BzU,OAClC,IAAK,MAAM0b,KAAUxc,KAAKuV,6BAClBiH,EAAOjc,OAASA,EAAQyhB,IACxBxF,EAAOjc,OAASyhB,EAChBxF,EAAOlc,KAAK+U,OAAO9U,EAAOyhB,IAKlChiB,KAAK0O,yBAAyBnO,EAAQyhB,KACtChiB,KAAK0O,yBAAyBnO,GAASP,KAAK0O,yBAAyBnO,EAAQyhB,UACtEhiB,KAAK0O,yBAAyBnO,EAAQyhB,GAGrD,EAEJriB,EAAQ+S,eAAiBA,EACzBA,EAAe2hB,eAAiB,CAC5B,EAAK,CACDtK,oBAAoB,EACpBK,yBAAyB,EACzBJ,0BAA0B,GAE9B,IAAK,CACDD,oBAAoB,EACpBK,yBAAyB,EACzBJ,0BAA0B,G,mCC7TlCvqB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQqE,UAAO,EACf,MAAMA,EAOF,mBAAOqhB,CAAazhB,GAChB,OAAOA,EAAK+a,QAAQ,KAAO,KAAO/a,GAAoB,MAAZA,EAAK,GACnD,CAQA,gBAAOshB,CAAUthB,EAAMxC,GAEnB,GAAIwC,GAAoB,MAAZA,EAAK,GACb,OAAO,KAEX,MAAM2wB,EAAe3wB,EAAK+a,QAAQ,KAClC,GAAI4V,GAAgB,EAAG,CAEnB,GAAI3wB,EAAK9C,OAASyzB,EAAe,GACQ,MAAlC3wB,EAAK4wB,OAAOD,EAAe,IACO,MAAlC3wB,EAAK4wB,OAAOD,EAAe,GAC9B,OAAO,KAEX,MAAMjT,EAAS1d,EAAKkG,OAAO,EAAGyqB,GAE9B,GAAe,MAAXjT,EACA,OAAO,KAGX,GAAIlgB,EAAQkgB,GACR,OAAOA,CAEf,CACA,OAAO,IACX,CAMA,wBAAOiC,CAAkBiG,GACrB,GAAqB,OAAjBA,GAAiD,kBAAjBA,EAChC,OAAOA,EAEX,MAAMtmB,EAAKsmB,EAAa,OACxB,OAAOtmB,GAAU,IACrB,CAOA,mCAAOohB,CAA6B1kB,EAAOgD,GACvC,OAAQoB,EAAKmH,mBAAmBvL,KACxBgD,EAAQwnB,yBAA6C,kBAAVxqB,IAAoC,MAAbA,EAAM,IAAcoE,EAAKywB,8BAA8B70B,IACrI,CAMA,yBAAOuL,CAAmBpL,GACtB,MAA0B,kBAAZA,GAAwBiE,EAAK0wB,cAAcj0B,KAAKV,EAClE,CAMA,oCAAO00B,CAA8BE,GACjC,OAAO3wB,EAAK4wB,oBAAoBn0B,KAAKk0B,EACzC,CAMA,oBAAOlR,CAAc7jB,GACjB,OAAOA,IAA2B,kBAAVA,GAAuBA,GAA0B,kBAAVA,EACnE,CAMA,iBAAOgG,CAAWC,GACd,OAAOqD,QAAQrD,GAAO7B,EAAK6wB,UAAUp0B,KAAKoF,GAC9C,CAMA,qBAAOuf,CAAevf,GAClB,QAASA,GAAkB,MAAXA,EAAI,IAAc7B,EAAK8wB,eAAer0B,KAAKoF,EAC/D,CAMA,qBAAOwF,CAAetL,GAClB,OAAOiE,EAAK+wB,eAAeh1B,EAC/B,CAOA,sBAAOskB,CAAgBjjB,EAASV,GAC5B,MAAMd,EAAQwB,EAAQV,GACtB,QAA0B,kBAAVd,IAAuBA,GAASA,EAAM,aAC1D,CAMA,wBAAOqnB,CAAkB7lB,GACrB,IAAK,MAAMV,KAAOjB,OAAOa,KAAKc,GAC1B,GAAI4C,EAAKqgB,gBAAgBjjB,EAASV,GAC9B,OAAO,EAGf,OAAO,CACX,CAKA,gCAAOwiB,CAA0BxiB,GAC7B,OAAOA,EAAIsJ,WAAW,MAC1B,CAMA,gBAAO0a,CAAUsQ,EAASC,GACtB,MAAMC,EAAWz1B,OAAOa,KAAK00B,GACvBG,EAAW11B,OAAOa,KAAK20B,GAC7B,OAAIC,EAASp0B,SAAWq0B,EAASr0B,QAE1Bo0B,EAASE,OAAO10B,IACnB,MAAM20B,EAASL,EAAQt0B,GACjB40B,EAASL,EAAQv0B,GACvB,OAAQ20B,IAAWC,GAAuB,OAAXD,GAChB,OAAXC,GACkB,kBAAXD,GACW,kBAAXC,GACPt1B,KAAK0kB,UAAU2Q,EAAQC,EAAQ,GAE3C,EAIJtxB,EAAK6wB,UAAY,6DAEjB7wB,EAAK8wB,eAAiB,eAEtB9wB,EAAK0wB,cAAgB,aAErB1wB,EAAK4wB,oBAAsB,eAE3B5wB,EAAK2e,mBAAqB,8BAE1B3e,EAAK6e,oBAAsB,gBAG3B7e,EAAK+wB,eAAiB,CAClB,eAAe,EACf,SAAS,EACT,cAAc,EACd,YAAY,EACZ,cAAc,EACd,UAAU,EACV,OAAO,EACP,WAAW,EACX,aAAa,EACb,UAAU,EACV,SAAS,EACT,aAAa,EACb,SAAS,EACT,SAAS,EACT,SAAS,EACT,WAAW,EACX,cAAc,EACd,cAAc,EACd,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,UAAU,EACV,YAAY,EACZ,UAAU,GAGd/wB,EAAKif,sBAAwB,CACzB,QACA,SACA,YACA,WACA,cAGJjf,EAAKof,uBAAyB,CAC1B,aACA,SACA,MACA,SACA,QACA,QACA,QACA,UACA,WACA,OACA,QACA,SACA,YAGJpf,EAAKsf,sBAAwB,CACzB,WACA,aAGJtf,EAAK6hB,WAAa,CACd,QACA,OACA,SACA,YACA,SACA,MACA,SAGJ7hB,EAAK0hB,eAAiB,CAClB,QACA,OACA,UAEJ/lB,EAAQqE,KAAOA,C","sources":["webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeyword.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/ContextTree.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/fromTerm.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/index.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/containerhandler/ContainerHandlerIdentifier.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/Util.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/index.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/BlankNode.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordId.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/sink/index.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/EntryHandlerInvalidFallback.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordContext.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordNest.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/lib/IDocumentLoader.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordValue.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/lib/Quad.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/index.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/EntryHandlerArrayValue.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/index.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/lib/NamedNode.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/lib/JsonLdContext.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/Variable.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/containerhandler/ContainerHandlerType.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/index.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/Literal.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/lib/BlankNode.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/JsonLdParser.js","webpack://pko-rapid-triples/./node_modules/jsonparse/jsonparse.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordGraph.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/lib/FetchDocumentLoader.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordType.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/lib/Literal.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/containerhandler/ContainerHandlerLanguage.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/EntryHandlerContainer.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/lib/ParserStream.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordIncluded.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/containerhandler/ContainerHandlerIndex.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/lib/ContextParser.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/lib/ErrorCoded.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/EntryHandlerPredicate.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/DefaultGraph.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/DataFactory.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/Quad.js","webpack://pko-rapid-triples/./node_modules/@rdfjs/parser-jsonld/node_modules/@rdfjs/data-model/lib/NamedNode.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/lib/JsonLdContextNormalized.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/entryhandler/keyword/EntryHandlerKeywordUnknownFallback.js","webpack://pko-rapid-triples/./node_modules/cross-fetch/dist/browser-polyfill.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/lib/Variable.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/lib/DataFactory.js","webpack://pko-rapid-triples/./node_modules/rdf-data-factory/lib/DefaultGraph.js","webpack://pko-rapid-triples/./node_modules/jsonld-streaming-parser/lib/ParsingContext.js","webpack://pko-rapid-triples/./node_modules/jsonld-context-parser/lib/Util.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeyword = void 0;\n/**\n * An abstract keyword entry handler.\n */\nclass EntryHandlerKeyword {\n    constructor(keyword) {\n        this.keyword = keyword;\n    }\n    isPropertyHandler() {\n        return false;\n    }\n    isStackProcessor() {\n        return true;\n    }\n    async validate(parsingContext, util, keys, depth, inProperty) {\n        return false;\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        return key === this.keyword;\n    }\n}\nexports.EntryHandlerKeyword = EntryHandlerKeyword;\n//# sourceMappingURL=EntryHandlerKeyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContextTree = void 0;\n/**\n * A tree structure that holds all contexts,\n * based on their position in the JSON object.\n *\n * Positions are identified by a path of keys.\n */\nclass ContextTree {\n    constructor() {\n        this.subTrees = {};\n    }\n    getContext(keys) {\n        if (keys.length > 0) {\n            const [head, ...tail] = keys;\n            const subTree = this.subTrees[head];\n            if (subTree) {\n                const subContext = subTree.getContext(tail);\n                if (subContext) {\n                    return subContext.then(({ context, depth }) => ({ context, depth: depth + 1 }));\n                }\n            }\n        }\n        return this.context ? this.context.then((context) => ({ context, depth: 0 })) : null;\n    }\n    setContext(keys, context) {\n        if (keys.length === 0) {\n            this.context = context;\n        }\n        else {\n            const [head, ...tail] = keys;\n            let subTree = this.subTrees[head];\n            if (!subTree) {\n                subTree = this.subTrees[head] = new ContextTree();\n            }\n            subTree.setContext(tail, context);\n        }\n    }\n    removeContext(path) {\n        this.setContext(path, null);\n    }\n}\nexports.ContextTree = ContextTree;\n//# sourceMappingURL=ContextTree.js.map","function fromTerm (original) {\n  if (!original) {\n    return null\n  }\n\n  if (original.termType === 'BlankNode') {\n    return this.blankNode(original.value)\n  }\n\n  if (original.termType === 'DefaultGraph') {\n    return this.defaultGraph()\n  }\n\n  if (original.termType === 'Literal') {\n    return this.literal(original.value, original.language || this.namedNode(original.datatype.value))\n  }\n\n  if (original.termType === 'NamedNode') {\n    return this.namedNode(original.value)\n  }\n\n  if (original.termType === 'Quad') {\n    const subject = this.fromTerm(original.subject)\n    const predicate = this.fromTerm(original.predicate)\n    const object = this.fromTerm(original.object)\n    const graph = this.fromTerm(original.graph)\n\n    return this.quad(subject, predicate, object, graph)\n  }\n\n  if (original.termType === 'Variable') {\n    return this.variable(original.value)\n  }\n\n  throw new Error(`unknown termType ${original.termType}`)\n}\n\nmodule.exports = fromTerm\n","const Sink = require('@rdfjs/sink')\nconst ParserStream = require('./lib/ParserStream')\n\nclass Parser extends Sink {\n  constructor (options) {\n    super(ParserStream, options)\n  }\n}\n\nmodule.exports = Parser\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerHandlerIdentifier = void 0;\n/**\n * Container handler for @id.\n *\n * It assumes that the current key is the identifier of the current value.\n * This will add this value to the parent node.\n */\nclass ContainerHandlerIdentifier {\n    canCombineWithGraph() {\n        return true;\n    }\n    async handle(containers, parsingContext, util, keys, value, depth) {\n        let id;\n        // First check if the child node already has a defined id.\n        if (parsingContext.emittedStack[depth + 1] && parsingContext.idStack[depth + 1]) {\n            // Use the existing identifier\n            id = parsingContext.idStack[depth + 1][0];\n        }\n        else {\n            // Create the identifier\n            const keyUnaliased = await util.getContainerKey(keys[depth], keys, depth);\n            const maybeId = keyUnaliased !== null\n                ? await util.resourceToTerm(await parsingContext.getContext(keys), keys[depth])\n                : util.dataFactory.blankNode();\n            // Do nothing if the id is invalid\n            if (!maybeId) {\n                parsingContext.emittedStack[depth] = false; // Don't emit the predicate owning this container.\n                return;\n            }\n            id = maybeId;\n            // Insert the id into the stack so that buffered children can make us of it.\n            parsingContext.idStack[depth + 1] = [id];\n        }\n        // Insert the id into the stack so that parents can make use of it.\n        // Insert it as an array because multiple id container entries may exist\n        let ids = parsingContext.idStack[depth];\n        if (!ids) {\n            ids = parsingContext.idStack[depth] = [];\n        }\n        // Only insert the term if it does not exist yet in the array.\n        if (!ids.some((term) => term.equals(id))) {\n            ids.push(id);\n        }\n        // Flush any pending flush buffers\n        if (!await parsingContext.handlePendingContainerFlushBuffers()) {\n            parsingContext.emittedStack[depth] = false; // Don't emit the predicate owning this container.\n        }\n    }\n}\nexports.ContainerHandlerIdentifier = ContainerHandlerIdentifier;\n//# sourceMappingURL=ContainerHandlerIdentifier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst rdf_data_factory_1 = require(\"rdf-data-factory\");\nconst EntryHandlerContainer_1 = require(\"./entryhandler/EntryHandlerContainer\");\n// tslint:disable-next-line:no-var-requires\nconst canonicalizeJson = require('canonicalize');\n/**\n * Utility functions and methods.\n */\nclass Util {\n    constructor(options) {\n        this.parsingContext = options.parsingContext;\n        this.dataFactory = options.dataFactory || new rdf_data_factory_1.DataFactory();\n        this.rdfFirst = this.dataFactory.namedNode(Util.RDF + 'first');\n        this.rdfRest = this.dataFactory.namedNode(Util.RDF + 'rest');\n        this.rdfNil = this.dataFactory.namedNode(Util.RDF + 'nil');\n        this.rdfType = this.dataFactory.namedNode(Util.RDF + 'type');\n        this.rdfJson = this.dataFactory.namedNode(Util.RDF + 'JSON');\n    }\n    /**\n     * Helper function to get the value of a context entry,\n     * or fallback to a certain value.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} contextKey A pre-defined JSON-LD key in context entries.\n     * @param {string} key A context entry key.\n     * @param {string} fallback A fallback value for when the given contextKey\n     *                          could not be found in the value with the given key.\n     * @return {string} The value of the given contextKey in the entry behind key in the given context,\n     *                  or the given fallback value.\n     */\n    static getContextValue(context, contextKey, key, fallback) {\n        const entry = context.getContextRaw()[key];\n        if (!entry) {\n            return fallback;\n        }\n        const type = entry[contextKey];\n        return type === undefined ? fallback : type;\n    }\n    /**\n     * Get the container type of the given key in the context.\n     *\n     * Should any context-scoping bugs should occur related to this in the future,\n     * it may be required to increase the offset from the depth at which the context is retrieved by one (to 2).\n     * This is because containers act 2 levels deep.\n     *\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key A context entry key.\n     * @return {string} The container type.\n     */\n    static getContextValueContainer(context, key) {\n        return Util.getContextValue(context, '@container', key, { '@set': true });\n    }\n    /**\n     * Get the value type of the given key in the context.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key A context entry key.\n     * @return {string} The node type.\n     */\n    static getContextValueType(context, key) {\n        const valueType = Util.getContextValue(context, '@type', key, null);\n        if (valueType === '@none') {\n            return null;\n        }\n        return valueType;\n    }\n    /**\n     * Get the language of the given key in the context.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key A context entry key.\n     * @return {string} The node type.\n     */\n    static getContextValueLanguage(context, key) {\n        return Util.getContextValue(context, '@language', key, context.getContextRaw()['@language'] || null);\n    }\n    /**\n     * Get the direction of the given key in the context.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key A context entry key.\n     * @return {string} The node type.\n     */\n    static getContextValueDirection(context, key) {\n        return Util.getContextValue(context, '@direction', key, context.getContextRaw()['@direction'] || null);\n    }\n    /**\n     * Check if the given key in the context is a reversed property.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key A context entry key.\n     * @return {boolean} If the context value has a @reverse key.\n     */\n    static isContextValueReverse(context, key) {\n        return !!Util.getContextValue(context, '@reverse', key, null);\n    }\n    /**\n     * Get the @index of the given key in the context.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key A context entry key.\n     * @return {string} The index.\n     */\n    static getContextValueIndex(context, key) {\n        return Util.getContextValue(context, '@index', key, context.getContextRaw()['@index'] || null);\n    }\n    /**\n     * Check if the given key refers to a reversed property.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key The property key.\n     * @param {string} parentKey The parent key.\n     * @return {boolean} If the property must be reversed.\n     */\n    static isPropertyReverse(context, key, parentKey) {\n        // '!==' is needed because reversed properties in a @reverse container should cancel each other out.\n        return parentKey === '@reverse' !== Util.isContextValueReverse(context, key);\n    }\n    /**\n     * Check if the given IRI is valid.\n     * @param {string} iri A potential IRI.\n     * @return {boolean} If the given IRI is valid.\n     */\n    static isValidIri(iri) {\n        return iri !== null && jsonld_context_parser_1.Util.isValidIri(iri);\n    }\n    /**\n     * Check if the given first array (needle) is a prefix of the given second array (haystack).\n     * @param needle An array to check if it is a prefix.\n     * @param haystack An array to look in.\n     */\n    static isPrefixArray(needle, haystack) {\n        if (needle.length > haystack.length) {\n            return false;\n        }\n        for (let i = 0; i < needle.length; i++) {\n            if (needle[i] !== haystack[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Make sure that @id-@index pairs are equal over all array values.\n     * Reject otherwise.\n     * @param {any[]} value An array value.\n     * @return {Promise<void>} A promise rejecting if conflicts are present.\n     */\n    async validateValueIndexes(value) {\n        if (this.parsingContext.validateValueIndexes) {\n            const indexHashes = {};\n            for (const entry of value) {\n                if (entry && typeof entry === 'object') {\n                    const id = entry['@id'];\n                    const index = entry['@index'];\n                    if (id && index) {\n                        const existingIndexValue = indexHashes[id];\n                        if (existingIndexValue && existingIndexValue !== index) {\n                            throw new jsonld_context_parser_1.ErrorCoded(`Conflicting @index value for ${id}`, jsonld_context_parser_1.ERROR_CODES.CONFLICTING_INDEXES);\n                        }\n                        indexHashes[id] = index;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Convert a given JSON value to an RDF term.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key The current JSON key.\n     * @param value A JSON value.\n     * @param {number} depth The depth the value is at.\n     * @param {string[]} keys The path of keys.\n     * @return {Promise<RDF.Term[]>} An RDF term array.\n     */\n    async valueToTerm(context, key, value, depth, keys) {\n        // Skip further processing if we have an @type: @json\n        if (Util.getContextValueType(context, key) === '@json') {\n            return [this.dataFactory.literal(this.valueToJsonString(value), this.rdfJson)];\n        }\n        const type = typeof value;\n        switch (type) {\n            case 'object':\n                // Skip if we have a null or undefined object\n                if (value === null || value === undefined) {\n                    return [];\n                }\n                // Special case for arrays\n                if (Array.isArray(value)) {\n                    // We handle arrays at value level so we can emit earlier, so this is handled already when we get here.\n                    // Empty context-based lists are emitted at this place, because our streaming algorithm doesn't detect those.\n                    if ('@list' in Util.getContextValueContainer(context, key)) {\n                        if (value.length === 0) {\n                            return [this.rdfNil];\n                        }\n                        else {\n                            return this.parsingContext.idStack[depth + 1] || [];\n                        }\n                    }\n                    await this.validateValueIndexes(value);\n                    return [];\n                }\n                // Handle property-scoped contexts\n                context = await this.getContextSelfOrPropertyScoped(context, key);\n                // Handle local context in the value\n                if ('@context' in value) {\n                    context = await this.parsingContext.parseContext(value['@context'], (await this.parsingContext.getContext(keys, 0)).getContextRaw());\n                }\n                // In all other cases, we have a hash\n                value = await this.unaliasKeywords(value, keys, depth, context); // Un-alias potential keywords in this hash\n                if ('@value' in value) {\n                    let val;\n                    let valueLanguage;\n                    let valueDirection;\n                    let valueType;\n                    let valueIndex; // We don't use the index, but we need to check its type for spec-compliance\n                    for (key in value) {\n                        const subValue = value[key];\n                        switch (key) {\n                            case '@value':\n                                val = subValue;\n                                break;\n                            case '@language':\n                                valueLanguage = subValue;\n                                break;\n                            case '@direction':\n                                valueDirection = subValue;\n                                break;\n                            case '@type':\n                                valueType = subValue;\n                                break;\n                            case '@index':\n                                valueIndex = subValue;\n                                break;\n                            default:\n                                throw new jsonld_context_parser_1.ErrorCoded(`Unknown value entry '${key}' in @value: ${JSON.stringify(value)}`, jsonld_context_parser_1.ERROR_CODES.INVALID_VALUE_OBJECT);\n                        }\n                    }\n                    // Skip further processing if we have an @type: @json\n                    if (await this.unaliasKeyword(valueType, keys, depth, true, context) === '@json') {\n                        return [this.dataFactory.literal(this.valueToJsonString(val), this.rdfJson)];\n                    }\n                    // Validate @value\n                    if (val === null) {\n                        return [];\n                    }\n                    if (typeof val === 'object') {\n                        throw new jsonld_context_parser_1.ErrorCoded(`The value of an '@value' can not be an object, got '${JSON.stringify(val)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_VALUE_OBJECT_VALUE);\n                    }\n                    // Validate @index\n                    if (this.parsingContext.validateValueIndexes && valueIndex && typeof valueIndex !== 'string') {\n                        throw new jsonld_context_parser_1.ErrorCoded(`The value of an '@index' must be a string, got '${JSON.stringify(valueIndex)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_INDEX_VALUE);\n                    }\n                    // Validate @language and @direction\n                    if (valueLanguage) {\n                        if (typeof val !== 'string') {\n                            throw new jsonld_context_parser_1.ErrorCoded(`When an '@language' is set, the value of '@value' must be a string, got '${JSON.stringify(val)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_LANGUAGE_TAGGED_VALUE);\n                        }\n                        if (!jsonld_context_parser_1.ContextParser.validateLanguage(valueLanguage, this.parsingContext.strictValues, jsonld_context_parser_1.ERROR_CODES.INVALID_LANGUAGE_TAGGED_STRING)) {\n                            return [];\n                        }\n                        // Language tags are always normalized to lowercase in 1.0.\n                        if (this.parsingContext.normalizeLanguageTags || this.parsingContext.activeProcessingMode === 1.0) {\n                            valueLanguage = valueLanguage.toLowerCase();\n                        }\n                    }\n                    if (valueDirection) {\n                        if (typeof val !== 'string') {\n                            throw new Error(`When an '@direction' is set, the value of '@value' must be a string, got '${JSON.stringify(val)}'`);\n                        }\n                        if (!jsonld_context_parser_1.ContextParser.validateDirection(valueDirection, this.parsingContext.strictValues)) {\n                            return [];\n                        }\n                    }\n                    // Check @language and @direction\n                    if (valueLanguage && valueDirection && this.parsingContext.rdfDirection) {\n                        if (valueType) {\n                            throw new jsonld_context_parser_1.ErrorCoded(`Can not have '@language', '@direction' and '@type' in a value: '${JSON\n                                .stringify(value)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_VALUE_OBJECT);\n                        }\n                        return this.nullableTermToArray(this\n                            .createLanguageDirectionLiteral(depth, val, valueLanguage, valueDirection));\n                    }\n                    else if (valueLanguage) { // Check @language\n                        if (valueType) {\n                            throw new jsonld_context_parser_1.ErrorCoded(`Can not have both '@language' and '@type' in a value: '${JSON.stringify(value)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_VALUE_OBJECT);\n                        }\n                        return [this.dataFactory.literal(val, valueLanguage)];\n                    }\n                    else if (valueDirection && this.parsingContext.rdfDirection) { // Check @direction\n                        if (valueType) {\n                            throw new jsonld_context_parser_1.ErrorCoded(`Can not have both '@direction' and '@type' in a value: '${JSON.stringify(value)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_VALUE_OBJECT);\n                        }\n                        return this.nullableTermToArray(this\n                            .createLanguageDirectionLiteral(depth, val, valueLanguage, valueDirection));\n                    }\n                    else if (valueType) { // Validate @type\n                        if (typeof valueType !== 'string') {\n                            throw new jsonld_context_parser_1.ErrorCoded(`The value of an '@type' must be a string, got '${JSON.stringify(valueType)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_TYPED_VALUE);\n                        }\n                        const typeTerm = this.createVocabOrBaseTerm(context, valueType);\n                        if (!typeTerm) {\n                            throw new jsonld_context_parser_1.ErrorCoded(`Invalid '@type' value, got '${JSON.stringify(valueType)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_TYPED_VALUE);\n                        }\n                        if (typeTerm.termType !== 'NamedNode') {\n                            throw new jsonld_context_parser_1.ErrorCoded(`Illegal value type (${typeTerm.termType}): ${valueType}`, jsonld_context_parser_1.ERROR_CODES.INVALID_TYPED_VALUE);\n                        }\n                        return [this.dataFactory.literal(val, typeTerm)];\n                    }\n                    // We don't pass the context, because context-based things like @language should be ignored\n                    return await this.valueToTerm(new jsonld_context_parser_1.JsonLdContextNormalized({}), key, val, depth, keys);\n                }\n                else if ('@set' in value) {\n                    // No other entries are allow in this value\n                    if (Object.keys(value).length > 1) {\n                        throw new jsonld_context_parser_1.ErrorCoded(`Found illegal neighbouring entries next to @set for key: '${key}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_SET_OR_LIST_OBJECT);\n                    }\n                    // No need to do anything here, this is handled at the deeper level.\n                    return [];\n                }\n                else if ('@list' in value) {\n                    // No other entries are allowed in this value\n                    if (Object.keys(value).length > 1) {\n                        throw new jsonld_context_parser_1.ErrorCoded(`Found illegal neighbouring entries next to @list for key: '${key}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_SET_OR_LIST_OBJECT);\n                    }\n                    const listValue = value[\"@list\"];\n                    // We handle lists at value level so we can emit earlier, so this is handled already when we get here.\n                    // Empty anonymous lists are emitted at this place, because our streaming algorithm doesn't detect those.\n                    if (Array.isArray(listValue)) {\n                        if (listValue.length === 0) {\n                            return [this.rdfNil];\n                        }\n                        else {\n                            return this.parsingContext.idStack[depth + 1] || [];\n                        }\n                    }\n                    else {\n                        // We only have a single list element here, so emit this directly as single element\n                        return await this.valueToTerm(await this.parsingContext.getContext(keys), key, listValue, depth - 1, keys.slice(0, -1));\n                    }\n                }\n                else if ('@reverse' in value && typeof value['@reverse'] === 'boolean') {\n                    // We handle reverse properties at value level so we can emit earlier,\n                    // so this is handled already when we get here.\n                    return [];\n                }\n                else if ('@graph' in Util.getContextValueContainer(await this.parsingContext.getContext(keys), key)) {\n                    // We are processing a graph container\n                    const graphContainerEntries = this.parsingContext.graphContainerTermStack[depth + 1];\n                    return graphContainerEntries ? Object.values(graphContainerEntries) : [this.dataFactory.blankNode()];\n                }\n                else if (\"@id\" in value) {\n                    // Use deeper context if the value node contains other properties next to @id.\n                    if (Object.keys(value).length > 1) {\n                        context = await this.parsingContext.getContext(keys, 0);\n                    }\n                    // Handle local context in the value\n                    if ('@context' in value) {\n                        context = await this.parsingContext.parseContext(value['@context'], context.getContextRaw());\n                    }\n                    if (value[\"@type\"] === '@vocab') {\n                        return this.nullableTermToArray(this.createVocabOrBaseTerm(context, value[\"@id\"]));\n                    }\n                    else {\n                        return this.nullableTermToArray(this.resourceToTerm(context, value[\"@id\"]));\n                    }\n                }\n                else {\n                    // Only make a blank node if at least one triple was emitted at the value's level.\n                    if (this.parsingContext.emittedStack[depth + 1]\n                        || (value && typeof value === 'object' && Object.keys(value).length === 0)) {\n                        return (this.parsingContext.idStack[depth + 1]\n                            || (this.parsingContext.idStack[depth + 1] = [this.dataFactory.blankNode()]));\n                    }\n                    else {\n                        return [];\n                    }\n                }\n            case 'string':\n                return this.nullableTermToArray(this.stringValueToTerm(depth, await this.getContextSelfOrPropertyScoped(context, key), key, value, null));\n            case 'boolean':\n                return this.nullableTermToArray(this.stringValueToTerm(depth, await this.getContextSelfOrPropertyScoped(context, key), key, Boolean(value).toString(), this.dataFactory.namedNode(Util.XSD_BOOLEAN)));\n            case 'number':\n                return this.nullableTermToArray(this.stringValueToTerm(depth, await this.getContextSelfOrPropertyScoped(context, key), key, value, this.dataFactory.namedNode(value % 1 === 0 && value < 1e21 ? Util.XSD_INTEGER : Util.XSD_DOUBLE)));\n            default:\n                this.parsingContext.emitError(new Error(`Could not determine the RDF type of a ${type}`));\n                return [];\n        }\n    }\n    /**\n     * If the context defines a property-scoped context for the given key,\n     * that context will be returned.\n     * Otherwise, the given context will be returned as-is.\n     *\n     * This should be used for valueToTerm cases that are not objects.\n     * @param context A context.\n     * @param key A JSON key.\n     */\n    async getContextSelfOrPropertyScoped(context, key) {\n        const contextKeyEntry = context.getContextRaw()[key];\n        if (contextKeyEntry && typeof contextKeyEntry === 'object' && '@context' in contextKeyEntry) {\n            context = await this.parsingContext.parseContext(contextKeyEntry, context.getContextRaw(), true);\n        }\n        return context;\n    }\n    /**\n     * If the given term is null, return an empty array, otherwise return an array with the single given term.\n     * @param term A term.\n     */\n    nullableTermToArray(term) {\n        return term ? [term] : [];\n    }\n    /**\n     * Convert a given JSON key to an RDF predicate term,\n     * based on @vocab.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param key A JSON key.\n     * @return {RDF.NamedNode} An RDF named node.\n     */\n    predicateToTerm(context, key) {\n        const expanded = context.expandTerm(key, true, this.parsingContext.getExpandOptions());\n        // Immediately return if the predicate was disabled in the context\n        if (!expanded) {\n            return null;\n        }\n        // Check if the predicate is a blank node\n        if (expanded[0] === '_' && expanded[1] === ':') {\n            if (this.parsingContext.produceGeneralizedRdf) {\n                return this.dataFactory.blankNode(expanded.substr(2));\n            }\n            else {\n                return null;\n            }\n        }\n        // Check if the predicate is a valid IRI\n        if (Util.isValidIri(expanded)) {\n            return this.dataFactory.namedNode(expanded);\n        }\n        else {\n            if (expanded && this.parsingContext.strictValues) {\n                this.parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Invalid predicate IRI: ${expanded}`, jsonld_context_parser_1.ERROR_CODES.INVALID_IRI_MAPPING));\n            }\n            else {\n                return null;\n            }\n        }\n        return null;\n    }\n    /**\n     * Convert a given JSON key to an RDF resource term or blank node,\n     * based on @base.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param key A JSON key.\n     * @return {RDF.NamedNode} An RDF named node or null.\n     */\n    resourceToTerm(context, key) {\n        if (key.startsWith('_:')) {\n            return this.dataFactory.blankNode(key.substr(2));\n        }\n        const iri = context.expandTerm(key, false, this.parsingContext.getExpandOptions());\n        if (!Util.isValidIri(iri)) {\n            if (iri && this.parsingContext.strictValues) {\n                this.parsingContext.emitError(new Error(`Invalid resource IRI: ${iri}`));\n            }\n            else {\n                return null;\n            }\n        }\n        return this.dataFactory.namedNode(iri);\n    }\n    /**\n     * Convert a given JSON key to an RDF resource term.\n     * It will do this based on the @vocab,\n     * and fallback to @base.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param key A JSON key.\n     * @return {RDF.NamedNode} An RDF named node or null.\n     */\n    createVocabOrBaseTerm(context, key) {\n        if (key.startsWith('_:')) {\n            return this.dataFactory.blankNode(key.substr(2));\n        }\n        const expandOptions = this.parsingContext.getExpandOptions();\n        let expanded = context.expandTerm(key, true, expandOptions);\n        if (expanded === key) {\n            expanded = context.expandTerm(key, false, expandOptions);\n        }\n        if (!Util.isValidIri(expanded)) {\n            if (expanded && this.parsingContext.strictValues && !expanded.startsWith('@')) {\n                this.parsingContext.emitError(new Error(`Invalid term IRI: ${expanded}`));\n            }\n            else {\n                return null;\n            }\n        }\n        return this.dataFactory.namedNode(expanded);\n    }\n    /**\n     * Ensure that the given value becomes a string.\n     * @param {string | number} value A string or number.\n     * @param {NamedNode} datatype The intended datatype.\n     * @return {string} The returned string.\n     */\n    intToString(value, datatype) {\n        if (typeof value === 'number') {\n            if (Number.isFinite(value)) {\n                const isInteger = value % 1 === 0;\n                if (isInteger && (!datatype || datatype.value !== Util.XSD_DOUBLE)) {\n                    return Number(value).toString();\n                }\n                else {\n                    return value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n                }\n            }\n            else {\n                return value > 0 ? 'INF' : '-INF';\n            }\n        }\n        else {\n            return value;\n        }\n    }\n    /**\n     * Convert a given JSON string value to an RDF term.\n     * @param {number} depth The current stack depth.\n     * @param {JsonLdContextNormalized} context A JSON-LD context.\n     * @param {string} key The current JSON key.\n     * @param {string} value A JSON value.\n     * @param {NamedNode} defaultDatatype The default datatype for the given value.\n     * @return {RDF.Term} An RDF term or null.\n     */\n    stringValueToTerm(depth, context, key, value, defaultDatatype) {\n        // Check the datatype from the context\n        const contextType = Util.getContextValueType(context, key);\n        if (contextType) {\n            if (contextType === '@id') {\n                if (!defaultDatatype) {\n                    return this.resourceToTerm(context, this.intToString(value, defaultDatatype));\n                }\n            }\n            else if (contextType === '@vocab') {\n                if (!defaultDatatype) {\n                    return this.createVocabOrBaseTerm(context, this.intToString(value, defaultDatatype));\n                }\n            }\n            else {\n                defaultDatatype = this.dataFactory.namedNode(contextType);\n            }\n        }\n        // If we don't find such a datatype, check the language from the context\n        if (!defaultDatatype) {\n            const contextLanguage = Util.getContextValueLanguage(context, key);\n            const contextDirection = Util.getContextValueDirection(context, key);\n            if (contextDirection && this.parsingContext.rdfDirection) {\n                return this.createLanguageDirectionLiteral(depth, this.intToString(value, defaultDatatype), contextLanguage, contextDirection);\n            }\n            else {\n                return this.dataFactory.literal(this.intToString(value, defaultDatatype), contextLanguage);\n            }\n        }\n        // If all else fails, make a literal based on the default content type\n        return this.dataFactory.literal(this.intToString(value, defaultDatatype), defaultDatatype);\n    }\n    /**\n     * Create a literal for the given value with the given language and direction.\n     * Auxiliary quads may be emitted.\n     * @param {number} depth The current stack depth.\n     * @param {string} value A string value.\n     * @param {string} language A language tag.\n     * @param {string} direction A direction.\n     * @return {Term} An RDF term.\n     */\n    createLanguageDirectionLiteral(depth, value, language, direction) {\n        if (this.parsingContext.rdfDirection === 'i18n-datatype') {\n            // Create a datatyped literal, by encoding the language and direction into https://www.w3.org/ns/i18n#.\n            if (!language) {\n                language = '';\n            }\n            return this.dataFactory.literal(value, this.dataFactory.namedNode(`https://www.w3.org/ns/i18n#${language}_${direction}`));\n        }\n        else {\n            // Reify the literal.\n            const valueNode = this.dataFactory.blankNode();\n            const graph = this.getDefaultGraph();\n            this.parsingContext.emitQuad(depth, this.dataFactory.quad(valueNode, this.dataFactory.namedNode(Util.RDF + 'value'), this.dataFactory.literal(value), graph));\n            if (language) {\n                this.parsingContext.emitQuad(depth, this.dataFactory.quad(valueNode, this.dataFactory.namedNode(Util.RDF + 'language'), this.dataFactory.literal(language), graph));\n            }\n            this.parsingContext.emitQuad(depth, this.dataFactory.quad(valueNode, this.dataFactory.namedNode(Util.RDF + 'direction'), this.dataFactory.literal(direction), graph));\n            return valueNode;\n        }\n    }\n    /**\n     * Stringify the given JSON object to a canonical JSON string.\n     * @param value Any valid JSON value.\n     * @return {string} A canonical JSON string.\n     */\n    valueToJsonString(value) {\n        return canonicalizeJson(value);\n    }\n    /**\n     * If the key is not a keyword, try to check if it is an alias for a keyword,\n     * and if so, un-alias it.\n     * @param {string} key A key, can be falsy.\n     * @param {string[]} keys The path of keys.\n     * @param {number} depth The depth to\n     * @param {boolean} disableCache If the cache should be disabled\n     * @param {JsonLdContextNormalized} context A context to unalias with,\n     *                                           will fallback to retrieving the context for the given keys.\n     * @return {Promise<string>} A promise resolving to the key itself, or another key.\n     */\n    async unaliasKeyword(key, keys, depth, disableCache, context) {\n        // Numbers can not be an alias\n        if (Number.isInteger(key)) {\n            return key;\n        }\n        // Try to grab from cache if it was already un-aliased before.\n        if (!disableCache) {\n            const cachedUnaliasedKeyword = this.parsingContext.unaliasedKeywordCacheStack[depth];\n            if (cachedUnaliasedKeyword) {\n                return cachedUnaliasedKeyword;\n            }\n        }\n        if (!jsonld_context_parser_1.Util.isPotentialKeyword(key)) {\n            context = context || await this.parsingContext.getContext(keys);\n            let unliased = context.getContextRaw()[key];\n            if (unliased && typeof unliased === 'object') {\n                unliased = unliased['@id'];\n            }\n            if (jsonld_context_parser_1.Util.isValidKeyword(unliased)) {\n                key = unliased;\n            }\n        }\n        return disableCache ? key : (this.parsingContext.unaliasedKeywordCacheStack[depth] = key);\n    }\n    /**\n     * Unalias the keyword of the parent.\n     * This adds a safety check if no parent exist.\n     * @param {any[]} keys A stack of keys.\n     * @param {number} depth The current depth.\n     * @return {Promise<any>} A promise resolving to the parent key, or another key.\n     */\n    async unaliasKeywordParent(keys, depth) {\n        return await this.unaliasKeyword(depth > 0 && keys[depth - 1], keys, depth - 1);\n    }\n    /**\n     * Un-alias all keywords in the given hash.\n     * @param {{[p: string]: any}} hash A hash object.\n     * @param {string[]} keys The path of keys.\n     * @param {number} depth The depth.\n     * @param {JsonLdContextNormalized} context A context to unalias with,\n     *                                           will fallback to retrieving the context for the given keys.\n     * @return {Promise<{[p: string]: any}>} A promise resolving to the new hash.\n     */\n    async unaliasKeywords(hash, keys, depth, context) {\n        const newHash = {};\n        for (const key in hash) {\n            newHash[await this.unaliasKeyword(key, keys, depth + 1, true, context)] = hash[key];\n        }\n        return newHash;\n    }\n    /**\n     * Check if we are processing a literal (including JSON literals) at the given depth.\n     * This will also check higher levels,\n     * because if a parent is a literal,\n     * then the deeper levels are definitely a literal as well.\n     * @param {number} depth The depth.\n     * @return {boolean} If we are processing a literal.\n     */\n    isLiteral(depth) {\n        for (let i = depth; i >= 0; i--) {\n            if (this.parsingContext.literalStack[i] || this.parsingContext.jsonLiteralStack[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Check how many parents should be skipped for checking the @graph for the given node.\n     *\n     * @param {number} depth The depth of the node.\n     * @param {any[]} keys An array of keys.\n     * @return {number} The graph depth offset.\n     */\n    async getDepthOffsetGraph(depth, keys) {\n        for (let i = depth - 1; i > 0; i--) {\n            if (await this.unaliasKeyword(keys[i], keys, i) === '@graph') {\n                // Skip further processing if we are already in an @graph-@id or @graph-@index container\n                const containers = (await EntryHandlerContainer_1.EntryHandlerContainer.getContainerHandler(this.parsingContext, keys, i)).containers;\n                if (EntryHandlerContainer_1.EntryHandlerContainer.isComplexGraphContainer(containers)) {\n                    return -1;\n                }\n                return depth - i - 1;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Check if the given subject is of a valid type.\n     * This should be called when applying @reverse'd properties.\n     * @param {Term} subject A subject.\n     */\n    validateReverseSubject(subject) {\n        if (subject.termType === 'Literal') {\n            throw new jsonld_context_parser_1.ErrorCoded(`Found illegal literal in subject position: ${subject.value}`, jsonld_context_parser_1.ERROR_CODES.INVALID_REVERSE_PROPERTY_VALUE);\n        }\n    }\n    /**\n     * Get the default graph.\n     * @return {Term} An RDF term.\n     */\n    getDefaultGraph() {\n        return this.parsingContext.defaultGraph || this.dataFactory.defaultGraph();\n    }\n    /**\n     * Get the current graph, while taking into account a graph that can be defined via @container: @graph.\n     * If not within a graph container, the default graph will be returned.\n     * @param keys The current keys.\n     * @param depth The current depth.\n     */\n    async getGraphContainerValue(keys, depth) {\n        // Default to default graph\n        let graph = this.getDefaultGraph();\n        // Check if we are in an @container: @graph.\n        const { containers, depth: depthContainer } = await EntryHandlerContainer_1.EntryHandlerContainer\n            .getContainerHandler(this.parsingContext, keys, depth);\n        if ('@graph' in containers) {\n            // Get the graph from the stack.\n            const graphContainerIndex = EntryHandlerContainer_1.EntryHandlerContainer.getContainerGraphIndex(containers, depthContainer, keys);\n            const entry = this.parsingContext.graphContainerTermStack[depthContainer];\n            graph = entry ? entry[graphContainerIndex] : null;\n            // Set the graph in the stack if none has been set yet.\n            if (!graph) {\n                let graphId = null;\n                if ('@id' in containers) {\n                    const keyUnaliased = await this.getContainerKey(keys[depthContainer], keys, depthContainer);\n                    if (keyUnaliased !== null) {\n                        graphId = await this.resourceToTerm(await this.parsingContext.getContext(keys), keyUnaliased);\n                    }\n                }\n                if (!graphId) {\n                    graphId = this.dataFactory.blankNode();\n                }\n                if (!this.parsingContext.graphContainerTermStack[depthContainer]) {\n                    this.parsingContext.graphContainerTermStack[depthContainer] = {};\n                }\n                graph = this.parsingContext.graphContainerTermStack[depthContainer][graphContainerIndex] = graphId;\n            }\n        }\n        return graph;\n    }\n    /**\n     * Get the properties depth for retrieving properties.\n     *\n     * Typically, the properties depth will be identical to the given depth.\n     *\n     * The following exceptions apply:\n     * * When the parent is @reverse, the depth is decremented by one.\n     * * When @nest parents are found, the depth is decremented by the number of @nest parents.\n     * If in combination with the exceptions above an intermediary array is discovered,\n     * the depth is also decremented by this number of arrays.\n     *\n     * @param keys The current key chain.\n     * @param depth The current depth.\n     */\n    async getPropertiesDepth(keys, depth) {\n        let lastValidDepth = depth;\n        for (let i = depth - 1; i > 0; i--) {\n            if (typeof keys[i] !== 'number') { // Skip array keys\n                const parentKey = await this.unaliasKeyword(keys[i], keys, i);\n                if (parentKey === '@reverse') {\n                    return i;\n                }\n                else if (parentKey === '@nest') {\n                    lastValidDepth = i;\n                }\n                else {\n                    return lastValidDepth;\n                }\n            }\n        }\n        return lastValidDepth;\n    }\n    /**\n     * Get the key for the current container entry.\n     * @param key A key, can be falsy.\n     * @param keys The key chain.\n     * @param depth The current depth to get the key from.\n     * @return Promise resolving to the key.\n     *         Null will be returned for @none entries, with aliasing taken into account.\n     */\n    async getContainerKey(key, keys, depth) {\n        const keyUnaliased = await this.unaliasKeyword(key, keys, depth);\n        return keyUnaliased === '@none' ? null : keyUnaliased;\n    }\n}\nexports.Util = Util;\nUtil.XSD = 'http://www.w3.org/2001/XMLSchema#';\nUtil.XSD_BOOLEAN = Util.XSD + 'boolean';\nUtil.XSD_INTEGER = Util.XSD + 'integer';\nUtil.XSD_DOUBLE = Util.XSD + 'double';\nUtil.RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n//# sourceMappingURL=Util.js.map","const DataFactory = require('./lib/DataFactory.js')\n\nmodule.exports = DataFactory\n","class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordId = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @id entries.\n */\nclass EntryHandlerKeywordId extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@id');\n    }\n    isStackProcessor() {\n        return false;\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        if (typeof value !== 'string') {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found illegal @id '${value}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_ID_VALUE));\n        }\n        // Determine the canonical place for this id.\n        // For example, @nest parents should be ignored.\n        const depthProperties = await util.getPropertiesDepth(keys, depth);\n        // Error if an @id for this node already existed.\n        if (parsingContext.idStack[depthProperties] !== undefined) {\n            if (parsingContext.idStack[depthProperties][0].listHead) {\n                // Error if an @list was already defined for this node\n                parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found illegal neighbouring entries next to @list for key: '${keys[depth - 1]}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_SET_OR_LIST_OBJECT));\n            }\n            else {\n                // Otherwise, the previous id was just because of an @id entry.\n                parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found duplicate @ids '${parsingContext\n                    .idStack[depthProperties][0].value}' and '${value}'`, jsonld_context_parser_1.ERROR_CODES.COLLIDING_KEYWORDS));\n            }\n        }\n        // Save our @id on the stack\n        parsingContext.idStack[depthProperties] = util.nullableTermToArray(await util.resourceToTerm(await parsingContext.getContext(keys), value));\n    }\n}\nexports.EntryHandlerKeywordId = EntryHandlerKeywordId;\n//# sourceMappingURL=EntryHandlerKeywordId.js.map","class Sink {\n  constructor (Impl, options) {\n    this.Impl = Impl\n    this.options = options\n  }\n\n  import (input, options) {\n    const output = new this.Impl(input, Object.assign({}, this.options, options))\n\n    input.on('end', () => {\n      if (!output.readable) {\n        output.emit('end')\n      }\n    })\n\n    input.on('error', (err) => {\n      output.emit('error', err)\n    })\n\n    return output\n  }\n}\n\nmodule.exports = Sink\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerInvalidFallback = void 0;\n/**\n * A catch-all for properties, that will either emit an error or ignore,\n * depending on whether or not the `strictValues` property is set.\n */\nclass EntryHandlerInvalidFallback {\n    isPropertyHandler() {\n        return false;\n    }\n    isStackProcessor() {\n        return true;\n    }\n    async validate(parsingContext, util, keys, depth, inProperty) {\n        return false;\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        return true;\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        parsingContext.emittedStack[depth] = false;\n    }\n}\nexports.EntryHandlerInvalidFallback = EntryHandlerInvalidFallback;\n//# sourceMappingURL=EntryHandlerInvalidFallback.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordContext = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @context entries.\n */\nclass EntryHandlerKeywordContext extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@context');\n    }\n    isStackProcessor() {\n        return false;\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        // Error if an out-of-order context was found when support is not enabled.\n        if (parsingContext.streamingProfile\n            && (parsingContext.processingStack[depth]\n                || parsingContext.processingType[depth]\n                || parsingContext.idStack[depth] !== undefined)) {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded('Found an out-of-order context, while streaming is enabled.' +\n                '(disable `streamingProfile`)', jsonld_context_parser_1.ERROR_CODES.INVALID_STREAMING_KEY_ORDER));\n        }\n        // Find the parent context to inherit from.\n        // We actually request a context for the current depth (with fallback to parent)\n        // because we want to take into account any property-scoped contexts that are defined for this depth.\n        const parentContext = parsingContext.getContext(keys);\n        // Set the context for this scope\n        const context = parsingContext.parseContext(value, (await parentContext).getContextRaw());\n        parsingContext.contextTree.setContext(keys.slice(0, -1), context);\n        parsingContext.emitContext(value);\n        await parsingContext.validateContext(await context);\n    }\n}\nexports.EntryHandlerKeywordContext = EntryHandlerKeywordContext;\n//# sourceMappingURL=EntryHandlerKeywordContext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordNest = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @nest entries.\n */\nclass EntryHandlerKeywordNest extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@nest');\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        if (typeof value !== 'object') {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found invalid @nest entry for '${key}': '${value}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_NEST_VALUE));\n        }\n        if ('@value' in await util.unaliasKeywords(value, keys, depth, await parsingContext.getContext(keys))) {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found an invalid @value node for '${key}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_NEST_VALUE));\n        }\n        parsingContext.emittedStack[depth] = false;\n    }\n}\nexports.EntryHandlerKeywordNest = EntryHandlerKeywordNest;\n//# sourceMappingURL=EntryHandlerKeywordNest.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=IDocumentLoader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordValue = void 0;\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @value entries.\n */\nclass EntryHandlerKeywordValue extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@value');\n    }\n    async validate(parsingContext, util, keys, depth, inProperty) {\n        // If this is @value, mark it so in the stack so that no deeper handling of nodes occurs.\n        const key = keys[depth];\n        if (key && !parsingContext.literalStack[depth] && await this.test(parsingContext, util, key, keys, depth)) {\n            parsingContext.literalStack[depth] = true;\n        }\n        return super.validate(parsingContext, util, keys, depth, inProperty);\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        return await util.unaliasKeyword(keys[depth], keys.slice(0, keys.length - 1), depth - 1, true) === '@value';\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        // If the value is valid, indicate that we are processing a literal.\n        // The actual value will be determined at the parent level when the @value is part of an object,\n        // because we may want to take into account additional entries such as @language.\n        // See {@link Util.valueToTerm}\n        // Indicate that we are processing a literal, and that no later predicates should be parsed at this depth.\n        parsingContext.literalStack[depth] = true;\n        // Void any buffers that we may have accumulated up until now\n        delete parsingContext.unidentifiedValuesBuffer[depth];\n        delete parsingContext.unidentifiedGraphsBuffer[depth];\n        // Indicate that we have not emitted at this depth\n        parsingContext.emittedStack[depth] = false;\n    }\n}\nexports.EntryHandlerKeywordValue = EntryHandlerKeywordValue;\n//# sourceMappingURL=EntryHandlerKeywordValue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass Quad {\n    constructor(subject, predicate, object, graph) {\n        this.termType = 'Quad';\n        this.value = '';\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    equals(other) {\n        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n        return !!other && (other.termType === 'Quad' || !other.termType) &&\n            this.subject.equals(other.subject) &&\n            this.predicate.equals(other.predicate) &&\n            this.object.equals(other.object) &&\n            this.graph.equals(other.graph);\n    }\n}\nexports.Quad = Quad;\n//# sourceMappingURL=Quad.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/JsonLdParser\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerArrayValue = void 0;\nconst Util_1 = require(\"../Util\");\n/**\n * Handles values that are part of an array.\n */\nclass EntryHandlerArrayValue {\n    isPropertyHandler() {\n        return false;\n    }\n    isStackProcessor() {\n        return true;\n    }\n    async validate(parsingContext, util, keys, depth, inProperty) {\n        return this.test(parsingContext, util, null, keys, depth);\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        return typeof keys[depth] === 'number';\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        let parentKey = await util.unaliasKeywordParent(keys, depth);\n        // Check if we have an anonymous list\n        if (parentKey === '@list') {\n            // Our value is part of an array\n            // Determine the list root key\n            let listRootKey = null;\n            let listRootDepth = 0;\n            for (let i = depth - 2; i > 0; i--) {\n                const keyOption = keys[i];\n                if (typeof keyOption === 'string' || typeof keyOption === 'number') {\n                    listRootDepth = i;\n                    listRootKey = keyOption;\n                    break;\n                }\n            }\n            if (listRootKey !== null) {\n                // Emit the given objects as list elements\n                const values = await util.valueToTerm(await parsingContext.getContext(keys), listRootKey, value, depth, keys);\n                for (const object of values) {\n                    await this.handleListElement(parsingContext, util, object, value, depth, keys.slice(0, listRootDepth), listRootDepth);\n                }\n                // If no values were found, emit a falsy list element to force an empty RDF list to be emitted.\n                if (values.length === 0) {\n                    await this.handleListElement(parsingContext, util, null, value, depth, keys.slice(0, listRootDepth), listRootDepth);\n                }\n            }\n        }\n        else if (parentKey === '@set') {\n            // Our value is part of a set, so we just add it to the parent-parent\n            await parsingContext.newOnValueJob(keys.slice(0, -2), value, depth - 2, false);\n        }\n        else if (parentKey !== undefined && parentKey !== '@type') {\n            // Buffer our value using the parent key as predicate\n            // Determine the first parent key that is *not* an array key\n            // This is needed in case we have an @list container with nested arrays,\n            // where each of them should produce nested RDF lists.\n            for (let i = depth - 1; i > 0; i--) {\n                if (typeof keys[i] !== 'number') {\n                    parentKey = await util.unaliasKeyword(keys[i], keys, i);\n                    break;\n                }\n            }\n            // Check if the predicate is marked as an @list in the context\n            const parentContext = await parsingContext.getContext(keys.slice(0, -1));\n            if ('@list' in Util_1.Util.getContextValueContainer(parentContext, parentKey)) {\n                // Our value is part of an array\n                // Emit the given objects as list elements\n                parsingContext.emittedStack[depth + 1] = true; // Ensure the creation of bnodes for empty nodes\n                const values = await util.valueToTerm(await parsingContext.getContext(keys), parentKey, value, depth, keys);\n                for (const object of values) {\n                    await this.handleListElement(parsingContext, util, object, value, depth, keys.slice(0, -1), depth - 1);\n                }\n                // If no values were found, emit a falsy list element to force an empty RDF list to be emitted.\n                if (values.length === 0) {\n                    await this.handleListElement(parsingContext, util, null, value, depth, keys.slice(0, -1), depth - 1);\n                }\n            }\n            else {\n                // Copy the stack values up one level so that the next job can access them.\n                parsingContext.shiftStack(depth, 1);\n                // Execute the job one level higher\n                await parsingContext.newOnValueJob(keys.slice(0, -1), value, depth - 1, false);\n                // Remove any defined contexts at this level to avoid it to propagate to the next array element.\n                parsingContext.contextTree.removeContext(keys.slice(0, -1));\n            }\n        }\n    }\n    async handleListElement(parsingContext, util, value, valueOriginal, depth, listRootKeys, listRootDepth) {\n        // Buffer our value as an RDF list using the listRootKey as predicate\n        let listPointer = parsingContext.listPointerStack[depth];\n        if (valueOriginal !== null && (await util.unaliasKeywords(valueOriginal, listRootKeys, depth))['@value'] !== null) {\n            if (!listPointer || !listPointer.value) {\n                const linkTerm = util.dataFactory.blankNode();\n                listPointer = { value: linkTerm, listRootDepth, listId: linkTerm };\n            }\n            else {\n                // rdf:rest links are always emitted before the next element,\n                // as the blank node identifier is only created at that point.\n                // Because of this reason, the final rdf:nil is emitted when the stack depth is decreased.\n                const newLinkTerm = util.dataFactory.blankNode();\n                parsingContext.emitQuad(depth, util.dataFactory.quad(listPointer.value, util.rdfRest, newLinkTerm, util.getDefaultGraph()));\n                // Update the list pointer for the next element\n                listPointer.value = newLinkTerm;\n            }\n            // Emit a list element for the current value\n            // Omit rdf:first if the value is invalid\n            if (value) {\n                parsingContext.emitQuad(depth, util.dataFactory.quad(listPointer.value, util.rdfFirst, value, util.getDefaultGraph()));\n            }\n        }\n        else {\n            // A falsy list element if found.\n            // Mark it as an rdf:nil list until another valid list element comes in\n            if (!listPointer) {\n                listPointer = { listRootDepth, listId: util.rdfNil };\n            }\n        }\n        parsingContext.listPointerStack[depth] = listPointer;\n    }\n}\nexports.EntryHandlerArrayValue = EntryHandlerArrayValue;\n//# sourceMappingURL=EntryHandlerArrayValue.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/ContextParser\"), exports);\n__exportStar(require(\"./lib/ErrorCoded\"), exports);\n__exportStar(require(\"./lib/FetchDocumentLoader\"), exports);\n__exportStar(require(\"./lib/IDocumentLoader\"), exports);\n__exportStar(require(\"./lib/JsonLdContext\"), exports);\n__exportStar(require(\"./lib/JsonLdContextNormalized\"), exports);\n__exportStar(require(\"./lib/Util\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NamedNode = void 0;\n/**\n * A term that contains an IRI.\n */\nclass NamedNode {\n    constructor(value) {\n        this.termType = 'NamedNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'NamedNode' && other.value === this.value;\n    }\n}\nexports.NamedNode = NamedNode;\n//# sourceMappingURL=NamedNode.js.map","\"use strict\";\n// tslint:disable:max-line-length\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=JsonLdContext.js.map","class Variable {\n  constructor (name) {\n    this.value = name\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nVariable.prototype.termType = 'Variable'\n\nmodule.exports = Variable\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerHandlerType = void 0;\nconst EntryHandlerPredicate_1 = require(\"../entryhandler/EntryHandlerPredicate\");\nconst Util_1 = require(\"../Util\");\n/**\n * Container handler for @type.\n *\n * This will add this entry to the parent node, and use the current key as an rdf:type value.\n */\nclass ContainerHandlerType {\n    canCombineWithGraph() {\n        return false;\n    }\n    async handle(containers, parsingContext, util, keys, value, depth) {\n        if (!Array.isArray(value)) {\n            if (typeof value === 'string') {\n                // Determine the @type of the container\n                const context = await parsingContext.getContext(keys);\n                const containerTypeType = Util_1.Util.getContextValueType(context, keys[depth - 1]);\n                // String values refer to node references\n                const id = containerTypeType === '@vocab'\n                    ? await util.createVocabOrBaseTerm(context, value)\n                    : await util.resourceToTerm(context, value);\n                if (id) {\n                    // Handle the value of this node as @id, which will also cause the predicate from above to be emitted.\n                    const subValue = { '@id': id.termType === 'NamedNode' ? id.value : value };\n                    await parsingContext.newOnValueJob(keys.slice(0, keys.length - 1), subValue, depth - 1, true);\n                    // Set the id in the stack so it can be used for the rdf:type handling later on\n                    parsingContext.idStack[depth + 1] = [id];\n                }\n            }\n            else {\n                // Other values are handled by handling them as a proper job\n                // Check needed for cases where entries don't have an explicit @id\n                const entryHasIdentifier = !!parsingContext.idStack[depth + 1];\n                // Handle the value of this node, which will also cause the predicate from above to be emitted.\n                if (!entryHasIdentifier) {\n                    delete parsingContext.idStack[depth]; // Force new (blank node) identifier\n                }\n                await parsingContext.newOnValueJob(keys.slice(0, keys.length - 1), value, depth - 1, true);\n                if (!entryHasIdentifier) {\n                    parsingContext.idStack[depth + 1] = parsingContext.idStack[depth]; // Copy the id to the child node, for @type\n                }\n            }\n            // Identify the type to emit.\n            const keyOriginal = await util.getContainerKey(keys[depth], keys, depth);\n            const type = keyOriginal !== null\n                ? util.createVocabOrBaseTerm(await parsingContext.getContext(keys), keyOriginal)\n                : null;\n            if (type) {\n                // Push the type to the stack using the rdf:type predicate\n                await EntryHandlerPredicate_1.EntryHandlerPredicate.handlePredicateObject(parsingContext, util, keys, depth + 1, util.rdfType, type, false);\n            }\n            // Flush any pending flush buffers\n            await parsingContext.handlePendingContainerFlushBuffers();\n        }\n        parsingContext.emittedStack[depth] = false; // Don't emit the predicate owning this container.\n    }\n}\nexports.ContainerHandlerType = ContainerHandlerType;\n//# sourceMappingURL=ContainerHandlerType.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/BlankNode\"), exports);\n__exportStar(require(\"./lib/DataFactory\"), exports);\n__exportStar(require(\"./lib/DefaultGraph\"), exports);\n__exportStar(require(\"./lib/Literal\"), exports);\n__exportStar(require(\"./lib/NamedNode\"), exports);\n__exportStar(require(\"./lib/Quad\"), exports);\n__exportStar(require(\"./lib/Variable\"), exports);\n//# sourceMappingURL=index.js.map","const NamedNode = require('./NamedNode.js')\n\nclass Literal {\n  constructor (value, language, datatype) {\n    this.value = value\n    this.datatype = Literal.stringDatatype\n    this.language = ''\n\n    if (language) {\n      this.language = language\n      this.datatype = Literal.langStringDatatype\n    } else if (datatype) {\n      this.datatype = datatype\n    }\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype)\n  }\n}\n\nLiteral.prototype.termType = 'Literal'\n\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\n\nmodule.exports = Literal\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlankNode = void 0;\n/**\n * A term that represents an RDF blank node with a label.\n */\nclass BlankNode {\n    constructor(value) {\n        this.termType = 'BlankNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'BlankNode' && other.value === this.value;\n    }\n}\nexports.BlankNode = BlankNode;\n//# sourceMappingURL=BlankNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonLdParser = void 0;\n// tslint:disable-next-line:no-var-requires\nconst Parser = require('jsonparse');\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst stream_1 = require(\"stream\");\nconst EntryHandlerArrayValue_1 = require(\"./entryhandler/EntryHandlerArrayValue\");\nconst EntryHandlerContainer_1 = require(\"./entryhandler/EntryHandlerContainer\");\nconst EntryHandlerInvalidFallback_1 = require(\"./entryhandler/EntryHandlerInvalidFallback\");\nconst EntryHandlerPredicate_1 = require(\"./entryhandler/EntryHandlerPredicate\");\nconst EntryHandlerKeywordContext_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordContext\");\nconst EntryHandlerKeywordGraph_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordGraph\");\nconst EntryHandlerKeywordId_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordId\");\nconst EntryHandlerKeywordIncluded_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordIncluded\");\nconst EntryHandlerKeywordNest_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordNest\");\nconst EntryHandlerKeywordType_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordType\");\nconst EntryHandlerKeywordUnknownFallback_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordUnknownFallback\");\nconst EntryHandlerKeywordValue_1 = require(\"./entryhandler/keyword/EntryHandlerKeywordValue\");\nconst ParsingContext_1 = require(\"./ParsingContext\");\nconst Util_1 = require(\"./Util\");\nconst http_link_header_1 = require(\"http-link-header\");\n/**\n * A stream transformer that parses JSON-LD (text) streams to an {@link RDF.Stream}.\n */\nclass JsonLdParser extends stream_1.Transform {\n    constructor(options) {\n        super({ readableObjectMode: true });\n        options = options || {};\n        this.options = options;\n        this.parsingContext = new ParsingContext_1.ParsingContext(Object.assign({ parser: this }, options));\n        this.util = new Util_1.Util({ dataFactory: options.dataFactory, parsingContext: this.parsingContext });\n        this.jsonParser = new Parser();\n        this.contextJobs = [];\n        this.typeJobs = [];\n        this.contextAwaitingJobs = [];\n        this.lastDepth = 0;\n        this.lastKeys = [];\n        this.lastOnValueJob = Promise.resolve();\n        this.attachJsonParserListeners();\n        this.on('end', () => {\n            if (typeof this.jsonParser.mode !== 'undefined') {\n                this.emit('error', new Error('Unclosed document'));\n            }\n        });\n    }\n    /**\n     * Construct a JsonLdParser from the given HTTP response.\n     *\n     * This will throw an error if no valid JSON response is received\n     * (application/ld+json, application/json, or something+json).\n     *\n     * For raw JSON responses, exactly one link header pointing to a JSON-LD context is required.\n     *\n     * This method is not responsible for handling redirects.\n     *\n     * @param baseIRI The URI of the received response.\n     * @param mediaType The received content type.\n     * @param headers Optional HTTP headers.\n     * @param options Optional parser options.\n     */\n    static fromHttpResponse(baseIRI, mediaType, headers, options) {\n        let context;\n        // Special cases when receiving something else than the JSON-LD media type\n        if (mediaType !== 'application/ld+json') {\n            // Only accept JSON or JSON extension types\n            if (mediaType !== 'application/json' && !mediaType.endsWith('+json')) {\n                throw new jsonld_context_parser_1.ErrorCoded(`Unsupported JSON-LD media type ${mediaType}`, jsonld_context_parser_1.ERROR_CODES.LOADING_DOCUMENT_FAILED);\n            }\n            // We need exactly one JSON-LD context in the link header\n            if (headers && headers.has('Link')) {\n                headers.forEach((value, key) => {\n                    if (key === 'link') {\n                        const linkHeader = http_link_header_1.parse(value);\n                        for (const link of linkHeader.get('rel', 'http://www.w3.org/ns/json-ld#context')) {\n                            if (context) {\n                                throw new jsonld_context_parser_1.ErrorCoded('Multiple JSON-LD context link headers were found on ' + baseIRI, jsonld_context_parser_1.ERROR_CODES.MULTIPLE_CONTEXT_LINK_HEADERS);\n                            }\n                            context = link.uri;\n                        }\n                    }\n                });\n            }\n            if (!context && !(options === null || options === void 0 ? void 0 : options.ignoreMissingContextLinkHeader)) {\n                throw new jsonld_context_parser_1.ErrorCoded(`Missing context link header for media type ${mediaType} on ${baseIRI}`, jsonld_context_parser_1.ERROR_CODES.LOADING_DOCUMENT_FAILED);\n            }\n        }\n        // Check if the streaming profile is present\n        let streamingProfile;\n        if (headers && headers.has('Content-Type')) {\n            const contentType = headers.get('Content-Type');\n            const match = /; *profile=([^\"]*)/.exec(contentType);\n            if (match && match[1] === 'http://www.w3.org/ns/json-ld#streaming') {\n                streamingProfile = true;\n            }\n        }\n        return new JsonLdParser(Object.assign({ baseIRI,\n            context,\n            streamingProfile }, options ? options : {}));\n    }\n    /**\n     * Parses the given text stream into a quad stream.\n     * @param {NodeJS.EventEmitter} stream A text stream.\n     * @return {RDF.Stream} A quad stream.\n     */\n    import(stream) {\n        const output = new stream_1.PassThrough({ readableObjectMode: true });\n        stream.on('error', (error) => parsed.emit('error', error));\n        stream.on('data', (data) => output.push(data));\n        stream.on('end', () => output.push(null));\n        const parsed = output.pipe(new JsonLdParser(this.options));\n        return parsed;\n    }\n    _transform(chunk, encoding, callback) {\n        this.jsonParser.write(chunk);\n        this.lastOnValueJob\n            .then(() => callback(), (error) => callback(error));\n    }\n    /**\n     * Start a new job for parsing the given value.\n     *\n     * This will let the first valid {@link IEntryHandler} handle the entry.\n     *\n     * @param {any[]} keys The stack of keys.\n     * @param value The value to parse.\n     * @param {number} depth The depth to parse at.\n     * @param {boolean} lastDepthCheck If the lastDepth check should be done for buffer draining.\n     * @return {Promise<void>} A promise resolving when the job is done.\n     */\n    async newOnValueJob(keys, value, depth, lastDepthCheck) {\n        let flushStacks = true;\n        // When we go up the stack, emit all unidentified values\n        // We need to do this before the new job, because the new job may require determined values from the flushed jobs.\n        if (lastDepthCheck && depth < this.lastDepth) {\n            // Check if we had any RDF lists that need to be terminated with an rdf:nil\n            const listPointer = this.parsingContext.listPointerStack[this.lastDepth];\n            if (listPointer) {\n                // Terminate the list if the had at least one value\n                if (listPointer.value) {\n                    this.emit('data', this.util.dataFactory.quad(listPointer.value, this.util.rdfRest, this.util.rdfNil, this.util.getDefaultGraph()));\n                }\n                // Add the list id to the id stack, so it can be used higher up in the stack\n                listPointer.listId.listHead = true;\n                this.parsingContext.idStack[listPointer.listRootDepth + 1] = [listPointer.listId];\n                this.parsingContext.listPointerStack.splice(this.lastDepth, 1);\n            }\n            // Flush the buffer for lastDepth\n            // If the parent key is a special type of container, postpone flushing until that parent is handled.\n            if (await EntryHandlerContainer_1.EntryHandlerContainer.isBufferableContainerHandler(this.parsingContext, this.lastKeys, this.lastDepth)) {\n                this.parsingContext.pendingContainerFlushBuffers\n                    .push({ depth: this.lastDepth, keys: this.lastKeys.slice(0, this.lastKeys.length) });\n                flushStacks = false;\n            }\n            else {\n                await this.flushBuffer(this.lastDepth, this.lastKeys);\n            }\n        }\n        const key = await this.util.unaliasKeyword(keys[depth], keys, depth);\n        const parentKey = await this.util.unaliasKeywordParent(keys, depth);\n        this.parsingContext.emittedStack[depth] = true;\n        let handleKey = true;\n        // Keywords inside @reverse is not allowed apart from @context\n        if (jsonld_context_parser_1.Util.isValidKeyword(key) && parentKey === '@reverse' && key !== '@context') {\n            this.emit('error', new jsonld_context_parser_1.ErrorCoded(`Found the @id '${value}' inside an @reverse property`, jsonld_context_parser_1.ERROR_CODES.INVALID_REVERSE_PROPERTY_MAP));\n        }\n        // Skip further processing if one of the parent nodes are invalid.\n        // We use the validationStack to reuse validation results that were produced before with common key stacks.\n        let inProperty = false;\n        if (this.parsingContext.validationStack.length > 1) {\n            inProperty = this.parsingContext.validationStack[this.parsingContext.validationStack.length - 1].property;\n        }\n        for (let i = Math.max(1, this.parsingContext.validationStack.length - 1); i < keys.length - 1; i++) {\n            const validationResult = this.parsingContext.validationStack[i]\n                || (this.parsingContext.validationStack[i] = await this.validateKey(keys.slice(0, i + 1), i, inProperty));\n            if (!validationResult.valid) {\n                this.parsingContext.emittedStack[depth] = false;\n                handleKey = false;\n                break;\n            }\n            else if (!inProperty && validationResult.property) {\n                inProperty = true;\n            }\n        }\n        // Skip further processing if this node is part of a literal\n        if (this.util.isLiteral(depth)) {\n            handleKey = false;\n        }\n        // Get handler\n        if (handleKey) {\n            for (const entryHandler of JsonLdParser.ENTRY_HANDLERS) {\n                const testResult = await entryHandler.test(this.parsingContext, this.util, key, keys, depth);\n                if (testResult) {\n                    // Pass processing over to the handler\n                    await entryHandler.handle(this.parsingContext, this.util, key, keys, value, depth, testResult);\n                    // Flag that this depth is processed\n                    if (entryHandler.isStackProcessor()) {\n                        this.parsingContext.processingStack[depth] = true;\n                    }\n                    break;\n                }\n            }\n        }\n        // Validate value indexes on the root.\n        if (depth === 0 && Array.isArray(value)) {\n            await this.util.validateValueIndexes(value);\n        }\n        // When we go up the stack, flush the old stack\n        if (flushStacks && depth < this.lastDepth) {\n            // Reset our stacks\n            this.flushStacks(this.lastDepth);\n        }\n        this.lastDepth = depth;\n        this.lastKeys = keys;\n        // Clear the keyword cache at this depth, and everything underneath.\n        this.parsingContext.unaliasedKeywordCacheStack.splice(depth - 1);\n    }\n    /**\n     * Flush the processing stacks at the given depth.\n     * @param {number} depth A depth.\n     */\n    flushStacks(depth) {\n        this.parsingContext.processingStack.splice(depth, 1);\n        this.parsingContext.processingType.splice(depth, 1);\n        this.parsingContext.emittedStack.splice(depth, 1);\n        this.parsingContext.idStack.splice(depth, 1);\n        this.parsingContext.graphStack.splice(depth + 1, 1);\n        this.parsingContext.graphContainerTermStack.splice(depth, 1);\n        this.parsingContext.jsonLiteralStack.splice(depth, 1);\n        this.parsingContext.validationStack.splice(depth - 1, 2);\n        this.parsingContext.literalStack.splice(depth, this.parsingContext.literalStack.length - depth);\n        // TODO: just like the literal stack, splice all other stack until the end as well?\n    }\n    /**\n     * Flush buffers for the given depth.\n     *\n     * This should be called after the last entry at a given depth was processed.\n     *\n     * @param {number} depth A depth.\n     * @param {any[]} keys A stack of keys.\n     * @return {Promise<void>} A promise resolving if flushing is done.\n     */\n    async flushBuffer(depth, keys) {\n        let subjects = this.parsingContext.idStack[depth];\n        if (!subjects) {\n            subjects = this.parsingContext.idStack[depth] = [this.util.dataFactory.blankNode()];\n        }\n        // Flush values at this level\n        const valueBuffer = this.parsingContext.unidentifiedValuesBuffer[depth];\n        if (valueBuffer) {\n            for (const subject of subjects) {\n                const depthOffsetGraph = await this.util.getDepthOffsetGraph(depth, keys);\n                const graphs = (this.parsingContext.graphStack[depth] || depthOffsetGraph >= 0)\n                    ? this.parsingContext.idStack[depth - depthOffsetGraph - 1]\n                    : [await this.util.getGraphContainerValue(keys, depth)];\n                if (graphs) {\n                    for (const graph of graphs) {\n                        // Flush values to stream if the graph @id is known\n                        this.parsingContext.emittedStack[depth] = true;\n                        for (const bufferedValue of valueBuffer) {\n                            if (bufferedValue.reverse) {\n                                this.parsingContext.emitQuad(depth, this.util.dataFactory.quad(bufferedValue.object, bufferedValue.predicate, subject, graph));\n                            }\n                            else {\n                                this.parsingContext.emitQuad(depth, this.util.dataFactory.quad(subject, bufferedValue.predicate, bufferedValue.object, graph));\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Place the values in the graphs buffer if the graph @id is not yet known\n                    const subGraphBuffer = this.parsingContext.getUnidentifiedGraphBufferSafe(depth - await this.util.getDepthOffsetGraph(depth, keys) - 1);\n                    for (const bufferedValue of valueBuffer) {\n                        if (bufferedValue.reverse) {\n                            subGraphBuffer.push({\n                                object: subject,\n                                predicate: bufferedValue.predicate,\n                                subject: bufferedValue.object,\n                            });\n                        }\n                        else {\n                            subGraphBuffer.push({\n                                object: bufferedValue.object,\n                                predicate: bufferedValue.predicate,\n                                subject,\n                            });\n                        }\n                    }\n                }\n            }\n            this.parsingContext.unidentifiedValuesBuffer.splice(depth, 1);\n            this.parsingContext.literalStack.splice(depth, 1);\n            this.parsingContext.jsonLiteralStack.splice(depth, 1);\n        }\n        // Flush graphs at this level\n        const graphBuffer = this.parsingContext.unidentifiedGraphsBuffer[depth];\n        if (graphBuffer) {\n            for (const subject of subjects) {\n                // A @graph statement at the root without @id relates to the default graph,\n                // unless there are top-level properties,\n                // others relate to blank nodes.\n                const graph = depth === 1 && subject.termType === 'BlankNode'\n                    && !this.parsingContext.topLevelProperties ? this.util.getDefaultGraph() : subject;\n                this.parsingContext.emittedStack[depth] = true;\n                for (const bufferedValue of graphBuffer) {\n                    this.parsingContext.emitQuad(depth, this.util.dataFactory.quad(bufferedValue.subject, bufferedValue.predicate, bufferedValue.object, graph));\n                }\n            }\n            this.parsingContext.unidentifiedGraphsBuffer.splice(depth, 1);\n        }\n    }\n    /**\n     * Check if at least one {@link IEntryHandler} validates the entry to true.\n     * @param {any[]} keys A stack of keys.\n     * @param {number} depth A depth.\n     * @param {boolean} inProperty If the current depth is part of a valid property node.\n     * @return {Promise<{ valid: boolean, property: boolean }>} A promise resolving to true or false.\n     */\n    async validateKey(keys, depth, inProperty) {\n        for (const entryHandler of JsonLdParser.ENTRY_HANDLERS) {\n            if (await entryHandler.validate(this.parsingContext, this.util, keys, depth, inProperty)) {\n                return { valid: true, property: inProperty || entryHandler.isPropertyHandler() };\n            }\n        }\n        return { valid: false, property: false };\n    }\n    /**\n     * Attach all required listeners to the JSON parser.\n     *\n     * This should only be called once.\n     */\n    attachJsonParserListeners() {\n        // Listen to json parser events\n        this.jsonParser.onValue = (value) => {\n            const depth = this.jsonParser.stack.length;\n            const keys = (new Array(depth + 1).fill(0)).map((v, i) => {\n                return i === depth ? this.jsonParser.key : this.jsonParser.stack[i].key;\n            });\n            if (!this.isParsingContextInner(depth)) { // Don't parse inner nodes inside @context\n                const valueJobCb = () => this.newOnValueJob(keys, value, depth, true);\n                if (!this.parsingContext.streamingProfile\n                    && !this.parsingContext.contextTree.getContext(keys.slice(0, -1))) {\n                    // If an out-of-order context is allowed,\n                    // we have to buffer everything.\n                    // We store jobs for @context's and @type's separately,\n                    // because at the end, we have to process them first.\n                    // We also handle @type because these *could* introduce a type-scoped context.\n                    if (keys[depth] === '@context') {\n                        let jobs = this.contextJobs[depth];\n                        if (!jobs) {\n                            jobs = this.contextJobs[depth] = [];\n                        }\n                        jobs.push(valueJobCb);\n                    }\n                    else if (keys[depth] === '@type'\n                        || typeof keys[depth] === 'number' && keys[depth - 1] === '@type') { // Also capture @type with array values\n                        // Remove @type from keys, because we want it to apply to parent later on\n                        this.typeJobs.push({ job: valueJobCb, keys: keys.slice(0, keys.length - 1) });\n                    }\n                    else {\n                        this.contextAwaitingJobs.push({ job: valueJobCb, keys });\n                    }\n                }\n                else {\n                    // Make sure that our value jobs are chained synchronously\n                    this.lastOnValueJob = this.lastOnValueJob.then(valueJobCb);\n                }\n                // Execute all buffered jobs on deeper levels\n                if (!this.parsingContext.streamingProfile && depth === 0) {\n                    this.lastOnValueJob = this.lastOnValueJob\n                        .then(() => this.executeBufferedJobs());\n                }\n            }\n        };\n        this.jsonParser.onError = (error) => {\n            this.emit('error', error);\n        };\n    }\n    /**\n     * Check if the parser is currently parsing an element that is part of an @context entry.\n     * @param {number} depth A depth.\n     * @return {boolean} A boolean.\n     */\n    isParsingContextInner(depth) {\n        for (let i = depth; i > 0; i--) {\n            if (this.jsonParser.stack[i - 1].key === '@context') {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Execute all buffered jobs.\n     * @return {Promise<void>} A promise resolving if all jobs are finished.\n     */\n    async executeBufferedJobs() {\n        // Handle context jobs\n        for (const jobs of this.contextJobs) {\n            if (jobs) {\n                for (const job of jobs) {\n                    await job();\n                }\n            }\n        }\n        // Clear the keyword cache.\n        this.parsingContext.unaliasedKeywordCacheStack.splice(0);\n        // Handle non-context jobs\n        for (const job of this.contextAwaitingJobs) {\n            // Check if we have a type (with possible type-scoped context) that should be handled before.\n            // We check all possible parent nodes for the current job, from root to leaves.\n            if (this.typeJobs.length > 0) {\n                // First collect all applicable type jobs\n                const applicableTypeJobs = [];\n                const applicableTypeJobIds = [];\n                for (let i = 0; i < this.typeJobs.length; i++) {\n                    const typeJob = this.typeJobs[i];\n                    if (Util_1.Util.isPrefixArray(typeJob.keys, job.keys)) {\n                        applicableTypeJobs.push(typeJob);\n                        applicableTypeJobIds.push(i);\n                    }\n                }\n                // Next, sort the jobs from short to long key length (to ensure types higher up in the tree to be handled first)\n                const sortedTypeJobs = applicableTypeJobs.sort((job1, job2) => job1.keys.length - job2.keys.length);\n                // Finally, execute the jobs in order\n                for (const typeJob of sortedTypeJobs) {\n                    await typeJob.job();\n                }\n                // Remove the executed type jobs\n                // Sort first, so we can efficiently splice\n                const sortedApplicableTypeJobIds = applicableTypeJobIds.sort().reverse();\n                for (const jobId of sortedApplicableTypeJobIds) {\n                    this.typeJobs.splice(jobId, 1);\n                }\n            }\n            await job.job();\n        }\n    }\n}\nexports.JsonLdParser = JsonLdParser;\nJsonLdParser.DEFAULT_PROCESSING_MODE = '1.1';\nJsonLdParser.ENTRY_HANDLERS = [\n    new EntryHandlerArrayValue_1.EntryHandlerArrayValue(),\n    new EntryHandlerKeywordContext_1.EntryHandlerKeywordContext(),\n    new EntryHandlerKeywordId_1.EntryHandlerKeywordId(),\n    new EntryHandlerKeywordIncluded_1.EntryHandlerKeywordIncluded(),\n    new EntryHandlerKeywordGraph_1.EntryHandlerKeywordGraph(),\n    new EntryHandlerKeywordNest_1.EntryHandlerKeywordNest(),\n    new EntryHandlerKeywordType_1.EntryHandlerKeywordType(),\n    new EntryHandlerKeywordValue_1.EntryHandlerKeywordValue(),\n    new EntryHandlerContainer_1.EntryHandlerContainer(),\n    new EntryHandlerKeywordUnknownFallback_1.EntryHandlerKeywordUnknownFallback(),\n    new EntryHandlerPredicate_1.EntryHandlerPredicate(),\n    new EntryHandlerInvalidFallback_1.EntryHandlerInvalidFallback(),\n];\n//# sourceMappingURL=JsonLdParser.js.map","/*global Buffer*/\n// Named constants with unique integer values\nvar C = {};\n// Tokens\nvar LEFT_BRACE    = C.LEFT_BRACE    = 0x1;\nvar RIGHT_BRACE   = C.RIGHT_BRACE   = 0x2;\nvar LEFT_BRACKET  = C.LEFT_BRACKET  = 0x3;\nvar RIGHT_BRACKET = C.RIGHT_BRACKET = 0x4;\nvar COLON         = C.COLON         = 0x5;\nvar COMMA         = C.COMMA         = 0x6;\nvar TRUE          = C.TRUE          = 0x7;\nvar FALSE         = C.FALSE         = 0x8;\nvar NULL          = C.NULL          = 0x9;\nvar STRING        = C.STRING        = 0xa;\nvar NUMBER        = C.NUMBER        = 0xb;\n// Tokenizer States\nvar START   = C.START   = 0x11;\nvar STOP    = C.STOP    = 0x12;\nvar TRUE1   = C.TRUE1   = 0x21;\nvar TRUE2   = C.TRUE2   = 0x22;\nvar TRUE3   = C.TRUE3   = 0x23;\nvar FALSE1  = C.FALSE1  = 0x31;\nvar FALSE2  = C.FALSE2  = 0x32;\nvar FALSE3  = C.FALSE3  = 0x33;\nvar FALSE4  = C.FALSE4  = 0x34;\nvar NULL1   = C.NULL1   = 0x41;\nvar NULL2   = C.NULL2   = 0x42;\nvar NULL3   = C.NULL3   = 0x43;\nvar NUMBER1 = C.NUMBER1 = 0x51;\nvar NUMBER3 = C.NUMBER3 = 0x53;\nvar STRING1 = C.STRING1 = 0x61;\nvar STRING2 = C.STRING2 = 0x62;\nvar STRING3 = C.STRING3 = 0x63;\nvar STRING4 = C.STRING4 = 0x64;\nvar STRING5 = C.STRING5 = 0x65;\nvar STRING6 = C.STRING6 = 0x66;\n// Parser States\nvar VALUE   = C.VALUE   = 0x71;\nvar KEY     = C.KEY     = 0x72;\n// Parser Modes\nvar OBJECT  = C.OBJECT  = 0x81;\nvar ARRAY   = C.ARRAY   = 0x82;\n// Character constants\nvar BACK_SLASH =      \"\\\\\".charCodeAt(0);\nvar FORWARD_SLASH =   \"\\/\".charCodeAt(0);\nvar BACKSPACE =       \"\\b\".charCodeAt(0);\nvar FORM_FEED =       \"\\f\".charCodeAt(0);\nvar NEWLINE =         \"\\n\".charCodeAt(0);\nvar CARRIAGE_RETURN = \"\\r\".charCodeAt(0);\nvar TAB =             \"\\t\".charCodeAt(0);\n\nvar STRING_BUFFER_SIZE = 64 * 1024;\n\nfunction Parser() {\n  this.tState = START;\n  this.value = undefined;\n\n  this.string = undefined; // string data\n  this.stringBuffer = Buffer.alloc ? Buffer.alloc(STRING_BUFFER_SIZE) : new Buffer(STRING_BUFFER_SIZE);\n  this.stringBufferOffset = 0;\n  this.unicode = undefined; // unicode escapes\n  this.highSurrogate = undefined;\n\n  this.key = undefined;\n  this.mode = undefined;\n  this.stack = [];\n  this.state = VALUE;\n  this.bytes_remaining = 0; // number of bytes remaining in multi byte utf8 char to read after split boundary\n  this.bytes_in_sequence = 0; // bytes in multi byte utf8 char to read\n  this.temp_buffs = { \"2\": new Buffer(2), \"3\": new Buffer(3), \"4\": new Buffer(4) }; // for rebuilding chars split before boundary is reached\n\n  // Stream offset\n  this.offset = -1;\n}\n\n// Slow code to string converter (only used when throwing syntax errors)\nParser.toknam = function (code) {\n  var keys = Object.keys(C);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (C[key] === code) { return key; }\n  }\n  return code && (\"0x\" + code.toString(16));\n};\n\nvar proto = Parser.prototype;\nproto.onError = function (err) { throw err; };\nproto.charError = function (buffer, i) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + JSON.stringify(String.fromCharCode(buffer[i])) + \" at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n};\nproto.appendStringChar = function (char) {\n  if (this.stringBufferOffset >= STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8');\n    this.stringBufferOffset = 0;\n  }\n\n  this.stringBuffer[this.stringBufferOffset++] = char;\n};\nproto.appendStringBuf = function (buf, start, end) {\n  var size = buf.length;\n  if (typeof start === 'number') {\n    if (typeof end === 'number') {\n      if (end < 0) {\n        // adding a negative end decreeses the size\n        size = buf.length - start + end;\n      } else {\n        size = end - start;\n      }\n    } else {\n      size = buf.length - start;\n    }\n  }\n\n  if (size < 0) {\n    size = 0;\n  }\n\n  if (this.stringBufferOffset + size > STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n    this.stringBufferOffset = 0;\n  }\n\n  buf.copy(this.stringBuffer, this.stringBufferOffset, start, end);\n  this.stringBufferOffset += size;\n};\nproto.write = function (buffer) {\n  if (typeof buffer === \"string\") buffer = new Buffer(buffer);\n  var n;\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    if (this.tState === START){\n      n = buffer[i];\n      this.offset++;\n      if(n === 0x7b){ this.onToken(LEFT_BRACE, \"{\"); // {\n      }else if(n === 0x7d){ this.onToken(RIGHT_BRACE, \"}\"); // }\n      }else if(n === 0x5b){ this.onToken(LEFT_BRACKET, \"[\"); // [\n      }else if(n === 0x5d){ this.onToken(RIGHT_BRACKET, \"]\"); // ]\n      }else if(n === 0x3a){ this.onToken(COLON, \":\");  // :\n      }else if(n === 0x2c){ this.onToken(COMMA, \",\"); // ,\n      }else if(n === 0x74){ this.tState = TRUE1;  // t\n      }else if(n === 0x66){ this.tState = FALSE1;  // f\n      }else if(n === 0x6e){ this.tState = NULL1; // n\n      }else if(n === 0x22){ // \"\n        this.string = \"\";\n        this.stringBufferOffset = 0;\n        this.tState = STRING1;\n      }else if(n === 0x2d){ this.string = \"-\"; this.tState = NUMBER1; // -\n      }else{\n        if (n >= 0x30 && n < 0x40) { // 1-9\n          this.string = String.fromCharCode(n); this.tState = NUMBER3;\n        } else if (n === 0x20 || n === 0x09 || n === 0x0a || n === 0x0d) {\n          // whitespace\n        } else {\n          return this.charError(buffer, i);\n        }\n      }\n    }else if (this.tState === STRING1){ // After open quote\n      n = buffer[i]; // get current byte from buffer\n      // check for carry over of a multi byte char split between data chunks\n      // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration\n      if (this.bytes_remaining > 0) {\n        for (var j = 0; j < this.bytes_remaining; j++) {\n          this.temp_buffs[this.bytes_in_sequence][this.bytes_in_sequence - this.bytes_remaining + j] = buffer[j];\n        }\n\n        this.appendStringBuf(this.temp_buffs[this.bytes_in_sequence]);\n        this.bytes_in_sequence = this.bytes_remaining = 0;\n        i = i + j - 1;\n      } else if (this.bytes_remaining === 0 && n >= 128) { // else if no remainder bytes carried over, parse multi byte (>=128) chars one at a time\n        if (n <= 193 || n > 244) {\n          return this.onError(new Error(\"Invalid UTF-8 character at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n        }\n        if ((n >= 194) && (n <= 223)) this.bytes_in_sequence = 2;\n        if ((n >= 224) && (n <= 239)) this.bytes_in_sequence = 3;\n        if ((n >= 240) && (n <= 244)) this.bytes_in_sequence = 4;\n        if ((this.bytes_in_sequence + i) > buffer.length) { // if bytes needed to complete char fall outside buffer length, we have a boundary split\n          for (var k = 0; k <= (buffer.length - 1 - i); k++) {\n            this.temp_buffs[this.bytes_in_sequence][k] = buffer[i + k]; // fill temp buffer of correct size with bytes available in this chunk\n          }\n          this.bytes_remaining = (i + this.bytes_in_sequence) - buffer.length;\n          i = buffer.length - 1;\n        } else {\n          this.appendStringBuf(buffer, i, i + this.bytes_in_sequence);\n          i = i + this.bytes_in_sequence - 1;\n        }\n      } else if (n === 0x22) {\n        this.tState = START;\n        this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n        this.stringBufferOffset = 0;\n        this.onToken(STRING, this.string);\n        this.offset += Buffer.byteLength(this.string, 'utf8') + 1;\n        this.string = undefined;\n      }\n      else if (n === 0x5c) {\n        this.tState = STRING2;\n      }\n      else if (n >= 0x20) { this.appendStringChar(n); }\n      else {\n          return this.charError(buffer, i);\n      }\n    }else if (this.tState === STRING2){ // After backslash\n      n = buffer[i];\n      if(n === 0x22){ this.appendStringChar(n); this.tState = STRING1;\n      }else if(n === 0x5c){ this.appendStringChar(BACK_SLASH); this.tState = STRING1;\n      }else if(n === 0x2f){ this.appendStringChar(FORWARD_SLASH); this.tState = STRING1;\n      }else if(n === 0x62){ this.appendStringChar(BACKSPACE); this.tState = STRING1;\n      }else if(n === 0x66){ this.appendStringChar(FORM_FEED); this.tState = STRING1;\n      }else if(n === 0x6e){ this.appendStringChar(NEWLINE); this.tState = STRING1;\n      }else if(n === 0x72){ this.appendStringChar(CARRIAGE_RETURN); this.tState = STRING1;\n      }else if(n === 0x74){ this.appendStringChar(TAB); this.tState = STRING1;\n      }else if(n === 0x75){ this.unicode = \"\"; this.tState = STRING3;\n      }else{\n        return this.charError(buffer, i);\n      }\n    }else if (this.tState === STRING3 || this.tState === STRING4 || this.tState === STRING5 || this.tState === STRING6){ // unicode hex codes\n      n = buffer[i];\n      // 0-9 A-F a-f\n      if ((n >= 0x30 && n < 0x40) || (n > 0x40 && n <= 0x46) || (n > 0x60 && n <= 0x66)) {\n        this.unicode += String.fromCharCode(n);\n        if (this.tState++ === STRING6) {\n          var intVal = parseInt(this.unicode, 16);\n          this.unicode = undefined;\n          if (this.highSurrogate !== undefined && intVal >= 0xDC00 && intVal < (0xDFFF + 1)) { //<56320,57343> - lowSurrogate\n            this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate, intVal)));\n            this.highSurrogate = undefined;\n          } else if (this.highSurrogate === undefined && intVal >= 0xD800 && intVal < (0xDBFF + 1)) { //<55296,56319> - highSurrogate\n            this.highSurrogate = intVal;\n          } else {\n            if (this.highSurrogate !== undefined) {\n              this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate)));\n              this.highSurrogate = undefined;\n            }\n            this.appendStringBuf(new Buffer(String.fromCharCode(intVal)));\n          }\n          this.tState = STRING1;\n        }\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NUMBER1 || this.tState === NUMBER3) {\n        n = buffer[i];\n\n        switch (n) {\n          case 0x30: // 0\n          case 0x31: // 1\n          case 0x32: // 2\n          case 0x33: // 3\n          case 0x34: // 4\n          case 0x35: // 5\n          case 0x36: // 6\n          case 0x37: // 7\n          case 0x38: // 8\n          case 0x39: // 9\n          case 0x2e: // .\n          case 0x65: // e\n          case 0x45: // E\n          case 0x2b: // +\n          case 0x2d: // -\n            this.string += String.fromCharCode(n);\n            this.tState = NUMBER3;\n            break;\n          default:\n            this.tState = START;\n            var result = Number(this.string);\n\n            if (isNaN(result)){\n              return this.charError(buffer, i);\n            }\n\n            if ((this.string.match(/[0-9]+/) == this.string) && (result.toString() != this.string)) {\n              // Long string of digits which is an ID string and not valid and/or safe JavaScript integer Number\n              this.onToken(STRING, this.string);\n            } else {\n              this.onToken(NUMBER, result);\n            }\n\n            this.offset += this.string.length - 1;\n            this.string = undefined;\n            i--;\n            break;\n        }\n    }else if (this.tState === TRUE1){ // r\n      if (buffer[i] === 0x72) { this.tState = TRUE2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === TRUE2){ // u\n      if (buffer[i] === 0x75) { this.tState = TRUE3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === TRUE3){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(TRUE, true); this.offset+= 3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE1){ // a\n      if (buffer[i] === 0x61) { this.tState = FALSE2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE2){ // l\n      if (buffer[i] === 0x6c) { this.tState = FALSE3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE3){ // s\n      if (buffer[i] === 0x73) { this.tState = FALSE4; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE4){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(FALSE, false); this.offset+= 4; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL1){ // u\n      if (buffer[i] === 0x75) { this.tState = NULL2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL2){ // l\n      if (buffer[i] === 0x6c) { this.tState = NULL3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL3){ // l\n      if (buffer[i] === 0x6c) { this.tState = START; this.onToken(NULL, null); this.offset += 3; }\n      else { return this.charError(buffer, i); }\n    }\n  }\n};\nproto.onToken = function (token, value) {\n  // Override this to get events\n};\n\nproto.parseError = function (token, value) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + Parser.toknam(token) + (value ? (\"(\" + JSON.stringify(value) + \")\") : \"\") + \" in state \" + Parser.toknam(this.state)));\n};\nproto.push = function () {\n  this.stack.push({value: this.value, key: this.key, mode: this.mode});\n};\nproto.pop = function () {\n  var value = this.value;\n  var parent = this.stack.pop();\n  this.value = parent.value;\n  this.key = parent.key;\n  this.mode = parent.mode;\n  this.emit(value);\n  if (!this.mode) { this.state = VALUE; }\n};\nproto.emit = function (value) {\n  if (this.mode) { this.state = COMMA; }\n  this.onValue(value);\n};\nproto.onValue = function (value) {\n  // Override me\n};\nproto.onToken = function (token, value) {\n  if(this.state === VALUE){\n    if(token === STRING || token === NUMBER || token === TRUE || token === FALSE || token === NULL){\n      if (this.value) {\n        this.value[this.key] = value;\n      }\n      this.emit(value);\n    }else if(token === LEFT_BRACE){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = {};\n      } else {\n        this.value = {};\n      }\n      this.key = undefined;\n      this.state = KEY;\n      this.mode = OBJECT;\n    }else if(token === LEFT_BRACKET){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = [];\n      } else {\n        this.value = [];\n      }\n      this.key = 0;\n      this.mode = ARRAY;\n      this.state = VALUE;\n    }else if(token === RIGHT_BRACE){\n      if (this.mode === OBJECT) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    }else if(token === RIGHT_BRACKET){\n      if (this.mode === ARRAY) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    }else{\n      return this.parseError(token, value);\n    }\n  }else if(this.state === KEY){\n    if (token === STRING) {\n      this.key = value;\n      this.state = COLON;\n    } else if (token === RIGHT_BRACE) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  }else if(this.state === COLON){\n    if (token === COLON) { this.state = VALUE; }\n    else { return this.parseError(token, value); }\n  }else if(this.state === COMMA){\n    if (token === COMMA) {\n      if (this.mode === ARRAY) { this.key++; this.state = VALUE; }\n      else if (this.mode === OBJECT) { this.state = KEY; }\n\n    } else if (token === RIGHT_BRACKET && this.mode === ARRAY || token === RIGHT_BRACE && this.mode === OBJECT) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  }else{\n    return this.parseError(token, value);\n  }\n};\n\nParser.C = C;\n\nmodule.exports = Parser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordGraph = void 0;\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @graph entries.\n */\nclass EntryHandlerKeywordGraph extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@graph');\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        // The current identifier identifies a graph for the deeper level.\n        parsingContext.graphStack[depth + 1] = true;\n    }\n}\nexports.EntryHandlerKeywordGraph = EntryHandlerKeywordGraph;\n//# sourceMappingURL=EntryHandlerKeywordGraph.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FetchDocumentLoader = void 0;\nrequire(\"cross-fetch/polyfill\");\nconst ErrorCoded_1 = require(\"./ErrorCoded\");\nconst http_link_header_1 = require(\"http-link-header\");\nconst relative_to_absolute_iri_1 = require(\"relative-to-absolute-iri\");\n/**\n * Loads documents via the fetch API.\n */\nclass FetchDocumentLoader {\n    constructor(fetcher) {\n        this.fetcher = fetcher;\n    }\n    async load(url) {\n        const response = await (this.fetcher || fetch)(url, { headers: new Headers({ accept: 'application/ld+json' }) });\n        if (response.ok && response.headers) {\n            let mediaType = response.headers.get('Content-Type');\n            if (mediaType) {\n                const colonPos = mediaType.indexOf(';');\n                if (colonPos > 0) {\n                    mediaType = mediaType.substr(0, colonPos);\n                }\n            }\n            if (mediaType === 'application/ld+json') {\n                // Return JSON-LD if proper content type was returned\n                return (await response.json());\n            }\n            else {\n                // Check for alternate link for a non-JSON-LD response\n                if (response.headers.has('Link')) {\n                    let alternateUrl;\n                    response.headers.forEach((value, key) => {\n                        if (key === 'link') {\n                            const linkHeader = (0, http_link_header_1.parse)(value);\n                            for (const link of linkHeader.get('type', 'application/ld+json')) {\n                                if (link.rel === 'alternate') {\n                                    if (alternateUrl) {\n                                        throw new Error('Multiple JSON-LD alternate links were found on ' + url);\n                                    }\n                                    alternateUrl = (0, relative_to_absolute_iri_1.resolve)(link.uri, url);\n                                }\n                            }\n                        }\n                    });\n                    if (alternateUrl) {\n                        return this.load(alternateUrl);\n                    }\n                }\n                throw new ErrorCoded_1.ErrorCoded(`Unsupported JSON-LD media type ${mediaType}`, ErrorCoded_1.ERROR_CODES.LOADING_DOCUMENT_FAILED);\n            }\n        }\n        else {\n            throw new Error(response.statusText || `Status code: ${response.status}`);\n        }\n    }\n}\nexports.FetchDocumentLoader = FetchDocumentLoader;\n//# sourceMappingURL=FetchDocumentLoader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordType = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst Util_1 = require(\"../../Util\");\nconst EntryHandlerPredicate_1 = require(\"../EntryHandlerPredicate\");\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @graph entries.\n */\nclass EntryHandlerKeywordType extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@type');\n    }\n    isStackProcessor() {\n        return false;\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        const keyOriginal = keys[depth];\n        // The current identifier identifies an rdf:type predicate.\n        // But we only emit it once the node closes,\n        // as it's possible that the @type is used to identify the datatype of a literal, which we ignore here.\n        const context = await parsingContext.getContext(keys);\n        const predicate = util.rdfType;\n        const reverse = Util_1.Util.isPropertyReverse(context, keyOriginal, await util.unaliasKeywordParent(keys, depth));\n        // Handle multiple values if the value is an array\n        const elements = Array.isArray(value) ? value : [value];\n        for (const element of elements) {\n            if (typeof element !== 'string') {\n                parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found illegal @type '${element}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_TYPE_VALUE));\n            }\n            const type = util.createVocabOrBaseTerm(context, element);\n            if (type) {\n                await EntryHandlerPredicate_1.EntryHandlerPredicate.handlePredicateObject(parsingContext, util, keys, depth, predicate, type, reverse);\n            }\n        }\n        // Collect type-scoped contexts if they exist\n        let scopedContext = Promise.resolve(context);\n        let hasTypedScopedContext = false;\n        for (const element of elements.sort()) { // Spec requires lexicographical ordering\n            const typeContext = Util_1.Util.getContextValue(context, '@context', element, null);\n            if (typeContext) {\n                hasTypedScopedContext = true;\n                scopedContext = scopedContext.then((c) => parsingContext.parseContext(typeContext, c.getContextRaw()));\n            }\n        }\n        // Error if an out-of-order type-scoped context was found when support is not enabled.\n        if (parsingContext.streamingProfile\n            && (hasTypedScopedContext || !parsingContext.streamingProfileAllowOutOfOrderPlainType)\n            && (parsingContext.processingStack[depth] || parsingContext.idStack[depth])) {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded('Found an out-of-order type-scoped context, while streaming is enabled.' +\n                '(disable `streamingProfile`)', jsonld_context_parser_1.ERROR_CODES.INVALID_STREAMING_KEY_ORDER));\n        }\n        // If at least least one type-scoped context applies, set them in the tree.\n        if (hasTypedScopedContext) {\n            // Do not propagate by default\n            scopedContext = scopedContext.then((c) => {\n                if (!('@propagate' in c.getContextRaw())) {\n                    c.getContextRaw()['@propagate'] = false;\n                }\n                // Set the original context at this depth as a fallback\n                // This is needed when a context was already defined at the given depth,\n                // and this context needs to remain accessible from child nodes when propagation is disabled.\n                if (c.getContextRaw()['@propagate'] === false) {\n                    c.getContextRaw()['@__propagateFallback'] = context.getContextRaw();\n                }\n                return c;\n            });\n            // Set the new context in the context tree\n            parsingContext.contextTree.setContext(keys.slice(0, keys.length - 1), scopedContext);\n        }\n        // Flag that type has been processed at this depth\n        parsingContext.processingType[depth] = true;\n    }\n}\nexports.EntryHandlerKeywordType = EntryHandlerKeywordType;\n//# sourceMappingURL=EntryHandlerKeywordType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Literal = void 0;\nconst NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nclass Literal {\n    constructor(value, languageOrDatatype) {\n        this.termType = 'Literal';\n        this.value = value;\n        if (typeof languageOrDatatype === 'string') {\n            this.language = languageOrDatatype;\n            this.datatype = Literal.RDF_LANGUAGE_STRING;\n        }\n        else if (languageOrDatatype) {\n            this.language = '';\n            this.datatype = languageOrDatatype;\n        }\n        else {\n            this.language = '';\n            this.datatype = Literal.XSD_STRING;\n        }\n    }\n    equals(other) {\n        return !!other && other.termType === 'Literal' && other.value === this.value &&\n            other.language === this.language && this.datatype.equals(other.datatype);\n    }\n}\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n//# sourceMappingURL=Literal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerHandlerLanguage = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\n/**\n * Container handler for @language.\n *\n * It assumes that the current key is the language of the current value.\n * This will add this value to the parent node.\n */\nclass ContainerHandlerLanguage {\n    canCombineWithGraph() {\n        return false;\n    }\n    async handle(containers, parsingContext, util, keys, value, depth) {\n        const language = await util.getContainerKey(keys[depth], keys, depth);\n        if (Array.isArray(value)) {\n            // No type-checking needed, will be handled on each value when this handler is called recursively.\n            value = value.map((subValue) => ({ '@value': subValue, '@language': language }));\n        }\n        else {\n            if (typeof value !== 'string') {\n                throw new jsonld_context_parser_1.ErrorCoded(`Got invalid language map value, got '${JSON.stringify(value)}', but expected string`, jsonld_context_parser_1.ERROR_CODES.INVALID_LANGUAGE_MAP_VALUE);\n            }\n            value = { '@value': value, '@language': language };\n        }\n        await parsingContext.newOnValueJob(keys.slice(0, keys.length - 1), value, depth - 1, true);\n        parsingContext.emittedStack[depth] = false; // We have emitted a level higher\n    }\n}\nexports.ContainerHandlerLanguage = ContainerHandlerLanguage;\n//# sourceMappingURL=ContainerHandlerLanguage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerContainer = void 0;\nconst ContainerHandlerIdentifier_1 = require(\"../containerhandler/ContainerHandlerIdentifier\");\nconst ContainerHandlerIndex_1 = require(\"../containerhandler/ContainerHandlerIndex\");\nconst ContainerHandlerLanguage_1 = require(\"../containerhandler/ContainerHandlerLanguage\");\nconst ContainerHandlerType_1 = require(\"../containerhandler/ContainerHandlerType\");\nconst Util_1 = require(\"../Util\");\n/**\n * Handles values that are part of a container type (like @index),\n * as specified by {@link IContainerHandler}.\n */\nclass EntryHandlerContainer {\n    /**\n     * Check fit the given container is a simple @graph container.\n     * Concretely, it will check if no @index or @id is active as well.\n     * @param containers A container hash.\n     */\n    static isSimpleGraphContainer(containers) {\n        return '@graph' in containers\n            && (('@set' in containers && Object.keys(containers).length === 2) || Object.keys(containers).length === 1);\n    }\n    /**\n     * Check fit the given container is a complex @graph container.\n     * Concretely, it will check if @index or @id is active as well next to @graph.\n     * @param containers A container hash.\n     */\n    static isComplexGraphContainer(containers) {\n        return '@graph' in containers\n            && (('@set' in containers && Object.keys(containers).length > 2)\n                || (!('@set' in containers) && Object.keys(containers).length > 1));\n    }\n    /**\n     * Create an graph container index that can be used for identifying a graph term inside the graphContainerTermStack.\n     * @param containers The applicable containers.\n     * @param depth The container depth.\n     * @param keys The array of keys.\n     * @return The graph index.\n     */\n    static getContainerGraphIndex(containers, depth, keys) {\n        let isSimpleGraphContainer = EntryHandlerContainer.isSimpleGraphContainer(containers);\n        let index = '';\n        for (let i = depth; i < keys.length; i++) {\n            if (!isSimpleGraphContainer || typeof keys[i] === 'number') {\n                index += ':' + keys[i];\n            }\n            // Only allow a second 'real' key if in a non-simple graph container.\n            if (!isSimpleGraphContainer && typeof keys[i] !== 'number') {\n                isSimpleGraphContainer = true;\n            }\n        }\n        return index;\n    }\n    /**\n     * Return the applicable container type at the given depth.\n     *\n     * This will ignore any arrays in the key chain.\n     *\n     * @param {ParsingContext} parsingContext A parsing context.\n     * @param {any[]} keys The array of keys.\n     * @param {number} depth The current depth.\n     * @return {Promise<{ containers: {[typeName: string]: boolean}, depth: number, fallback: boolean }>}\n     *          All applicable containers for the given depth,\n     *          the `depth` of the container root (can change when arrays are in the key chain),\n     *          and the `fallback` flag that indicates if the default container type was returned\n     *            (i.e., no dedicated container type is defined).\n     */\n    static async getContainerHandler(parsingContext, keys, depth) {\n        const fallback = {\n            containers: { '@set': true },\n            depth,\n            fallback: true,\n        };\n        // A flag that is enabled when @graph container should be tested in next iteration\n        let checkGraphContainer = false;\n        // Iterate from deeper to higher\n        const context = await parsingContext.getContext(keys, 2);\n        for (let i = depth - 1; i >= 0; i--) {\n            if (typeof keys[i] !== 'number') { // Skip array keys\n                // @graph containers without any other types are one level less deep, and require special handling\n                const containersSelf = Util_1.Util.getContextValue(context, '@container', keys[i], false);\n                if (containersSelf && EntryHandlerContainer.isSimpleGraphContainer(containersSelf)) {\n                    return {\n                        containers: containersSelf,\n                        depth: i + 1,\n                        fallback: false,\n                    };\n                }\n                const containersParent = Util_1.Util.getContextValue(context, '@container', keys[i - 1], false);\n                if (!containersParent) { // If we have the fallback container value\n                    if (checkGraphContainer) {\n                        // Return false if we were already expecting a @graph-@id of @graph-@index container\n                        return fallback;\n                    }\n                    // Check parent-parent, we may be in a @graph-@id of @graph-@index container, which have two levels\n                    checkGraphContainer = true;\n                }\n                else {\n                    // We had an invalid container next iteration, so we now have to check if we were in an @graph container\n                    const graphContainer = '@graph' in containersParent;\n                    // We're in a regular container\n                    for (const containerHandleName in EntryHandlerContainer.CONTAINER_HANDLERS) {\n                        if (containersParent[containerHandleName]) {\n                            if (graphContainer) {\n                                // Only accept graph containers if their combined handlers can handle them.\n                                if (EntryHandlerContainer.CONTAINER_HANDLERS[containerHandleName].canCombineWithGraph()) {\n                                    return {\n                                        containers: containersParent,\n                                        depth: i,\n                                        fallback: false,\n                                    };\n                                }\n                                else {\n                                    return fallback;\n                                }\n                            }\n                            else {\n                                // Only accept if we were not expecting a @graph-@id of @graph-@index container\n                                if (checkGraphContainer) {\n                                    return fallback;\n                                }\n                                else {\n                                    return {\n                                        containers: containersParent,\n                                        depth: i,\n                                        fallback: false,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                    // Fail if no valid container handlers were found\n                    return fallback;\n                }\n            }\n        }\n        return fallback;\n    }\n    /**\n     * Check if we are handling a value at the given depth\n     * that is part of something that should be handled as a container,\n     * AND if this container should be buffered, so that it can be handled by a dedicated container handler.\n     *\n     * For instance, any container with @graph will NOT be buffered.\n     *\n     * This will ignore any arrays in the key chain.\n     *\n     * @param {ParsingContext} parsingContext A parsing context.\n     * @param {any[]} keys The array of keys.\n     * @param {number} depth The current depth.\n     * @return {Promise<boolean>} If we are in the scope of a container handler.\n     */\n    static async isBufferableContainerHandler(parsingContext, keys, depth) {\n        const handler = await EntryHandlerContainer.getContainerHandler(parsingContext, keys, depth);\n        return !handler.fallback && !('@graph' in handler.containers);\n    }\n    isPropertyHandler() {\n        return false;\n    }\n    isStackProcessor() {\n        return true;\n    }\n    async validate(parsingContext, util, keys, depth, inProperty) {\n        return !!await this.test(parsingContext, util, null, keys, depth);\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        const containers = Util_1.Util.getContextValueContainer(await parsingContext.getContext(keys, 2), keys[depth - 1]);\n        for (const containerName in EntryHandlerContainer.CONTAINER_HANDLERS) {\n            if (containers[containerName]) {\n                return {\n                    containers,\n                    handler: EntryHandlerContainer.CONTAINER_HANDLERS[containerName],\n                };\n            }\n        }\n        return null;\n    }\n    async handle(parsingContext, util, key, keys, value, depth, testResult) {\n        return testResult.handler.handle(testResult.containers, parsingContext, util, keys, value, depth);\n    }\n}\nexports.EntryHandlerContainer = EntryHandlerContainer;\nEntryHandlerContainer.CONTAINER_HANDLERS = {\n    '@id': new ContainerHandlerIdentifier_1.ContainerHandlerIdentifier(),\n    '@index': new ContainerHandlerIndex_1.ContainerHandlerIndex(),\n    '@language': new ContainerHandlerLanguage_1.ContainerHandlerLanguage(),\n    '@type': new ContainerHandlerType_1.ContainerHandlerType(),\n};\n//# sourceMappingURL=EntryHandlerContainer.js.map","const rdf = require('@rdfjs/data-model')\nconst { JsonLdParser } = require('jsonld-streaming-parser')\nconst { Transform } = require('readable-stream')\n\nconst relativeIriProtocol = 'null:'\n\nfunction termCleanup (factory) {\n  return term => {\n    if (term.termType !== 'NamedNode') {\n      return null\n    }\n\n    if (!term.value.startsWith(relativeIriProtocol)) {\n      return null\n    }\n\n    // remove dummy protocol workaround for relative IRIs\n    return factory.namedNode(term.value.slice(relativeIriProtocol.length))\n  }\n}\n\nfunction quadCleanup (factory) {\n  const cleanup = termCleanup(factory)\n\n  return quad => {\n    const subject = cleanup(quad.subject)\n    const predicate = cleanup(quad.predicate)\n    const object = cleanup(quad.object)\n    const graph = cleanup(quad.graph)\n\n    if (subject || predicate || object || graph) {\n      return factory.quad(\n        subject || quad.subject,\n        predicate || quad.predicate,\n        object || quad.object,\n        graph || quad.graph\n      )\n    }\n\n    return quad\n  }\n}\n\nclass ParserStream {\n  constructor (input, { baseIRI = relativeIriProtocol, context = null, factory = rdf } = {}) {\n    const parser = new JsonLdParser({\n      baseIRI,\n      context,\n      dataFactory: factory,\n      streamingProfile: false\n    })\n\n    input.pipe(parser)\n\n    const cleanup = quadCleanup(factory)\n\n    const transform = new Transform({\n      objectMode: true,\n      transform: (quad, encoding, callback) => {\n        callback(null, cleanup(quad))\n      }\n    })\n\n    parser.on('context', context => {\n      Object.entries(context).forEach(([prefix, iri]) => {\n        transform.emit('prefix', prefix, factory.namedNode(iri))\n      })\n    })\n    parser.on('error', err => transform.destroy(err))\n    parser.pipe(transform)\n\n    return transform\n  }\n}\n\nmodule.exports = ParserStream\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordIncluded = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst EntryHandlerKeyword_1 = require(\"./EntryHandlerKeyword\");\n/**\n * Handles @included entries.\n */\nclass EntryHandlerKeywordIncluded extends EntryHandlerKeyword_1.EntryHandlerKeyword {\n    constructor() {\n        super('@included');\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        if (typeof value !== 'object') {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found illegal @included '${value}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_INCLUDED_VALUE));\n        }\n        const valueUnliased = await util.unaliasKeywords(value, keys, depth, await parsingContext.getContext(keys));\n        if ('@value' in valueUnliased) {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found an illegal @included @value node '${JSON.stringify(value)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_INCLUDED_VALUE));\n        }\n        if ('@list' in valueUnliased) {\n            parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Found an illegal @included @list node '${JSON.stringify(value)}'`, jsonld_context_parser_1.ERROR_CODES.INVALID_INCLUDED_VALUE));\n        }\n        parsingContext.emittedStack[depth] = false;\n    }\n}\nexports.EntryHandlerKeywordIncluded = EntryHandlerKeywordIncluded;\n//# sourceMappingURL=EntryHandlerKeywordIncluded.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerHandlerIndex = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst EntryHandlerPredicate_1 = require(\"../entryhandler/EntryHandlerPredicate\");\nconst Util_1 = require(\"../Util\");\n/**\n * Container handler for @index.\n *\n * This will ignore the current key and add this entry to the parent node.\n */\nclass ContainerHandlerIndex {\n    canCombineWithGraph() {\n        return true;\n    }\n    async handle(containers, parsingContext, util, keys, value, depth) {\n        if (!Array.isArray(value)) {\n            const graphContainer = '@graph' in containers;\n            // Check if the container is a property-based container by checking if there is a valid @index.\n            const context = await parsingContext.getContext(keys);\n            const indexKey = keys[depth - 1];\n            const indexPropertyRaw = Util_1.Util.getContextValueIndex(context, indexKey);\n            if (indexPropertyRaw) {\n                // Validate the @index value\n                if (jsonld_context_parser_1.Util.isPotentialKeyword(indexPropertyRaw)) {\n                    throw new jsonld_context_parser_1.ErrorCoded(`Keywords can not be used as @index value, got: ${indexPropertyRaw}`, jsonld_context_parser_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                }\n                if (typeof indexPropertyRaw !== 'string') {\n                    throw new jsonld_context_parser_1.ErrorCoded(`@index values must be strings, got: ${indexPropertyRaw}`, jsonld_context_parser_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                }\n                // When @index is used, values must be node values, unless @type: @id is defined in the context\n                if (typeof value !== 'object') {\n                    // Error if we don't have @type: @id\n                    if (Util_1.Util.getContextValueType(context, indexKey) !== '@id') {\n                        throw new jsonld_context_parser_1.ErrorCoded(`Property-based index containers require nodes as values or strings with @type: @id, but got: ${value}`, jsonld_context_parser_1.ERROR_CODES.INVALID_VALUE_OBJECT);\n                    }\n                    // Add an @id to the stack, so our expanded @index value can make use of it\n                    const id = util.resourceToTerm(context, value);\n                    if (id) {\n                        parsingContext.idStack[depth + 1] = [id];\n                    }\n                }\n                // Expand the @index value\n                const indexProperty = util.createVocabOrBaseTerm(context, indexPropertyRaw);\n                if (indexProperty) {\n                    const indexValues = await util.valueToTerm(context, indexPropertyRaw, await util.getContainerKey(keys[depth], keys, depth), depth, keys);\n                    if (graphContainer) {\n                        // When we're in a graph container, attach the index to the graph identifier\n                        const graphId = await util.getGraphContainerValue(keys, depth + 1);\n                        for (const indexValue of indexValues) {\n                            parsingContext.emitQuad(depth, util.dataFactory.quad(graphId, indexProperty, indexValue, util.getDefaultGraph()));\n                        }\n                    }\n                    else {\n                        // Otherwise, attach the index to the node identifier\n                        for (const indexValue of indexValues) {\n                            await EntryHandlerPredicate_1.EntryHandlerPredicate.handlePredicateObject(parsingContext, util, keys, depth + 1, indexProperty, indexValue, false);\n                        }\n                    }\n                }\n            }\n            const depthOffset = graphContainer ? 2 : 1;\n            await parsingContext.newOnValueJob(keys.slice(0, keys.length - depthOffset), value, depth - depthOffset, true);\n            // Flush any pending flush buffers\n            await parsingContext.handlePendingContainerFlushBuffers();\n        }\n        parsingContext.emittedStack[depth] = false; // We have emitted a level higher\n    }\n}\nexports.ContainerHandlerIndex = ContainerHandlerIndex;\n//# sourceMappingURL=ContainerHandlerIndex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContextParser = void 0;\nrequire(\"cross-fetch/polyfill\");\nconst relative_to_absolute_iri_1 = require(\"relative-to-absolute-iri\");\nconst ErrorCoded_1 = require(\"./ErrorCoded\");\nconst FetchDocumentLoader_1 = require(\"./FetchDocumentLoader\");\nconst JsonLdContextNormalized_1 = require(\"./JsonLdContextNormalized\");\nconst Util_1 = require(\"./Util\");\n/**\n * Parses JSON-LD contexts.\n */\nclass ContextParser {\n    constructor(options) {\n        options = options || {};\n        this.documentLoader = options.documentLoader || new FetchDocumentLoader_1.FetchDocumentLoader();\n        this.documentCache = {};\n        this.validateContext = !options.skipValidation;\n        this.expandContentTypeToBase = !!options.expandContentTypeToBase;\n        this.remoteContextsDepthLimit = options.remoteContextsDepthLimit || 32;\n        this.redirectSchemaOrgHttps = 'redirectSchemaOrgHttps' in options ? !!options.redirectSchemaOrgHttps : true;\n    }\n    /**\n     * Validate the given @language value.\n     * An error will be thrown if it is invalid.\n     * @param value An @language value.\n     * @param {boolean} strictRange If the string value should be strictly checked against a regex.\n     * @param {string} errorCode The error code to emit on errors.\n     * @return {boolean} If validation passed.\n     *                   Can only be false if strictRange is false and the string value did not pass the regex.\n     */\n    static validateLanguage(value, strictRange, errorCode) {\n        if (typeof value !== 'string') {\n            throw new ErrorCoded_1.ErrorCoded(`The value of an '@language' must be a string, got '${JSON.stringify(value)}'`, errorCode);\n        }\n        if (!Util_1.Util.REGEX_LANGUAGE_TAG.test(value)) {\n            if (strictRange) {\n                throw new ErrorCoded_1.ErrorCoded(`The value of an '@language' must be a valid language tag, got '${JSON.stringify(value)}'`, errorCode);\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Validate the given @direction value.\n     * An error will be thrown if it is invalid.\n     * @param value An @direction value.\n     * @param {boolean} strictValues If the string value should be strictly checked against a regex.\n     * @return {boolean} If validation passed.\n     *                   Can only be false if strictRange is false and the string value did not pass the regex.\n     */\n    static validateDirection(value, strictValues) {\n        if (typeof value !== 'string') {\n            throw new ErrorCoded_1.ErrorCoded(`The value of an '@direction' must be a string, got '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_BASE_DIRECTION);\n        }\n        if (!Util_1.Util.REGEX_DIRECTION_TAG.test(value)) {\n            if (strictValues) {\n                throw new ErrorCoded_1.ErrorCoded(`The value of an '@direction' must be 'ltr' or 'rtl', got '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_BASE_DIRECTION);\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Add an @id term for all @reverse terms.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @return {IJsonLdContextNormalizedRaw} The mutated input context.\n     */\n    idifyReverseTerms(context) {\n        for (const key of Object.keys(context)) {\n            let value = context[key];\n            if (value && typeof value === 'object') {\n                if (value['@reverse'] && !value['@id']) {\n                    if (typeof value['@reverse'] !== 'string' || Util_1.Util.isValidKeyword(value['@reverse'])) {\n                        throw new ErrorCoded_1.ErrorCoded(`Invalid @reverse value, must be absolute IRI or blank node: '${value['@reverse']}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                    }\n                    value = context[key] = Object.assign(Object.assign({}, value), { '@id': value['@reverse'] });\n                    value['@id'] = value['@reverse'];\n                    if (Util_1.Util.isPotentialKeyword(value['@reverse'])) {\n                        delete value['@reverse'];\n                    }\n                    else {\n                        value['@reverse'] = true;\n                    }\n                }\n            }\n        }\n        return context;\n    }\n    /**\n     * Expand all prefixed terms in the given context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {boolean} expandContentTypeToBase If @type inside the context may be expanded\n     *                                          via @base if @vocab is set to null.\n     * @param {string[]} keys Optional set of keys from the context to expand. If left undefined, all\n     * keys in the context will be expanded.\n     */\n    expandPrefixedTerms(context, expandContentTypeToBase, keys) {\n        const contextRaw = context.getContextRaw();\n        for (const key of (keys || Object.keys(contextRaw))) {\n            // Only expand allowed keys\n            if (Util_1.Util.EXPAND_KEYS_BLACKLIST.indexOf(key) < 0 && !Util_1.Util.isReservedInternalKeyword(key)) {\n                // Error if we try to alias a keyword to something else.\n                const keyValue = contextRaw[key];\n                if (Util_1.Util.isPotentialKeyword(key) && Util_1.Util.ALIAS_DOMAIN_BLACKLIST.indexOf(key) >= 0) {\n                    if (key !== '@type' || typeof contextRaw[key] === 'object'\n                        && !(contextRaw[key]['@protected'] || contextRaw[key]['@container'] === '@set')) {\n                        throw new ErrorCoded_1.ErrorCoded(`Keywords can not be aliased to something else.\nTried mapping ${key} to ${JSON.stringify(keyValue)}`, ErrorCoded_1.ERROR_CODES.KEYWORD_REDEFINITION);\n                    }\n                }\n                // Error if we try to alias to an illegal keyword\n                if (Util_1.Util.ALIAS_RANGE_BLACKLIST.indexOf(Util_1.Util.getContextValueId(keyValue)) >= 0) {\n                    throw new ErrorCoded_1.ErrorCoded(`Aliasing to certain keywords is not allowed.\nTried mapping ${key} to ${JSON.stringify(keyValue)}`, ErrorCoded_1.ERROR_CODES.INVALID_KEYWORD_ALIAS);\n                }\n                // Error if this term was marked as prefix as well\n                if (keyValue && Util_1.Util.isPotentialKeyword(Util_1.Util.getContextValueId(keyValue))\n                    && keyValue['@prefix'] === true) {\n                    throw new ErrorCoded_1.ErrorCoded(`Tried to use keyword aliases as prefix: '${key}': '${JSON.stringify(keyValue)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                }\n                // Loop because prefixes might be nested\n                while (Util_1.Util.isPrefixValue(contextRaw[key])) {\n                    const value = contextRaw[key];\n                    let changed = false;\n                    if (typeof value === 'string') {\n                        contextRaw[key] = context.expandTerm(value, true);\n                        changed = changed || value !== contextRaw[key];\n                    }\n                    else {\n                        const id = value['@id'];\n                        const type = value['@type'];\n                        // If @id is missing, don't allow @id to be added if @prefix: true and key not being a valid IRI.\n                        const canAddIdEntry = !('@prefix' in value) || Util_1.Util.isValidIri(key);\n                        if ('@id' in value) {\n                            // Use @id value for expansion\n                            if (id !== undefined && id !== null && typeof id === 'string') {\n                                contextRaw[key] = Object.assign(Object.assign({}, contextRaw[key]), { '@id': context.expandTerm(id, true) });\n                                changed = changed || id !== contextRaw[key]['@id'];\n                            }\n                        }\n                        else if (!Util_1.Util.isPotentialKeyword(key) && canAddIdEntry) {\n                            // Add an explicit @id value based on the expanded key value\n                            const newId = context.expandTerm(key, true);\n                            if (newId !== key) {\n                                // Don't set @id if expansion failed\n                                contextRaw[key] = Object.assign(Object.assign({}, contextRaw[key]), { '@id': newId });\n                                changed = true;\n                            }\n                        }\n                        if (type && typeof type === 'string' && type !== '@vocab'\n                            && (!value['@container'] || !value['@container']['@type'])\n                            && canAddIdEntry) {\n                            // First check @vocab, then fallback to @base\n                            let expandedType = context.expandTerm(type, true);\n                            if (expandContentTypeToBase && type === expandedType) {\n                                expandedType = context.expandTerm(type, false);\n                            }\n                            if (expandedType !== type) {\n                                changed = true;\n                                contextRaw[key] = Object.assign(Object.assign({}, contextRaw[key]), { '@type': expandedType });\n                            }\n                        }\n                    }\n                    if (!changed) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Normalize the @language entries in the given context to lowercase.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {IParseOptions} parseOptions The parsing options.\n     */\n    normalize(context, { processingMode, normalizeLanguageTags }) {\n        // Lowercase language keys in 1.0\n        if (normalizeLanguageTags || processingMode === 1.0) {\n            for (const key of Object.keys(context)) {\n                if (key === '@language' && typeof context[key] === 'string') {\n                    context[key] = context[key].toLowerCase();\n                }\n                else {\n                    const value = context[key];\n                    if (value && typeof value === 'object') {\n                        if (typeof value['@language'] === 'string') {\n                            const lowercase = value['@language'].toLowerCase();\n                            if (lowercase !== value['@language']) {\n                                context[key] = Object.assign(Object.assign({}, value), { '@language': lowercase });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Convert all @container strings and array values to hash-based values.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     */\n    containersToHash(context) {\n        for (const key of Object.keys(context)) {\n            const value = context[key];\n            if (value && typeof value === 'object') {\n                if (typeof value['@container'] === 'string') {\n                    context[key] = Object.assign(Object.assign({}, value), { '@container': { [value['@container']]: true } });\n                }\n                else if (Array.isArray(value['@container'])) {\n                    const newValue = {};\n                    for (const containerValue of value['@container']) {\n                        newValue[containerValue] = true;\n                    }\n                    context[key] = Object.assign(Object.assign({}, value), { '@container': newValue });\n                }\n            }\n        }\n    }\n    /**\n     * Normalize and apply context-level @protected terms onto each term separately.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {number} processingMode The processing mode.\n     */\n    applyScopedProtected(context, { processingMode }, expandOptions) {\n        if (processingMode && processingMode >= 1.1) {\n            if (context['@protected']) {\n                for (const key of Object.keys(context)) {\n                    if (Util_1.Util.isReservedInternalKeyword(key)) {\n                        continue;\n                    }\n                    if (!Util_1.Util.isPotentialKeyword(key) && !Util_1.Util.isTermProtected(context, key)) {\n                        const value = context[key];\n                        if (value && typeof value === 'object') {\n                            if (!('@protected' in context[key])) {\n                                // Mark terms with object values as protected if they don't have an @protected: false annotation\n                                context[key] = Object.assign(Object.assign({}, context[key]), { '@protected': true });\n                            }\n                        }\n                        else {\n                            // Convert string-based term values to object-based values with @protected: true\n                            context[key] = {\n                                '@id': value,\n                                '@protected': true,\n                            };\n                            if (Util_1.Util.isSimpleTermDefinitionPrefix(value, expandOptions)) {\n                                context[key] = Object.assign(Object.assign({}, context[key]), { '@prefix': true });\n                            }\n                        }\n                    }\n                }\n                delete context['@protected'];\n            }\n        }\n    }\n    /**\n     * Check if the given context inheritance does not contain any overrides of protected terms.\n     * @param {IJsonLdContextNormalizedRaw} contextBefore The context that may contain some protected terms.\n     * @param {IJsonLdContextNormalizedRaw} contextAfter A new context that is being applied on the first one.\n     * @param {IExpandOptions} expandOptions Options that are needed for any expansions during this validation.\n     * @param {string[]} keys Optional set of keys from the context to validate. If left undefined, all\n     * keys defined in contextAfter will be checked.\n     */\n    validateKeywordRedefinitions(contextBefore, contextAfter, expandOptions, keys) {\n        for (const key of (keys !== null && keys !== void 0 ? keys : Object.keys(contextAfter))) {\n            if (Util_1.Util.isTermProtected(contextBefore, key)) {\n                // The entry in the context before will always be in object-mode\n                // If the new entry is in string-mode, convert it to object-mode\n                // before checking if it is identical.\n                if (typeof contextAfter[key] === 'string') {\n                    contextAfter[key] = { '@id': contextAfter[key], '@protected': true };\n                }\n                else {\n                    // We modify this deliberately,\n                    // as we need it for the value comparison (they must be identical modulo '@protected')),\n                    // and for the fact that this new value will override the first one.\n                    contextAfter[key] = Object.assign(Object.assign({}, contextAfter[key]), { '@protected': true });\n                }\n                // Error if they are not identical\n                if (!Util_1.Util.deepEqual(contextBefore[key], contextAfter[key])) {\n                    throw new ErrorCoded_1.ErrorCoded(`Attempted to override the protected keyword ${key} from ${JSON.stringify(Util_1.Util.getContextValueId(contextBefore[key]))} to ${JSON.stringify(Util_1.Util.getContextValueId(contextAfter[key]))}`, ErrorCoded_1.ERROR_CODES.PROTECTED_TERM_REDEFINITION);\n                }\n            }\n        }\n    }\n    /**\n     * Validate the entries of the given context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {IParseOptions} options The parse options.\n     */\n    validate(context, { processingMode }) {\n        for (const key of Object.keys(context)) {\n            // Ignore reserved internal keywords.\n            if (Util_1.Util.isReservedInternalKeyword(key)) {\n                continue;\n            }\n            // Do not allow empty term\n            if (key === '') {\n                throw new ErrorCoded_1.ErrorCoded(`The empty term is not allowed, got: '${key}': '${JSON.stringify(context[key])}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n            }\n            const value = context[key];\n            const valueType = typeof value;\n            // First check if the key is a keyword\n            if (Util_1.Util.isPotentialKeyword(key)) {\n                switch (key.substr(1)) {\n                    case 'vocab':\n                        if (value !== null && valueType !== 'string') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @vocab IRI: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_VOCAB_MAPPING);\n                        }\n                        break;\n                    case 'base':\n                        if (value !== null && valueType !== 'string') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @base IRI: ${context[key]}`, ErrorCoded_1.ERROR_CODES.INVALID_BASE_IRI);\n                        }\n                        break;\n                    case 'language':\n                        if (value !== null) {\n                            ContextParser.validateLanguage(value, true, ErrorCoded_1.ERROR_CODES.INVALID_DEFAULT_LANGUAGE);\n                        }\n                        break;\n                    case 'version':\n                        if (value !== null && valueType !== 'number') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @version number: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_VERSION_VALUE);\n                        }\n                        break;\n                    case 'direction':\n                        if (value !== null) {\n                            ContextParser.validateDirection(value, true);\n                        }\n                        break;\n                    case 'propagate':\n                        if (processingMode === 1.0) {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an illegal @propagate keyword: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_ENTRY);\n                        }\n                        if (value !== null && valueType !== 'boolean') {\n                            throw new ErrorCoded_1.ErrorCoded(`Found an invalid @propagate value: ${value}`, ErrorCoded_1.ERROR_CODES.INVALID_PROPAGATE_VALUE);\n                        }\n                        break;\n                }\n                // Don't allow keywords to be overridden\n                if (Util_1.Util.isValidKeyword(key) && Util_1.Util.isValidKeyword(Util_1.Util.getContextValueId(value))) {\n                    throw new ErrorCoded_1.ErrorCoded(`Illegal keyword alias in term value, found: '${key}': '${Util_1.Util\n                        .getContextValueId(value)}'`, ErrorCoded_1.ERROR_CODES.KEYWORD_REDEFINITION);\n                }\n                continue;\n            }\n            // Otherwise, consider the key a term\n            if (value !== null) {\n                switch (valueType) {\n                    case 'string':\n                        if (Util_1.Util.getPrefix(value, context) === key) {\n                            throw new ErrorCoded_1.ErrorCoded(`Detected cyclical IRI mapping in context entry: '${key}': '${JSON\n                                .stringify(value)}'`, ErrorCoded_1.ERROR_CODES.CYCLIC_IRI_MAPPING);\n                        }\n                        if (Util_1.Util.isValidIriWeak(key)) {\n                            if (value === '@type') {\n                                throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to @type, found: '${key}': '${value}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                            }\n                            else if (Util_1.Util.isValidIri(value) && value !== new JsonLdContextNormalized_1.JsonLdContextNormalized(context).expandTerm(key)) {\n                                throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to other IRIs, found: '${key}': '${value}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                            }\n                        }\n                        break;\n                    case 'object':\n                        if (!Util_1.Util.isCompactIri(key) && !('@id' in value)\n                            && (value['@type'] === '@id' ? !context['@base'] : !context['@vocab'])) {\n                            throw new ErrorCoded_1.ErrorCoded(`Missing @id in context entry: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                        }\n                        for (const objectKey of Object.keys(value)) {\n                            const objectValue = value[objectKey];\n                            if (!objectValue) {\n                                continue;\n                            }\n                            switch (objectKey) {\n                                case '@id':\n                                    if (Util_1.Util.isValidKeyword(objectValue)\n                                        && objectValue !== '@type' && objectValue !== '@id' && objectValue !== '@graph' && objectValue !== '@nest') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Illegal keyword alias in term value, found: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                    }\n                                    if (Util_1.Util.isValidIriWeak(key)) {\n                                        if (objectValue === '@type') {\n                                            throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to @type, found: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                        }\n                                        else if (Util_1.Util.isValidIri(objectValue)\n                                            && objectValue !== new JsonLdContextNormalized_1.JsonLdContextNormalized(context).expandTerm(key)) {\n                                            throw new ErrorCoded_1.ErrorCoded(`IRIs can not be mapped to other IRIs, found: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                        }\n                                    }\n                                    if (typeof objectValue !== 'string') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Detected non-string @id in context entry: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n                                    }\n                                    if (Util_1.Util.getPrefix(objectValue, context) === key) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Detected cyclical IRI mapping in context entry: '${key}': '${JSON\n                                            .stringify(value)}'`, ErrorCoded_1.ERROR_CODES.CYCLIC_IRI_MAPPING);\n                                    }\n                                    break;\n                                case '@type':\n                                    if (value['@container'] === '@type' && objectValue !== '@id' && objectValue !== '@vocab') {\n                                        throw new ErrorCoded_1.ErrorCoded(`@container: @type only allows @type: @id or @vocab, but got: '${key}': '${objectValue}'`, ErrorCoded_1.ERROR_CODES.INVALID_TYPE_MAPPING);\n                                    }\n                                    if (typeof objectValue !== 'string') {\n                                        throw new ErrorCoded_1.ErrorCoded(`The value of an '@type' must be a string, got '${JSON.stringify(valueType)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TYPE_MAPPING);\n                                    }\n                                    if (objectValue !== '@id' && objectValue !== '@vocab'\n                                        && (processingMode === 1.0 || objectValue !== '@json')\n                                        && (processingMode === 1.0 || objectValue !== '@none')\n                                        && (objectValue[0] === '_' || !Util_1.Util.isValidIri(objectValue))) {\n                                        throw new ErrorCoded_1.ErrorCoded(`A context @type must be an absolute IRI, found: '${key}': '${objectValue}'`, ErrorCoded_1.ERROR_CODES.INVALID_TYPE_MAPPING);\n                                    }\n                                    break;\n                                case '@reverse':\n                                    if (typeof objectValue === 'string' && value['@id'] && value['@id'] !== objectValue) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Found non-matching @id and @reverse term values in '${key}':\\\n'${objectValue}' and '${value['@id']}'`, ErrorCoded_1.ERROR_CODES.INVALID_REVERSE_PROPERTY);\n                                    }\n                                    if ('@nest' in value) {\n                                        throw new ErrorCoded_1.ErrorCoded(`@nest is not allowed in the reverse property '${key}'`, ErrorCoded_1.ERROR_CODES.INVALID_REVERSE_PROPERTY);\n                                    }\n                                    break;\n                                case '@container':\n                                    if (processingMode === 1.0) {\n                                        if (Object.keys(objectValue).length > 1\n                                            || Util_1.Util.CONTAINERS_1_0.indexOf(Object.keys(objectValue)[0]) < 0) {\n                                            throw new ErrorCoded_1.ErrorCoded(`Invalid term @container for '${key}' ('${Object.keys(objectValue)}') in 1.0, \\\nmust be only one of ${Util_1.Util.CONTAINERS_1_0.join(', ')}`, ErrorCoded_1.ERROR_CODES.INVALID_CONTAINER_MAPPING);\n                                        }\n                                    }\n                                    for (const containerValue of Object.keys(objectValue)) {\n                                        if (containerValue === '@list' && value['@reverse']) {\n                                            throw new ErrorCoded_1.ErrorCoded(`Term value can not be @container: @list and @reverse at the same time on '${key}'`, ErrorCoded_1.ERROR_CODES.INVALID_REVERSE_PROPERTY);\n                                        }\n                                        if (Util_1.Util.CONTAINERS.indexOf(containerValue) < 0) {\n                                            throw new ErrorCoded_1.ErrorCoded(`Invalid term @container for '${key}' ('${containerValue}'), \\\nmust be one of ${Util_1.Util.CONTAINERS.join(', ')}`, ErrorCoded_1.ERROR_CODES.INVALID_CONTAINER_MAPPING);\n                                        }\n                                    }\n                                    break;\n                                case '@language':\n                                    ContextParser.validateLanguage(objectValue, true, ErrorCoded_1.ERROR_CODES.INVALID_LANGUAGE_MAPPING);\n                                    break;\n                                case '@direction':\n                                    ContextParser.validateDirection(objectValue, true);\n                                    break;\n                                case '@prefix':\n                                    if (objectValue !== null && typeof objectValue !== 'boolean') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Found an invalid term @prefix boolean in: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_PREFIX_VALUE);\n                                    }\n                                    if (!('@id' in value) && !Util_1.Util.isValidIri(key)) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Invalid @prefix definition for '${key}' ('${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                                    }\n                                    break;\n                                case '@index':\n                                    if (processingMode === 1.0 || !value['@container'] || !value['@container']['@index']) {\n                                        throw new ErrorCoded_1.ErrorCoded(`Attempt to add illegal key to value object: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                                    }\n                                    break;\n                                case '@nest':\n                                    if (Util_1.Util.isPotentialKeyword(objectValue) && objectValue !== '@nest') {\n                                        throw new ErrorCoded_1.ErrorCoded(`Found an invalid term @nest value in: '${key}': '${JSON.stringify(value)}'`, ErrorCoded_1.ERROR_CODES.INVALID_NEST_VALUE);\n                                    }\n                            }\n                        }\n                        break;\n                    default:\n                        throw new ErrorCoded_1.ErrorCoded(`Found an invalid term value: '${key}': '${value}'`, ErrorCoded_1.ERROR_CODES.INVALID_TERM_DEFINITION);\n                }\n            }\n        }\n    }\n    /**\n     * Apply the @base context entry to the given context under certain circumstances.\n     * @param context A context.\n     * @param options Parsing options.\n     * @param inheritFromParent If the @base value from the parent context can be inherited.\n     * @return The given context.\n     */\n    applyBaseEntry(context, options, inheritFromParent) {\n        // In some special cases, this can be a string, so ignore those.\n        if (typeof context === 'string') {\n            return context;\n        }\n        // Give priority to @base in the parent context\n        if (inheritFromParent && !('@base' in context) && options.parentContext\n            && typeof options.parentContext === 'object' && '@base' in options.parentContext) {\n            context['@base'] = options.parentContext['@base'];\n            if (options.parentContext['@__baseDocument']) {\n                context['@__baseDocument'] = true;\n            }\n        }\n        // Override the base IRI if provided.\n        if (options.baseIRI && !options.external) {\n            if (!('@base' in context)) {\n                // The context base is the document base\n                context['@base'] = options.baseIRI;\n                context['@__baseDocument'] = true;\n            }\n            else if (context['@base'] !== null && typeof context['@base'] === 'string'\n                && !Util_1.Util.isValidIri(context['@base'])) {\n                // The context base is relative to the document base\n                context['@base'] = (0, relative_to_absolute_iri_1.resolve)(context['@base'], options.parentContext && options.parentContext['@base'] || options.baseIRI);\n            }\n        }\n        return context;\n    }\n    /**\n     * Resolve relative context IRIs, or return full IRIs as-is.\n     * @param {string} contextIri A context IRI.\n     * @param {string} baseIRI A base IRI.\n     * @return {string} The normalized context IRI.\n     */\n    normalizeContextIri(contextIri, baseIRI) {\n        if (!Util_1.Util.isValidIri(contextIri)) {\n            try {\n                contextIri = (0, relative_to_absolute_iri_1.resolve)(contextIri, baseIRI);\n            }\n            catch (_a) {\n                throw new Error(`Invalid context IRI: ${contextIri}`);\n            }\n        }\n        // TODO: Temporary workaround for fixing schema.org CORS issues (https://github.com/schemaorg/schemaorg/issues/2578#issuecomment-652324465)\n        if (this.redirectSchemaOrgHttps && contextIri.startsWith('http://schema.org')) {\n            contextIri = 'https://schema.org/';\n        }\n        return contextIri;\n    }\n    /**\n     * Parse scoped contexts in the given context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {IParseOptions} options Parsing options.\n     * @return {IJsonLdContextNormalizedRaw} The mutated input context.\n     * @param {string[]} keys Optional set of keys from the context to parseInnerContexts of. If left undefined, all\n     * keys in the context will be iterated over.\n     */\n    async parseInnerContexts(context, options, keys) {\n        for (const key of (keys !== null && keys !== void 0 ? keys : Object.keys(context))) {\n            const value = context[key];\n            if (value && typeof value === 'object') {\n                if ('@context' in value && value['@context'] !== null && !options.ignoreScopedContexts) {\n                    // Simulate a processing based on the parent context to check if there are any (potential errors).\n                    // Honestly, I find it a bit weird to do this here, as the context may be unused,\n                    // and the final effective context may differ based on any other embedded/scoped contexts.\n                    // But hey, it's part of the spec, so we have no choice...\n                    // https://w3c.github.io/json-ld-api/#h-note-10\n                    if (this.validateContext) {\n                        try {\n                            const parentContext = Object.assign(Object.assign({}, context), { [key]: Object.assign({}, context[key]) });\n                            delete parentContext[key]['@context'];\n                            await this.parse(value['@context'], Object.assign(Object.assign({}, options), { external: false, parentContext, ignoreProtection: true, ignoreRemoteScopedContexts: true, ignoreScopedContexts: true }));\n                        }\n                        catch (e) {\n                            throw new ErrorCoded_1.ErrorCoded(e.message, ErrorCoded_1.ERROR_CODES.INVALID_SCOPED_CONTEXT);\n                        }\n                    }\n                    context[key] = Object.assign(Object.assign({}, value), { '@context': (await this.parse(value['@context'], Object.assign(Object.assign({}, options), { external: false, minimalProcessing: true, ignoreRemoteScopedContexts: true, parentContext: context })))\n                            .getContextRaw() });\n                }\n            }\n        }\n        return context;\n    }\n    async parse(context, options = {}, \n    // These options are only for internal use on recursive calls and should not be used by\n    // libraries consuming this function\n    internalOptions = {}) {\n        const { baseIRI, parentContext, external, processingMode = ContextParser.DEFAULT_PROCESSING_MODE, normalizeLanguageTags, ignoreProtection, minimalProcessing, } = options;\n        const remoteContexts = options.remoteContexts || {};\n        // Avoid remote context overflows\n        if (Object.keys(remoteContexts).length >= this.remoteContextsDepthLimit) {\n            throw new ErrorCoded_1.ErrorCoded('Detected an overflow in remote context inclusions: ' + Object.keys(remoteContexts), ErrorCoded_1.ERROR_CODES.CONTEXT_OVERFLOW);\n        }\n        if (context === null || context === undefined) {\n            // Don't allow context nullification and there are protected terms\n            if (!ignoreProtection && parentContext && Util_1.Util.hasProtectedTerms(parentContext)) {\n                throw new ErrorCoded_1.ErrorCoded('Illegal context nullification when terms are protected', ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_NULLIFICATION);\n            }\n            // Context that are explicitly set to null are empty.\n            return new JsonLdContextNormalized_1.JsonLdContextNormalized(this.applyBaseEntry({}, options, false));\n        }\n        else if (typeof context === 'string') {\n            const contextIri = this.normalizeContextIri(context, baseIRI);\n            const overriddenLoad = this.getOverriddenLoad(contextIri, options);\n            if (overriddenLoad) {\n                return new JsonLdContextNormalized_1.JsonLdContextNormalized(overriddenLoad);\n            }\n            const parsedStringContext = await this.parse(await this.load(contextIri), Object.assign(Object.assign({}, options), { baseIRI: contextIri, external: true, remoteContexts: Object.assign(Object.assign({}, remoteContexts), { [contextIri]: true }) }));\n            this.applyBaseEntry(parsedStringContext.getContextRaw(), options, true);\n            return parsedStringContext;\n        }\n        else if (Array.isArray(context)) {\n            // As a performance consideration, first load all external contexts in parallel.\n            const contextIris = [];\n            const contexts = await Promise.all(context.map((subContext, i) => {\n                if (typeof subContext === 'string') {\n                    const contextIri = this.normalizeContextIri(subContext, baseIRI);\n                    contextIris[i] = contextIri;\n                    const overriddenLoad = this.getOverriddenLoad(contextIri, options);\n                    if (overriddenLoad) {\n                        return overriddenLoad;\n                    }\n                    return this.load(contextIri);\n                }\n                else {\n                    return subContext;\n                }\n            }));\n            // Don't apply inheritance logic on minimal processing\n            if (minimalProcessing) {\n                return new JsonLdContextNormalized_1.JsonLdContextNormalized(contexts);\n            }\n            const reducedContexts = await contexts.reduce((accContextPromise, contextEntry, i) => accContextPromise\n                .then((accContext) => this.parse(contextEntry, Object.assign(Object.assign({}, options), { baseIRI: contextIris[i] || options.baseIRI, external: !!contextIris[i] || options.external, parentContext: accContext.getContextRaw(), remoteContexts: contextIris[i] ? Object.assign(Object.assign({}, remoteContexts), { [contextIris[i]]: true }) : remoteContexts }), \n            // @ts-expect-error: This third argument causes a type error because we have hidden it from consumers\n            {\n                skipValidation: i < contexts.length - 1,\n            })), Promise.resolve(new JsonLdContextNormalized_1.JsonLdContextNormalized(parentContext || {})));\n            // Override the base IRI if provided.\n            this.applyBaseEntry(reducedContexts.getContextRaw(), options, true);\n            return reducedContexts;\n        }\n        else if (typeof context === 'object') {\n            if ('@context' in context) {\n                return await this.parse(context['@context'], options);\n            }\n            // Make a deep clone of the given context, to avoid modifying it.\n            context = Object.assign({}, context);\n            // According to the JSON-LD spec, @base must be ignored from external contexts.\n            if (external) {\n                delete context['@base'];\n            }\n            // Override the base IRI if provided.\n            this.applyBaseEntry(context, options, true);\n            // Hashify container entries\n            // Do this before protected term validation as that influences term format\n            this.containersToHash(context);\n            // Don't perform any other modifications if only minimal processing is needed.\n            if (minimalProcessing) {\n                return new JsonLdContextNormalized_1.JsonLdContextNormalized(context);\n            }\n            // In JSON-LD 1.1, load @import'ed context prior to processing.\n            let importContext = {};\n            if ('@import' in context) {\n                if (processingMode >= 1.1) {\n                    // Only accept string values\n                    if (typeof context['@import'] !== 'string') {\n                        throw new ErrorCoded_1.ErrorCoded('An @import value must be a string, but got ' + typeof context['@import'], ErrorCoded_1.ERROR_CODES.INVALID_IMPORT_VALUE);\n                    }\n                    // Load context\n                    importContext = await this.loadImportContext(this.normalizeContextIri(context['@import'], baseIRI));\n                    delete context['@import'];\n                }\n                else {\n                    throw new ErrorCoded_1.ErrorCoded('Context importing is not supported in JSON-LD 1.0', ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_ENTRY);\n                }\n            }\n            this.applyScopedProtected(importContext, { processingMode }, JsonLdContextNormalized_1.defaultExpandOptions);\n            const newContext = Object.assign(importContext, context);\n            // Handle terms (before protection checks)\n            this.idifyReverseTerms(newContext);\n            this.normalize(newContext, { processingMode, normalizeLanguageTags });\n            this.applyScopedProtected(newContext, { processingMode }, JsonLdContextNormalized_1.defaultExpandOptions);\n            const keys = Object.keys(newContext);\n            const overlappingKeys = [];\n            if (typeof parentContext === 'object') {\n                // Merge different parts of the final context in order\n                for (const key in parentContext) {\n                    if (key in newContext) {\n                        overlappingKeys.push(key);\n                    }\n                    else {\n                        newContext[key] = parentContext[key];\n                    }\n                }\n            }\n            // Parse inner contexts with minimal processing\n            await this.parseInnerContexts(newContext, options, keys);\n            const newContextWrapped = new JsonLdContextNormalized_1.JsonLdContextNormalized(newContext);\n            // In JSON-LD 1.1, @vocab can be relative to @vocab in the parent context, or a compact IRI.\n            if ((newContext && newContext['@version'] || ContextParser.DEFAULT_PROCESSING_MODE) >= 1.1\n                && ((context['@vocab'] && typeof context['@vocab'] === 'string') || context['@vocab'] === '')) {\n                if (parentContext && '@vocab' in parentContext && context['@vocab'].indexOf(':') < 0) {\n                    newContext['@vocab'] = parentContext['@vocab'] + context['@vocab'];\n                }\n                else if (Util_1.Util.isCompactIri(context['@vocab']) || context['@vocab'] in newContext) {\n                    // @vocab is a compact IRI or refers exactly to a prefix\n                    newContext['@vocab'] = newContextWrapped.expandTerm(context['@vocab'], true);\n                }\n            }\n            this.expandPrefixedTerms(newContextWrapped, this.expandContentTypeToBase, keys);\n            // In JSON-LD 1.1, check if we are not redefining any protected keywords\n            if (!ignoreProtection && parentContext && processingMode >= 1.1) {\n                this.validateKeywordRedefinitions(parentContext, newContext, JsonLdContextNormalized_1.defaultExpandOptions, overlappingKeys);\n            }\n            if (this.validateContext && !internalOptions.skipValidation) {\n                this.validate(newContext, { processingMode });\n            }\n            return newContextWrapped;\n        }\n        else {\n            throw new ErrorCoded_1.ErrorCoded(`Tried parsing a context that is not a string, array or object, but got ${context}`, ErrorCoded_1.ERROR_CODES.INVALID_LOCAL_CONTEXT);\n        }\n    }\n    /**\n     * Fetch the given URL as a raw JSON-LD context.\n     * @param url An URL.\n     * @return A promise resolving to a raw JSON-LD context.\n     */\n    async load(url) {\n        // First try to retrieve the context from cache\n        const cached = this.documentCache[url];\n        if (cached) {\n            return cached;\n        }\n        // If not in cache, load it\n        let document;\n        try {\n            document = await this.documentLoader.load(url);\n        }\n        catch (e) {\n            throw new ErrorCoded_1.ErrorCoded(`Failed to load remote context ${url}: ${e.message}`, ErrorCoded_1.ERROR_CODES.LOADING_REMOTE_CONTEXT_FAILED);\n        }\n        // Validate the context\n        if (!('@context' in document)) {\n            throw new ErrorCoded_1.ErrorCoded(`Missing @context in remote context at ${url}`, ErrorCoded_1.ERROR_CODES.INVALID_REMOTE_CONTEXT);\n        }\n        return this.documentCache[url] = document['@context'];\n    }\n    /**\n     * Override the given context that may be loaded.\n     *\n     * This will check whether or not the url is recursively being loaded.\n     * @param url An URL.\n     * @param options Parsing options.\n     * @return An overridden context, or null.\n     *         Optionally an error can be thrown if a cyclic context is detected.\n     */\n    getOverriddenLoad(url, options) {\n        if (url in (options.remoteContexts || {})) {\n            if (options.ignoreRemoteScopedContexts) {\n                return url;\n            }\n            else {\n                throw new ErrorCoded_1.ErrorCoded('Detected a cyclic context inclusion of ' + url, ErrorCoded_1.ERROR_CODES.RECURSIVE_CONTEXT_INCLUSION);\n            }\n        }\n        return null;\n    }\n    /**\n     * Load an @import'ed context.\n     * @param importContextIri The full URI of an @import value.\n     */\n    async loadImportContext(importContextIri) {\n        // Load the context - and do a deep clone since we are about to mutate it\n        let importContext = await this.load(importContextIri);\n        // Require the context to be a non-array object\n        if (typeof importContext !== 'object' || Array.isArray(importContext)) {\n            throw new ErrorCoded_1.ErrorCoded('An imported context must be a single object: ' + importContextIri, ErrorCoded_1.ERROR_CODES.INVALID_REMOTE_CONTEXT);\n        }\n        // Error if the context contains another @import\n        if ('@import' in importContext) {\n            throw new ErrorCoded_1.ErrorCoded('An imported context can not import another context: ' + importContextIri, ErrorCoded_1.ERROR_CODES.INVALID_CONTEXT_ENTRY);\n        }\n        importContext = Object.assign({}, importContext);\n        // Containers have to be converted into hash values the same way as for the importing context\n        // Otherwise context validation will fail for container values\n        this.containersToHash(importContext);\n        return importContext;\n    }\n}\nContextParser.DEFAULT_PROCESSING_MODE = 1.1;\nexports.ContextParser = ContextParser;\n//# sourceMappingURL=ContextParser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERROR_CODES = exports.ErrorCoded = void 0;\n/**\n * An error that has a certain error code.\n *\n * The error code can be any string.\n * All standardized error codes are listed in {@link ERROR_CODES}.\n */\nclass ErrorCoded extends Error {\n    /* istanbul ignore next */\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nexports.ErrorCoded = ErrorCoded;\n/**\n * All standardized JSON-LD error codes.\n * @see https://w3c.github.io/json-ld-api/#dom-jsonlderrorcode\n */\n// tslint:disable:object-literal-sort-keys\nvar ERROR_CODES;\n(function (ERROR_CODES) {\n    ERROR_CODES[\"COLLIDING_KEYWORDS\"] = \"colliding keywords\";\n    ERROR_CODES[\"CONFLICTING_INDEXES\"] = \"conflicting indexes\";\n    ERROR_CODES[\"CYCLIC_IRI_MAPPING\"] = \"cyclic IRI mapping\";\n    ERROR_CODES[\"INVALID_ID_VALUE\"] = \"invalid @id value\";\n    ERROR_CODES[\"INVALID_INDEX_VALUE\"] = \"invalid @index value\";\n    ERROR_CODES[\"INVALID_NEST_VALUE\"] = \"invalid @nest value\";\n    ERROR_CODES[\"INVALID_PREFIX_VALUE\"] = \"invalid @prefix value\";\n    ERROR_CODES[\"INVALID_PROPAGATE_VALUE\"] = \"invalid @propagate value\";\n    ERROR_CODES[\"INVALID_REVERSE_VALUE\"] = \"invalid @reverse value\";\n    ERROR_CODES[\"INVALID_IMPORT_VALUE\"] = \"invalid @import value\";\n    ERROR_CODES[\"INVALID_VERSION_VALUE\"] = \"invalid @version value\";\n    ERROR_CODES[\"INVALID_BASE_IRI\"] = \"invalid base IRI\";\n    ERROR_CODES[\"INVALID_CONTAINER_MAPPING\"] = \"invalid container mapping\";\n    ERROR_CODES[\"INVALID_CONTEXT_ENTRY\"] = \"invalid context entry\";\n    ERROR_CODES[\"INVALID_CONTEXT_NULLIFICATION\"] = \"invalid context nullification\";\n    ERROR_CODES[\"INVALID_DEFAULT_LANGUAGE\"] = \"invalid default language\";\n    ERROR_CODES[\"INVALID_INCLUDED_VALUE\"] = \"invalid @included value\";\n    ERROR_CODES[\"INVALID_IRI_MAPPING\"] = \"invalid IRI mapping\";\n    ERROR_CODES[\"INVALID_JSON_LITERAL\"] = \"invalid JSON literal\";\n    ERROR_CODES[\"INVALID_KEYWORD_ALIAS\"] = \"invalid keyword alias\";\n    ERROR_CODES[\"INVALID_LANGUAGE_MAP_VALUE\"] = \"invalid language map value\";\n    ERROR_CODES[\"INVALID_LANGUAGE_MAPPING\"] = \"invalid language mapping\";\n    ERROR_CODES[\"INVALID_LANGUAGE_TAGGED_STRING\"] = \"invalid language-tagged string\";\n    ERROR_CODES[\"INVALID_LANGUAGE_TAGGED_VALUE\"] = \"invalid language-tagged value\";\n    ERROR_CODES[\"INVALID_LOCAL_CONTEXT\"] = \"invalid local context\";\n    ERROR_CODES[\"INVALID_REMOTE_CONTEXT\"] = \"invalid remote context\";\n    ERROR_CODES[\"INVALID_REVERSE_PROPERTY\"] = \"invalid reverse property\";\n    ERROR_CODES[\"INVALID_REVERSE_PROPERTY_MAP\"] = \"invalid reverse property map\";\n    ERROR_CODES[\"INVALID_REVERSE_PROPERTY_VALUE\"] = \"invalid reverse property value\";\n    ERROR_CODES[\"INVALID_SCOPED_CONTEXT\"] = \"invalid scoped context\";\n    ERROR_CODES[\"INVALID_SCRIPT_ELEMENT\"] = \"invalid script element\";\n    ERROR_CODES[\"INVALID_SET_OR_LIST_OBJECT\"] = \"invalid set or list object\";\n    ERROR_CODES[\"INVALID_TERM_DEFINITION\"] = \"invalid term definition\";\n    ERROR_CODES[\"INVALID_TYPE_MAPPING\"] = \"invalid type mapping\";\n    ERROR_CODES[\"INVALID_TYPE_VALUE\"] = \"invalid type value\";\n    ERROR_CODES[\"INVALID_TYPED_VALUE\"] = \"invalid typed value\";\n    ERROR_CODES[\"INVALID_VALUE_OBJECT\"] = \"invalid value object\";\n    ERROR_CODES[\"INVALID_VALUE_OBJECT_VALUE\"] = \"invalid value object value\";\n    ERROR_CODES[\"INVALID_VOCAB_MAPPING\"] = \"invalid vocab mapping\";\n    ERROR_CODES[\"IRI_CONFUSED_WITH_PREFIX\"] = \"IRI confused with prefix\";\n    ERROR_CODES[\"KEYWORD_REDEFINITION\"] = \"keyword redefinition\";\n    ERROR_CODES[\"LOADING_DOCUMENT_FAILED\"] = \"loading document failed\";\n    ERROR_CODES[\"LOADING_REMOTE_CONTEXT_FAILED\"] = \"loading remote context failed\";\n    ERROR_CODES[\"MULTIPLE_CONTEXT_LINK_HEADERS\"] = \"multiple context link headers\";\n    ERROR_CODES[\"PROCESSING_MODE_CONFLICT\"] = \"processing mode conflict\";\n    ERROR_CODES[\"PROTECTED_TERM_REDEFINITION\"] = \"protected term redefinition\";\n    ERROR_CODES[\"CONTEXT_OVERFLOW\"] = \"context overflow\";\n    ERROR_CODES[\"INVALID_BASE_DIRECTION\"] = \"invalid base direction\";\n    ERROR_CODES[\"RECURSIVE_CONTEXT_INCLUSION\"] = \"recursive context inclusion\";\n    ERROR_CODES[\"INVALID_STREAMING_KEY_ORDER\"] = \"invalid streaming key order\";\n    /**\n     * JSON-LD-star\n     */\n    ERROR_CODES[\"INVALID_EMBEDDED_NODE\"] = \"invalid embedded node\";\n    ERROR_CODES[\"INVALID_ANNOTATION\"] = \"invalid annotation\";\n})(ERROR_CODES = exports.ERROR_CODES || (exports.ERROR_CODES = {}));\n//# sourceMappingURL=ErrorCoded.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerPredicate = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst Util_1 = require(\"../Util\");\n/**\n * Interprets keys as predicates.\n * The most common case in JSON-LD processing.\n */\nclass EntryHandlerPredicate {\n    /**\n     * Handle the given predicate-object by either emitting it,\n     * or by placing it in the appropriate stack for later emission when no @graph and/or @id has been defined.\n     * @param {ParsingContext} parsingContext A parsing context.\n     * @param {Util} util A utility instance.\n     * @param {any[]} keys A stack of keys.\n     * @param {number} depth The current depth.\n     * @param {Term} predicate The predicate.\n     * @param {Term} object The object.\n     * @param {boolean} reverse If the property is reversed.\n     * @return {Promise<void>} A promise resolving when handling is done.\n     */\n    static async handlePredicateObject(parsingContext, util, keys, depth, predicate, object, reverse) {\n        const depthProperties = await util.getPropertiesDepth(keys, depth);\n        const depthOffsetGraph = await util.getDepthOffsetGraph(depth, keys);\n        const depthPropertiesGraph = depth - depthOffsetGraph;\n        const subjects = parsingContext.idStack[depthProperties];\n        if (subjects) {\n            // Emit directly if the @id was already defined\n            for (const subject of subjects) {\n                // Check if we're in a @graph context\n                const atGraph = depthOffsetGraph >= 0;\n                if (atGraph) {\n                    const graphs = parsingContext.idStack[depthPropertiesGraph - 1];\n                    if (graphs) {\n                        for (const graph of graphs) {\n                            // Emit our quad if graph @id is known\n                            if (reverse) {\n                                util.validateReverseSubject(object);\n                                parsingContext.emitQuad(depth, util.dataFactory.quad(object, predicate, subject, graph));\n                            }\n                            else {\n                                parsingContext.emitQuad(depth, util.dataFactory.quad(subject, predicate, object, graph));\n                            }\n                        }\n                    }\n                    else {\n                        // Buffer our triple if graph @id is not known yet.\n                        if (reverse) {\n                            util.validateReverseSubject(object);\n                            parsingContext.getUnidentifiedGraphBufferSafe(depthPropertiesGraph - 1).push({ subject: object, predicate, object: subject });\n                        }\n                        else {\n                            parsingContext.getUnidentifiedGraphBufferSafe(depthPropertiesGraph - 1)\n                                .push({ subject, predicate, object });\n                        }\n                    }\n                }\n                else {\n                    // Emit if no @graph was applicable\n                    const graph = await util.getGraphContainerValue(keys, depthProperties);\n                    if (reverse) {\n                        util.validateReverseSubject(object);\n                        parsingContext.emitQuad(depth, util.dataFactory.quad(object, predicate, subject, graph));\n                    }\n                    else {\n                        parsingContext.emitQuad(depth, util.dataFactory.quad(subject, predicate, object, graph));\n                    }\n                }\n            }\n        }\n        else {\n            // Buffer until our @id becomes known, or we go up the stack\n            if (reverse) {\n                util.validateReverseSubject(object);\n            }\n            parsingContext.getUnidentifiedValueBufferSafe(depthProperties).push({ predicate, object, reverse });\n        }\n    }\n    isPropertyHandler() {\n        return true;\n    }\n    isStackProcessor() {\n        return true;\n    }\n    async validate(parsingContext, util, keys, depth, inProperty) {\n        const key = keys[depth];\n        if (key) {\n            const context = await parsingContext.getContext(keys);\n            if (!parsingContext.jsonLiteralStack[depth] && await util.predicateToTerm(context, keys[depth])) {\n                // If this valid predicate is of type @json, mark it so in the stack so that no deeper handling of nodes occurs.\n                if (Util_1.Util.getContextValueType(context, key) === '@json') {\n                    parsingContext.jsonLiteralStack[depth + 1] = true;\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        return keys[depth];\n    }\n    async handle(parsingContext, util, key, keys, value, depth, testResult) {\n        const keyOriginal = keys[depth];\n        const context = await parsingContext.getContext(keys);\n        const predicate = await util.predicateToTerm(context, key);\n        if (predicate) {\n            const objects = await util.valueToTerm(context, key, value, depth, keys);\n            if (objects.length) {\n                for (let object of objects) {\n                    const reverse = Util_1.Util.isPropertyReverse(context, keyOriginal, await util.unaliasKeywordParent(keys, depth));\n                    if (value) {\n                        // Special case if our term was defined as an @list, but does not occur in an array,\n                        // In that case we just emit it as an RDF list with a single element.\n                        const listValueContainer = '@list' in Util_1.Util.getContextValueContainer(context, key);\n                        if (listValueContainer || value['@list']) {\n                            if (((listValueContainer && !Array.isArray(value) && !value['@list'])\n                                || (value['@list'] && !Array.isArray(value['@list'])))\n                                && object !== util.rdfNil) {\n                                const listPointer = util.dataFactory.blankNode();\n                                parsingContext.emitQuad(depth, util.dataFactory.quad(listPointer, util.rdfRest, util.rdfNil, util.getDefaultGraph()));\n                                parsingContext.emitQuad(depth, util.dataFactory.quad(listPointer, util.rdfFirst, object, util.getDefaultGraph()));\n                                object = listPointer;\n                            }\n                            // Lists are not allowed in @reverse'd properties\n                            if (reverse && !parsingContext.allowSubjectList) {\n                                throw new jsonld_context_parser_1.ErrorCoded(`Found illegal list value in subject position at ${key}`, jsonld_context_parser_1.ERROR_CODES.INVALID_REVERSE_PROPERTY_VALUE);\n                            }\n                        }\n                    }\n                    await EntryHandlerPredicate.handlePredicateObject(parsingContext, util, keys, depth, predicate, object, reverse);\n                }\n            }\n        }\n    }\n}\nexports.EntryHandlerPredicate = EntryHandlerPredicate;\n//# sourceMappingURL=EntryHandlerPredicate.js.map","class DefaultGraph {\n  equals (other) {\n    return !!other && other.termType === this.termType\n  }\n}\n\nDefaultGraph.prototype.termType = 'DefaultGraph'\nDefaultGraph.prototype.value = ''\n\nmodule.exports = DefaultGraph\n","const BlankNode = require('./BlankNode.js')\nconst DefaultGraph = require('./DefaultGraph.js')\nconst fromTermRaw = require('./fromTerm.js')\nconst Literal = require('./Literal.js')\nconst NamedNode = require('./NamedNode.js')\nconst Quad = require('./Quad.js')\nconst Variable = require('./Variable.js')\n\nfunction namedNode (value) {\n  return new NamedNode(value)\n}\n\nfunction blankNode (value) {\n  return new BlankNode(value)\n}\n\nfunction literal (value, languageOrDatatype) {\n  if (typeof languageOrDatatype === 'string') {\n    if (languageOrDatatype.indexOf(':') === -1) {\n      return new Literal(value, languageOrDatatype)\n    }\n\n    return new Literal(value, null, DataFactory.namedNode(languageOrDatatype))\n  }\n\n  return new Literal(value, null, languageOrDatatype)\n}\n\nfunction variable (value) {\n  return new Variable(value)\n}\n\nfunction defaultGraph () {\n  return DataFactory.defaultGraphInstance\n}\n\nfunction triple (subject, predicate, object) {\n  return DataFactory.quad(subject, predicate, object)\n}\n\nfunction quad (subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph || DataFactory.defaultGraphInstance)\n}\n\nfunction fromTerm (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nfunction fromQuad (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  literal,\n  variable,\n  defaultGraph,\n  triple,\n  quad,\n  fromTerm,\n  fromQuad,\n  defaultGraphInstance: new DefaultGraph()\n}\n\nmodule.exports = DataFactory\n","const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n","class NamedNode {\n  constructor (iri) {\n    this.value = iri\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nNamedNode.prototype.termType = 'NamedNode'\n\nmodule.exports = NamedNode\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultExpandOptions = exports.JsonLdContextNormalized = void 0;\nconst relative_to_absolute_iri_1 = require(\"relative-to-absolute-iri\");\nconst ErrorCoded_1 = require(\"./ErrorCoded\");\nconst Util_1 = require(\"./Util\");\n/**\n * A class exposing operations over a normalized JSON-LD context.\n */\nclass JsonLdContextNormalized {\n    constructor(contextRaw) {\n        this.contextRaw = contextRaw;\n    }\n    /**\n     * @return The raw inner context.\n     */\n    getContextRaw() {\n        return this.contextRaw;\n    }\n    /**\n     * Expand the term or prefix of the given term if it has one,\n     * otherwise return the term as-is.\n     *\n     * This will try to expand the IRI as much as possible.\n     *\n     * Iff in vocab-mode, then other references to other terms in the context can be used,\n     * such as to `myTerm`:\n     * ```\n     * {\n     *   \"myTerm\": \"http://example.org/myLongTerm\"\n     * }\n     * ```\n     *\n     * @param {string} term A term that is an URL or a prefixed URL.\n     * @param {boolean} expandVocab If the term is a predicate or type and should be expanded based on @vocab,\n     *                              otherwise it is considered a regular term that is expanded based on @base.\n     * @param {IExpandOptions} options Options that define the way how expansion must be done.\n     * @return {string} The expanded term, the term as-is, or null if it was explicitly disabled in the context.\n     * @throws If the term is aliased to an invalid value (not a string, IRI or keyword).\n     */\n    expandTerm(term, expandVocab, options = exports.defaultExpandOptions) {\n        const contextValue = this.contextRaw[term];\n        // Immediately return if the term was disabled in the context\n        if (contextValue === null || (contextValue && contextValue['@id'] === null)) {\n            return null;\n        }\n        // Check the @id\n        let validIriMapping = true;\n        if (contextValue && expandVocab) {\n            const value = Util_1.Util.getContextValueId(contextValue);\n            if (value && value !== term) {\n                if (typeof value !== 'string' || (!Util_1.Util.isValidIri(value) && !Util_1.Util.isValidKeyword(value))) {\n                    // Don't mark this mapping as invalid if we have an unknown keyword, but of the correct form.\n                    if (!Util_1.Util.isPotentialKeyword(value)) {\n                        validIriMapping = false;\n                    }\n                }\n                else {\n                    return value;\n                }\n            }\n        }\n        // Check if the term is prefixed\n        const prefix = Util_1.Util.getPrefix(term, this.contextRaw);\n        const vocab = this.contextRaw['@vocab'];\n        const vocabRelative = (!!vocab || vocab === '') && vocab.indexOf(':') < 0;\n        const base = this.contextRaw['@base'];\n        const potentialKeyword = Util_1.Util.isPotentialKeyword(term);\n        if (prefix) {\n            const contextPrefixValue = this.contextRaw[prefix];\n            const value = Util_1.Util.getContextValueId(contextPrefixValue);\n            if (value) {\n                if (typeof contextPrefixValue === 'string' || !options.allowPrefixForcing) {\n                    // If we have a simple term definition,\n                    // check the last character of the prefix to determine whether or not it is a prefix.\n                    // Validate that prefix ends with gen-delim character, unless @prefix is true\n                    if (!Util_1.Util.isSimpleTermDefinitionPrefix(value, options)) {\n                        // Treat the term as an absolute IRI\n                        return term;\n                    }\n                }\n                else {\n                    // If we have an expanded term definition, default to @prefix: false\n                    if (value[0] !== '_' && !potentialKeyword && !contextPrefixValue['@prefix'] && !(term in this.contextRaw)) {\n                        // Treat the term as an absolute IRI\n                        return term;\n                    }\n                }\n                return value + term.substr(prefix.length + 1);\n            }\n        }\n        else if (expandVocab && ((vocab || vocab === '') || (options.allowVocabRelativeToBase && (base && vocabRelative)))\n            && !potentialKeyword && !Util_1.Util.isCompactIri(term)) {\n            if (vocabRelative) {\n                if (options.allowVocabRelativeToBase) {\n                    return ((vocab || base) ? (0, relative_to_absolute_iri_1.resolve)(vocab, base) : '') + term;\n                }\n                else {\n                    throw new ErrorCoded_1.ErrorCoded(`Relative vocab expansion for term '${term}' with vocab '${vocab}' is not allowed.`, ErrorCoded_1.ERROR_CODES.INVALID_VOCAB_MAPPING);\n                }\n            }\n            else {\n                return vocab + term;\n            }\n        }\n        else if (!expandVocab && base && !potentialKeyword && !Util_1.Util.isCompactIri(term)) {\n            return (0, relative_to_absolute_iri_1.resolve)(term, base);\n        }\n        // Return the term as-is, unless we discovered an invalid IRI mapping for this term in the context earlier.\n        if (validIriMapping) {\n            return term;\n        }\n        else {\n            throw new ErrorCoded_1.ErrorCoded(`Invalid IRI mapping found for context entry '${term}': '${JSON.stringify(contextValue)}'`, ErrorCoded_1.ERROR_CODES.INVALID_IRI_MAPPING);\n        }\n    }\n    /**\n     * Compact the given term using @base, @vocab, an aliased term, or a prefixed term.\n     *\n     * This will try to compact the IRI as much as possible.\n     *\n     * @param {string} iri An IRI to compact.\n     * @param {boolean} vocab If the term is a predicate or type and should be compacted based on @vocab,\n     *                        otherwise it is considered a regular term that is compacted based on @base.\n     * @return {string} The compacted term or the IRI as-is.\n     */\n    compactIri(iri, vocab) {\n        // Try @vocab compacting\n        if (vocab && this.contextRaw['@vocab'] && iri.startsWith(this.contextRaw['@vocab'])) {\n            return iri.substr(this.contextRaw['@vocab'].length);\n        }\n        // Try @base compacting\n        if (!vocab && this.contextRaw['@base'] && iri.startsWith(this.contextRaw['@base'])) {\n            return iri.substr(this.contextRaw['@base'].length);\n        }\n        // Loop over all terms in the context\n        // This will try to prefix as short as possible.\n        // Once a fully compacted alias is found, return immediately, as we can not go any shorter.\n        const shortestPrefixing = { prefix: '', suffix: iri };\n        for (const key in this.contextRaw) {\n            const value = this.contextRaw[key];\n            if (value && !Util_1.Util.isPotentialKeyword(key)) {\n                const contextIri = Util_1.Util.getContextValueId(value);\n                if (iri.startsWith(contextIri)) {\n                    const suffix = iri.substr(contextIri.length);\n                    if (!suffix) {\n                        if (vocab) {\n                            // Immediately return on compacted alias\n                            return key;\n                        }\n                    }\n                    else if (suffix.length < shortestPrefixing.suffix.length) {\n                        // Overwrite the shortest prefix\n                        shortestPrefixing.prefix = key;\n                        shortestPrefixing.suffix = suffix;\n                    }\n                }\n            }\n        }\n        // Return the shortest prefix\n        if (shortestPrefixing.prefix) {\n            return shortestPrefixing.prefix + ':' + shortestPrefixing.suffix;\n        }\n        return iri;\n    }\n}\nexports.JsonLdContextNormalized = JsonLdContextNormalized;\nexports.defaultExpandOptions = {\n    allowPrefixForcing: true,\n    allowPrefixNonGenDelims: false,\n    allowVocabRelativeToBase: true,\n};\n//# sourceMappingURL=JsonLdContextNormalized.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntryHandlerKeywordUnknownFallback = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\n/**\n * A catch-all for keywords, that will either emit an error or ignore,\n * depending on whether or not the `strictValues` property is set.\n */\nclass EntryHandlerKeywordUnknownFallback {\n    isPropertyHandler() {\n        return false;\n    }\n    isStackProcessor() {\n        return true;\n    }\n    async validate(parsingContext, util, keys, depth, inProperty) {\n        const key = await util.unaliasKeyword(keys[depth], keys, depth);\n        if (jsonld_context_parser_1.Util.isPotentialKeyword(key)) {\n            // Don't emit anything inside free-floating lists\n            if (!inProperty) {\n                if (key === '@list') {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    async test(parsingContext, util, key, keys, depth) {\n        return jsonld_context_parser_1.Util.isPotentialKeyword(key);\n    }\n    async handle(parsingContext, util, key, keys, value, depth) {\n        const keywordType = EntryHandlerKeywordUnknownFallback.VALID_KEYWORDS_TYPES[key];\n        if (keywordType !== undefined) {\n            if (keywordType && typeof value !== keywordType.type) {\n                parsingContext.emitError(new jsonld_context_parser_1.ErrorCoded(`Invalid value type for '${key}' with value '${value}'`, keywordType.errorCode));\n            }\n        }\n        else if (parsingContext.strictValues) {\n            parsingContext.emitError(new Error(`Unknown keyword '${key}' with value '${value}'`));\n        }\n        parsingContext.emittedStack[depth] = false;\n    }\n}\nexports.EntryHandlerKeywordUnknownFallback = EntryHandlerKeywordUnknownFallback;\nEntryHandlerKeywordUnknownFallback.VALID_KEYWORDS_TYPES = {\n    '@index': { type: 'string', errorCode: jsonld_context_parser_1.ERROR_CODES.INVALID_INDEX_VALUE },\n    '@list': null,\n    '@reverse': { type: 'object', errorCode: jsonld_context_parser_1.ERROR_CODES.INVALID_REVERSE_VALUE },\n    '@set': null,\n    '@value': null,\n};\n//# sourceMappingURL=EntryHandlerKeywordUnknownFallback.js.map","(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  /* eslint-disable no-prototype-builtins */\n  var g =\n    (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof self !== 'undefined' && self) ||\n    // eslint-disable-next-line no-undef\n    (typeof global !== 'undefined' && global) ||\n    {};\n\n  var support = {\n    searchParams: 'URLSearchParams' in g,\n    iterable: 'Symbol' in g && 'iterator' in Symbol,\n    blob:\n      'FileReader' in g &&\n      'Blob' in g &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in g,\n    arrayBuffer: 'ArrayBuffer' in g\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n      throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        if (header.length != 2) {\n          throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n        }\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body._noBody) return\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);\n    var encoding = match ? match[1] : 'utf-8';\n    reader.readAsText(blob, encoding);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      /*\n        fetch-mock wraps the Response object in an ES6 Proxy to\n        provide useful test harness features such as flush. However, on\n        ES5 browsers without fetch or Proxy support pollyfills must be used;\n        the proxy-pollyfill is unable to proxy an attribute unless it exists\n        on the object before the Proxy is created. This change ensures\n        Response.bodyUsed exists on the instance, while maintaining the\n        semantic of setting Request.bodyUsed in the constructor before\n        _initBody is called.\n      */\n      // eslint-disable-next-line no-self-assign\n      this.bodyUsed = this.bodyUsed;\n      this._bodyInit = body;\n      if (!body) {\n        this._noBody = true;\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        var isConsumed = consumed(this);\n        if (isConsumed) {\n          return isConsumed\n        } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n          return Promise.resolve(\n            this._bodyArrayBuffer.buffer.slice(\n              this._bodyArrayBuffer.byteOffset,\n              this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n            )\n          )\n        } else {\n          return Promise.resolve(this._bodyArrayBuffer)\n        }\n      } else if (support.blob) {\n        return this.blob().then(readBlobAsArrayBuffer)\n      } else {\n        throw new Error('could not read as ArrayBuffer')\n      }\n    };\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    if (!(this instanceof Request)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal || (function () {\n      if ('AbortController' in g) {\n        var ctrl = new AbortController();\n        return ctrl.signal;\n      }\n    }());\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n\n    if (this.method === 'GET' || this.method === 'HEAD') {\n      if (options.cache === 'no-store' || options.cache === 'no-cache') {\n        // Search for a '_' parameter in the query string\n        var reParamSearch = /([?&])_=[^&]*/;\n        if (reParamSearch.test(this.url)) {\n          // If it already exists then set the value with the current time\n          this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime());\n        } else {\n          // Otherwise add a new '_' parameter to the end with the current time\n          var reQueryString = /\\?/;\n          this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime();\n        }\n      }\n    }\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n    // https://github.com/github/fetch/issues/748\n    // https://github.com/zloirock/core-js/issues/751\n    preProcessedHeaders\n      .split('\\r')\n      .map(function(header) {\n        return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n      })\n      .forEach(function(line) {\n        var parts = line.split(':');\n        var key = parts.shift().trim();\n        if (key) {\n          var value = parts.join(':').trim();\n          try {\n            headers.append(key, value);\n          } catch (error) {\n            console.warn('Response ' + error.message);\n          }\n        }\n      });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!(this instanceof Response)) {\n      throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n    }\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    if (this.status < 200 || this.status > 599) {\n      throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n    }\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText === undefined ? '' : '' + options.statusText;\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 200, statusText: ''});\n    response.ok = false;\n    response.status = 0;\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = g.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        // This check if specifically for when a user fetches a file locally from the file system\n        // Only if the status is out of a normal range\n        if (request.url.indexOf('file://') === 0 && (xhr.status < 200 || xhr.status > 599)) {\n          options.status = 200;\n        } else {\n          options.status = xhr.status;\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        setTimeout(function() {\n          resolve(new Response(body, options));\n        }, 0);\n      };\n\n      xhr.onerror = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request failed'));\n        }, 0);\n      };\n\n      xhr.ontimeout = function() {\n        setTimeout(function() {\n          reject(new TypeError('Network request timed out'));\n        }, 0);\n      };\n\n      xhr.onabort = function() {\n        setTimeout(function() {\n          reject(new exports.DOMException('Aborted', 'AbortError'));\n        }, 0);\n      };\n\n      function fixUrl(url) {\n        try {\n          return url === '' && g.location.href ? g.location.href : url\n        } catch (e) {\n          return url\n        }\n      }\n\n      xhr.open(request.method, fixUrl(request.url), true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr) {\n        if (support.blob) {\n          xhr.responseType = 'blob';\n        } else if (\n          support.arrayBuffer\n        ) {\n          xhr.responseType = 'arraybuffer';\n        }\n      }\n\n      if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n        var names = [];\n        Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n          names.push(normalizeName(name));\n          xhr.setRequestHeader(name, normalizeValue(init.headers[name]));\n        });\n        request.headers.forEach(function(value, name) {\n          if (names.indexOf(name) === -1) {\n            xhr.setRequestHeader(name, value);\n          }\n        });\n      } else {\n        request.headers.forEach(function(value, name) {\n          xhr.setRequestHeader(name, value);\n        });\n      }\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!g.fetch) {\n    g.fetch = fetch;\n    g.Headers = Headers;\n    g.Request = Request;\n    g.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(typeof self !== 'undefined' ? self : this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\n/**\n * A term that represents a variable.\n */\nclass Variable {\n    constructor(value) {\n        this.termType = 'Variable';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'Variable' && other.value === this.value;\n    }\n}\nexports.Variable = Variable;\n//# sourceMappingURL=Variable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataFactory = void 0;\nconst BlankNode_1 = require(\"./BlankNode\");\nconst DefaultGraph_1 = require(\"./DefaultGraph\");\nconst Literal_1 = require(\"./Literal\");\nconst NamedNode_1 = require(\"./NamedNode\");\nconst Quad_1 = require(\"./Quad\");\nconst Variable_1 = require(\"./Variable\");\nlet dataFactoryCounter = 0;\n/**\n * A factory for instantiating RDF terms and quads.\n */\nclass DataFactory {\n    constructor(options) {\n        this.blankNodeCounter = 0;\n        options = options || {};\n        this.blankNodePrefix = options.blankNodePrefix || `df_${dataFactoryCounter++}_`;\n    }\n    /**\n     * @param value The IRI for the named node.\n     * @return A new instance of NamedNode.\n     * @see NamedNode\n     */\n    namedNode(value) {\n        return new NamedNode_1.NamedNode(value);\n    }\n    /**\n     * @param value The optional blank node identifier.\n     * @return A new instance of BlankNode.\n     *         If the `value` parameter is undefined a new identifier\n     *         for the blank node is generated for each call.\n     * @see BlankNode\n     */\n    blankNode(value) {\n        return new BlankNode_1.BlankNode(value || `${this.blankNodePrefix}${this.blankNodeCounter++}`);\n    }\n    /**\n     * @param value              The literal value.\n     * @param languageOrDatatype The optional language or datatype.\n     *                           If `languageOrDatatype` is a NamedNode,\n     *                           then it is used for the value of `NamedNode.datatype`.\n     *                           Otherwise `languageOrDatatype` is used for the value\n     *                           of `NamedNode.language`.\n     * @return A new instance of Literal.\n     * @see Literal\n     */\n    literal(value, languageOrDatatype) {\n        return new Literal_1.Literal(value, languageOrDatatype);\n    }\n    /**\n     * This method is optional.\n     * @param value The variable name\n     * @return A new instance of Variable.\n     * @see Variable\n     */\n    variable(value) {\n        return new Variable_1.Variable(value);\n    }\n    /**\n     * @return An instance of DefaultGraph.\n     */\n    defaultGraph() {\n        return DefaultGraph_1.DefaultGraph.INSTANCE;\n    }\n    /**\n     * @param subject   The quad subject term.\n     * @param predicate The quad predicate term.\n     * @param object    The quad object term.\n     * @param graph     The quad graph term.\n     * @return A new instance of Quad.\n     * @see Quad\n     */\n    quad(subject, predicate, object, graph) {\n        return new Quad_1.Quad(subject, predicate, object, graph || this.defaultGraph());\n    }\n    /**\n     * Create a deep copy of the given term using this data factory.\n     * @param original An RDF term.\n     * @return A deep copy of the given term.\n     */\n    fromTerm(original) {\n        // TODO: remove nasty any casts when this TS bug has been fixed:\n        //  https://github.com/microsoft/TypeScript/issues/26933\n        switch (original.termType) {\n            case 'NamedNode':\n                return this.namedNode(original.value);\n            case 'BlankNode':\n                return this.blankNode(original.value);\n            case 'Literal':\n                if (original.language) {\n                    return this.literal(original.value, original.language);\n                }\n                if (!original.datatype.equals(Literal_1.Literal.XSD_STRING)) {\n                    return this.literal(original.value, this.fromTerm(original.datatype));\n                }\n                return this.literal(original.value);\n            case 'Variable':\n                return this.variable(original.value);\n            case 'DefaultGraph':\n                return this.defaultGraph();\n            case 'Quad':\n                return this.quad(this.fromTerm(original.subject), this.fromTerm(original.predicate), this.fromTerm(original.object), this.fromTerm(original.graph));\n        }\n    }\n    /**\n     * Create a deep copy of the given quad using this data factory.\n     * @param original An RDF quad.\n     * @return A deep copy of the given quad.\n     */\n    fromQuad(original) {\n        return this.fromTerm(original);\n    }\n    /**\n     * Reset the internal blank node counter.\n     */\n    resetBlankNodeCounter() {\n        this.blankNodeCounter = 0;\n    }\n}\nexports.DataFactory = DataFactory;\n//# sourceMappingURL=DataFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultGraph = void 0;\n/**\n * A singleton term instance that represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass DefaultGraph {\n    constructor() {\n        this.termType = 'DefaultGraph';\n        this.value = '';\n        // Private constructor\n    }\n    equals(other) {\n        return !!other && other.termType === 'DefaultGraph';\n    }\n}\nexports.DefaultGraph = DefaultGraph;\nDefaultGraph.INSTANCE = new DefaultGraph();\n//# sourceMappingURL=DefaultGraph.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParsingContext = void 0;\nconst jsonld_context_parser_1 = require(\"jsonld-context-parser\");\nconst ErrorCoded_1 = require(\"jsonld-context-parser/lib/ErrorCoded\");\nconst ContextTree_1 = require(\"./ContextTree\");\nconst JsonLdParser_1 = require(\"./JsonLdParser\");\n/**\n * Data holder for parsing information.\n */\nclass ParsingContext {\n    constructor(options) {\n        // Initialize settings\n        this.contextParser = new jsonld_context_parser_1.ContextParser({ documentLoader: options.documentLoader, skipValidation: options.skipContextValidation });\n        this.streamingProfile = !!options.streamingProfile;\n        this.baseIRI = options.baseIRI;\n        this.produceGeneralizedRdf = !!options.produceGeneralizedRdf;\n        this.allowSubjectList = !!options.allowSubjectList;\n        this.processingMode = options.processingMode || JsonLdParser_1.JsonLdParser.DEFAULT_PROCESSING_MODE;\n        this.strictValues = !!options.strictValues;\n        this.validateValueIndexes = !!options.validateValueIndexes;\n        this.defaultGraph = options.defaultGraph;\n        this.rdfDirection = options.rdfDirection;\n        this.normalizeLanguageTags = options.normalizeLanguageTags;\n        this.streamingProfileAllowOutOfOrderPlainType = options.streamingProfileAllowOutOfOrderPlainType;\n        this.topLevelProperties = false;\n        this.activeProcessingMode = parseFloat(this.processingMode);\n        // Initialize stacks\n        this.processingStack = [];\n        this.processingType = [];\n        this.emittedStack = [];\n        this.idStack = [];\n        this.graphStack = [];\n        this.graphContainerTermStack = [];\n        this.listPointerStack = [];\n        this.contextTree = new ContextTree_1.ContextTree();\n        this.literalStack = [];\n        this.validationStack = [];\n        this.unaliasedKeywordCacheStack = [];\n        this.jsonLiteralStack = [];\n        this.unidentifiedValuesBuffer = [];\n        this.unidentifiedGraphsBuffer = [];\n        this.pendingContainerFlushBuffers = [];\n        this.parser = options.parser;\n        if (options.context) {\n            this.rootContext = this.parseContext(options.context);\n            this.rootContext.then((context) => this.validateContext(context));\n        }\n        else {\n            this.rootContext = Promise.resolve(new jsonld_context_parser_1.JsonLdContextNormalized(this.baseIRI ? { '@base': this.baseIRI, '@__baseDocument': true } : {}));\n        }\n    }\n    /**\n     * Parse the given context with the configured options.\n     * @param {JsonLdContext} context A context to parse.\n     * @param {JsonLdContextNormalized} parentContext An optional parent context.\n     * @param {boolean} ignoreProtection If @protected term checks should be ignored.\n     * @return {Promise<JsonLdContextNormalized>} A promise resolving to the parsed context.\n     */\n    async parseContext(context, parentContext, ignoreProtection) {\n        return this.contextParser.parse(context, {\n            baseIRI: this.baseIRI,\n            ignoreProtection,\n            normalizeLanguageTags: this.normalizeLanguageTags,\n            parentContext,\n            processingMode: this.activeProcessingMode,\n        });\n    }\n    /**\n     * Check if the given context is valid.\n     * If not, an error will be thrown.\n     * @param {JsonLdContextNormalized} context A context.\n     */\n    validateContext(context) {\n        const activeVersion = context.getContextRaw()['@version'];\n        if (activeVersion) {\n            if (this.activeProcessingMode && activeVersion > this.activeProcessingMode) {\n                throw new ErrorCoded_1.ErrorCoded(`Unsupported JSON-LD version '${activeVersion}' under active processing mode ${this.activeProcessingMode}.`, ErrorCoded_1.ERROR_CODES.PROCESSING_MODE_CONFLICT);\n            }\n            else {\n                if (this.activeProcessingMode && activeVersion < this.activeProcessingMode) {\n                    throw new ErrorCoded_1.ErrorCoded(`Invalid JSON-LD version ${activeVersion} under active processing mode ${this.activeProcessingMode}.`, ErrorCoded_1.ERROR_CODES.INVALID_VERSION_VALUE);\n                }\n                this.activeProcessingMode = activeVersion;\n            }\n        }\n    }\n    /**\n     * Get the context at the given path.\n     * @param {keys} keys The path of keys to get the context at.\n     * @param {number} offset The path offset, defaults to 1.\n     * @return {Promise<JsonLdContextNormalized>} A promise resolving to a context.\n     */\n    async getContext(keys, offset = 1) {\n        const keysOriginal = keys;\n        // Ignore array keys at the end\n        while (typeof keys[keys.length - 1] === 'number') {\n            keys = keys.slice(0, keys.length - 1);\n        }\n        // Handle offset on keys\n        if (offset) {\n            keys = keys.slice(0, -offset);\n        }\n        // Determine the closest context\n        const contextData = await this.getContextPropagationAware(keys);\n        const context = contextData.context;\n        // Process property-scoped contexts (high-to-low)\n        let contextRaw = context.getContextRaw();\n        for (let i = contextData.depth; i < keysOriginal.length - offset; i++) {\n            const key = keysOriginal[i];\n            const contextKeyEntry = contextRaw[key];\n            if (contextKeyEntry && typeof contextKeyEntry === 'object' && '@context' in contextKeyEntry) {\n                const scopedContext = (await this.parseContext(contextKeyEntry, contextRaw, true)).getContextRaw();\n                const propagate = !(key in scopedContext)\n                    || scopedContext[key]['@context']['@propagate']; // Propagation is true by default\n                if (propagate !== false || i === keysOriginal.length - 1 - offset) {\n                    contextRaw = scopedContext;\n                    // Clean up final context\n                    delete contextRaw['@propagate'];\n                    contextRaw[key] = Object.assign({}, contextRaw[key]);\n                    if ('@id' in contextKeyEntry) {\n                        contextRaw[key]['@id'] = contextKeyEntry['@id'];\n                    }\n                    delete contextRaw[key]['@context'];\n                    if (propagate !== false) {\n                        this.contextTree.setContext(keysOriginal.slice(0, i + offset), Promise.resolve(new jsonld_context_parser_1.JsonLdContextNormalized(contextRaw)));\n                    }\n                }\n            }\n        }\n        return new jsonld_context_parser_1.JsonLdContextNormalized(contextRaw);\n    }\n    /**\n     * Get the context at the given path.\n     * Non-propagating contexts will be skipped,\n     * unless the context at that exact depth is retrieved.\n     *\n     * This ONLY takes into account context propagation logic,\n     * so this should usually not be called directly,\n     * call {@link #getContext} instead.\n     *\n     * @param keys The path of keys to get the context at.\n     * @return {Promise<{ context: JsonLdContextNormalized, depth: number }>} A context and its depth.\n     */\n    async getContextPropagationAware(keys) {\n        const originalDepth = keys.length;\n        let contextData = null;\n        let hasApplicablePropertyScopedContext;\n        do {\n            hasApplicablePropertyScopedContext = false;\n            if (contextData && '@__propagateFallback' in contextData.context.getContextRaw()) {\n                // If a propagation fallback context has been set,\n                // fallback to that context and retry for the same depth.\n                contextData.context = new jsonld_context_parser_1.JsonLdContextNormalized(contextData.context.getContextRaw()['@__propagateFallback']);\n            }\n            else {\n                if (contextData) {\n                    // If we had a previous iteration, jump to the parent of context depth.\n                    // We must do this because once we get here, last context had propagation disabled,\n                    // so we check its first parent instead.\n                    keys = keys.slice(0, contextData.depth - 1);\n                }\n                contextData = await this.contextTree.getContext(keys) || { context: await this.rootContext, depth: 0 };\n            }\n            // Allow non-propagating contexts to propagate one level deeper\n            // if it defines a property-scoped context that is applicable for the current key.\n            // @see https://w3c.github.io/json-ld-api/tests/toRdf-manifest#tc012\n            const lastKey = keys[keys.length - 1];\n            if (lastKey in contextData.context.getContextRaw()) {\n                const lastKeyValue = contextData.context.getContextRaw()[lastKey];\n                if (lastKeyValue && typeof lastKeyValue === 'object' && '@context' in lastKeyValue) {\n                    hasApplicablePropertyScopedContext = true;\n                }\n            }\n        } while (contextData.depth > 0 // Root context has a special case\n            && contextData.context.getContextRaw()['@propagate'] === false // Stop loop if propagation is true\n            && contextData.depth !== originalDepth // Stop loop if requesting exact depth of non-propagating\n            && !hasApplicablePropertyScopedContext);\n        // Special case for root context that does not allow propagation.\n        // Fallback to empty context in that case.\n        if (contextData.depth === 0\n            && contextData.context.getContextRaw()['@propagate'] === false\n            && contextData.depth !== originalDepth) {\n            contextData.context = new jsonld_context_parser_1.JsonLdContextNormalized({});\n        }\n        return contextData;\n    }\n    /**\n     * Start a new job for parsing the given value.\n     * @param {any[]} keys The stack of keys.\n     * @param value The value to parse.\n     * @param {number} depth The depth to parse at.\n     * @param {boolean} lastDepthCheck If the lastDepth check should be done for buffer draining.\n     * @return {Promise<void>} A promise resolving when the job is done.\n     */\n    async newOnValueJob(keys, value, depth, lastDepthCheck) {\n        await this.parser.newOnValueJob(keys, value, depth, lastDepthCheck);\n    }\n    /**\n     * Flush the pending container flush buffers\n     * @return {boolean} If any pending buffers were flushed.\n     */\n    async handlePendingContainerFlushBuffers() {\n        if (this.pendingContainerFlushBuffers.length > 0) {\n            for (const pendingFlushBuffer of this.pendingContainerFlushBuffers) {\n                await this.parser.flushBuffer(pendingFlushBuffer.depth, pendingFlushBuffer.keys);\n                this.parser.flushStacks(pendingFlushBuffer.depth);\n            }\n            this.pendingContainerFlushBuffers.splice(0, this.pendingContainerFlushBuffers.length);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Emit the given quad into the output stream.\n     * @param {number} depth The depth the quad was generated at.\n     * @param {Quad} quad A quad to emit.\n     */\n    emitQuad(depth, quad) {\n        if (depth === 1) {\n            this.topLevelProperties = true;\n        }\n        this.parser.push(quad);\n    }\n    /**\n     * Emit the given error into the output stream.\n     * @param {Error} error An error to emit.\n     */\n    emitError(error) {\n        this.parser.emit('error', error);\n    }\n    /**\n     * Emit the given context into the output stream under the 'context' event.\n     * @param {JsonLdContext} context A context to emit.\n     */\n    emitContext(context) {\n        this.parser.emit('context', context);\n    }\n    /**\n     * Safely get or create the depth value of {@link ParsingContext.unidentifiedValuesBuffer}.\n     * @param {number} depth A depth.\n     * @return {{predicate: Term; object: Term; reverse: boolean}[]} An element of\n     *                                                               {@link ParsingContext.unidentifiedValuesBuffer}.\n     */\n    getUnidentifiedValueBufferSafe(depth) {\n        let buffer = this.unidentifiedValuesBuffer[depth];\n        if (!buffer) {\n            buffer = [];\n            this.unidentifiedValuesBuffer[depth] = buffer;\n        }\n        return buffer;\n    }\n    /**\n     * Safely get or create the depth value of {@link ParsingContext.unidentifiedGraphsBuffer}.\n     * @param {number} depth A depth.\n     * @return {{predicate: Term; object: Term; reverse: boolean}[]} An element of\n     *                                                               {@link ParsingContext.unidentifiedGraphsBuffer}.\n     */\n    getUnidentifiedGraphBufferSafe(depth) {\n        let buffer = this.unidentifiedGraphsBuffer[depth];\n        if (!buffer) {\n            buffer = [];\n            this.unidentifiedGraphsBuffer[depth] = buffer;\n        }\n        return buffer;\n    }\n    /**\n     * @return IExpandOptions The expand options for the active processing mode.\n     */\n    getExpandOptions() {\n        return ParsingContext.EXPAND_OPTIONS[this.activeProcessingMode];\n    }\n    /**\n     * Shift the stack at the given offset to the given depth.\n     *\n     * This will override anything in the stack at `depth`,\n     * and this will remove anything at `depth + depthOffset`\n     *\n     * @param depth The target depth.\n     * @param depthOffset The origin depth, relative to `depth`.\n     */\n    shiftStack(depth, depthOffset) {\n        // Copy the id stack value up one level so that the next job can access the id.\n        const deeperIdStack = this.idStack[depth + depthOffset];\n        if (deeperIdStack) {\n            this.idStack[depth] = deeperIdStack;\n            this.emittedStack[depth] = true;\n            delete this.idStack[depth + depthOffset];\n        }\n        // Shorten key stack\n        if (this.pendingContainerFlushBuffers.length) {\n            for (const buffer of this.pendingContainerFlushBuffers) {\n                if (buffer.depth >= depth + depthOffset) {\n                    buffer.depth -= depthOffset;\n                    buffer.keys.splice(depth, depthOffset);\n                }\n            }\n        }\n        // Splice stacks\n        if (this.unidentifiedValuesBuffer[depth + depthOffset]) {\n            this.unidentifiedValuesBuffer[depth] = this.unidentifiedValuesBuffer[depth + depthOffset];\n            delete this.unidentifiedValuesBuffer[depth + depthOffset];\n        }\n        // TODO: also do the same for other stacks\n    }\n}\nexports.ParsingContext = ParsingContext;\nParsingContext.EXPAND_OPTIONS = {\n    1.0: {\n        allowPrefixForcing: false,\n        allowPrefixNonGenDelims: false,\n        allowVocabRelativeToBase: false,\n    },\n    1.1: {\n        allowPrefixForcing: true,\n        allowPrefixNonGenDelims: false,\n        allowVocabRelativeToBase: true,\n    },\n};\n//# sourceMappingURL=ParsingContext.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Util = void 0;\nclass Util {\n    /**\n     * Check if the given term is a valid compact IRI.\n     * Otherwise, it may be an IRI.\n     * @param {string} term A term.\n     * @return {boolean} If it is a compact IRI.\n     */\n    static isCompactIri(term) {\n        return term.indexOf(':') > 0 && !(term && term[0] === '#');\n    }\n    /**\n     * Get the prefix from the given term.\n     * @see https://json-ld.org/spec/latest/json-ld/#compact-iris\n     * @param {string} term A term that is an URL or a prefixed URL.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @return {string} The prefix or null.\n     */\n    static getPrefix(term, context) {\n        // Do not consider relative IRIs starting with a hash as compact IRIs\n        if (term && term[0] === '#') {\n            return null;\n        }\n        const separatorPos = term.indexOf(':');\n        if (separatorPos >= 0) {\n            // Suffix can not begin with two slashes\n            if (term.length > separatorPos + 1\n                && term.charAt(separatorPos + 1) === '/'\n                && term.charAt(separatorPos + 2) === '/') {\n                return null;\n            }\n            const prefix = term.substr(0, separatorPos);\n            // Prefix can not be an underscore (this is a blank node)\n            if (prefix === '_') {\n                return null;\n            }\n            // Prefix must match a term in the active context\n            if (context[prefix]) {\n                return prefix;\n            }\n        }\n        return null;\n    }\n    /**\n     * From a given context entry value, get the string value, or the @id field.\n     * @param contextValue A value for a term in a context.\n     * @return {string} The id value, or null.\n     */\n    static getContextValueId(contextValue) {\n        if (contextValue === null || typeof contextValue === 'string') {\n            return contextValue;\n        }\n        const id = contextValue['@id'];\n        return id ? id : null;\n    }\n    /**\n     * Check if the given simple term definition (string-based value of a context term)\n     * should be considered a prefix.\n     * @param value A simple term definition value.\n     * @param options Options that define the way how expansion must be done.\n     */\n    static isSimpleTermDefinitionPrefix(value, options) {\n        return !Util.isPotentialKeyword(value)\n            && (options.allowPrefixNonGenDelims || (typeof value === 'string' && (value[0] === '_' || Util.isPrefixIriEndingWithGenDelim(value))));\n    }\n    /**\n     * Check if the given keyword is of the keyword format \"@\"1*ALPHA.\n     * @param {string} keyword A potential keyword.\n     * @return {boolean} If the given keyword is of the keyword format.\n     */\n    static isPotentialKeyword(keyword) {\n        return typeof keyword === 'string' && Util.KEYWORD_REGEX.test(keyword);\n    }\n    /**\n     * Check if the given prefix ends with a gen-delim character.\n     * @param {string} prefixIri A prefix IRI.\n     * @return {boolean} If the given prefix IRI is valid.\n     */\n    static isPrefixIriEndingWithGenDelim(prefixIri) {\n        return Util.ENDS_WITH_GEN_DELIM.test(prefixIri);\n    }\n    /**\n     * Check if the given context value can be a prefix value.\n     * @param value A context value.\n     * @return {boolean} If it can be a prefix value.\n     */\n    static isPrefixValue(value) {\n        return value && (typeof value === 'string' || (value && typeof value === 'object'));\n    }\n    /**\n     * Check if the given IRI is valid.\n     * @param {string} iri A potential IRI.\n     * @return {boolean} If the given IRI is valid.\n     */\n    static isValidIri(iri) {\n        return Boolean(iri && Util.IRI_REGEX.test(iri));\n    }\n    /**\n     * Check if the given IRI is valid, this includes the possibility of being a relative IRI.\n     * @param {string} iri A potential IRI.\n     * @return {boolean} If the given IRI is valid.\n     */\n    static isValidIriWeak(iri) {\n        return !!iri && iri[0] !== ':' && Util.IRI_REGEX_WEAK.test(iri);\n    }\n    /**\n     * Check if the given keyword is a defined according to the JSON-LD specification.\n     * @param {string} keyword A potential keyword.\n     * @return {boolean} If the given keyword is valid.\n     */\n    static isValidKeyword(keyword) {\n        return Util.VALID_KEYWORDS[keyword];\n    }\n    /**\n     * Check if the given term is protected in the context.\n     * @param {IJsonLdContextNormalizedRaw} context A context.\n     * @param {string} key A context term.\n     * @return {boolean} If the given term has an @protected flag.\n     */\n    static isTermProtected(context, key) {\n        const value = context[key];\n        return !(typeof value === 'string') && value && value['@protected'];\n    }\n    /**\n     * Check if the given context has at least one protected term.\n     * @param context A context.\n     * @return If the context has a protected term.\n     */\n    static hasProtectedTerms(context) {\n        for (const key of Object.keys(context)) {\n            if (Util.isTermProtected(context, key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Check if the given key is an internal reserved keyword.\n     * @param key A context key.\n     */\n    static isReservedInternalKeyword(key) {\n        return key.startsWith('@__');\n    }\n    /**\n     * Check if two objects are deepEqual to on another.\n     * @param object1 The first object to test.\n     * @param object2 The second object to test.\n     */\n    static deepEqual(object1, object2) {\n        const objKeys1 = Object.keys(object1);\n        const objKeys2 = Object.keys(object2);\n        if (objKeys1.length !== objKeys2.length)\n            return false;\n        return objKeys1.every((key) => {\n            const value1 = object1[key];\n            const value2 = object2[key];\n            return (value1 === value2) || (value1 !== null &&\n                value2 !== null &&\n                typeof value1 === \"object\" &&\n                typeof value2 === \"object\" &&\n                this.deepEqual(value1, value2));\n        });\n    }\n    ;\n}\n// Regex for valid IRIs\nUtil.IRI_REGEX = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^ \"<>{}|\\\\\\[\\]`#]*(#[^#]*)?$/;\n// Weaker regex for valid IRIs, this includes relative IRIs\nUtil.IRI_REGEX_WEAK = /(?::[^:])|\\//;\n// Regex for keyword form\nUtil.KEYWORD_REGEX = /^@[a-z]+$/i;\n// Regex to see if an IRI ends with a gen-delim character (see RFC 3986)\nUtil.ENDS_WITH_GEN_DELIM = /[:/?#\\[\\]@]$/;\n// Regex for language tags\nUtil.REGEX_LANGUAGE_TAG = /^[a-zA-Z]+(-[a-zA-Z0-9]+)*$/;\n// Regex for base directions\nUtil.REGEX_DIRECTION_TAG = /^(ltr)|(rtl)$/;\n// All known valid JSON-LD keywords\n// @see https://www.w3.org/TR/json-ld11/#keywords\nUtil.VALID_KEYWORDS = {\n    '@annotation': true,\n    '@base': true,\n    '@container': true,\n    '@context': true,\n    '@direction': true,\n    '@graph': true,\n    '@id': true,\n    '@import': true,\n    '@included': true,\n    '@index': true,\n    '@json': true,\n    '@language': true,\n    '@list': true,\n    '@nest': true,\n    '@none': true,\n    '@prefix': true,\n    '@propagate': true,\n    '@protected': true,\n    '@reverse': true,\n    '@set': true,\n    '@type': true,\n    '@value': true,\n    '@version': true,\n    '@vocab': true,\n};\n// Keys in the contexts that will not be expanded based on the base IRI\nUtil.EXPAND_KEYS_BLACKLIST = [\n    '@base',\n    '@vocab',\n    '@language',\n    '@version',\n    '@direction',\n];\n// Keys in the contexts that may not be aliased from\nUtil.ALIAS_DOMAIN_BLACKLIST = [\n    '@container',\n    '@graph',\n    '@id',\n    '@index',\n    '@list',\n    '@nest',\n    '@none',\n    '@prefix',\n    '@reverse',\n    '@set',\n    '@type',\n    '@value',\n    '@version',\n];\n// Keys in the contexts that may not be aliased to\nUtil.ALIAS_RANGE_BLACKLIST = [\n    '@context',\n    '@preserve',\n];\n// All valid @container values\nUtil.CONTAINERS = [\n    '@list',\n    '@set',\n    '@index',\n    '@language',\n    '@graph',\n    '@id',\n    '@type',\n];\n// All valid @container values under processing mode 1.0\nUtil.CONTAINERS_1_0 = [\n    '@list',\n    '@set',\n    '@index',\n];\nexports.Util = Util;\n//# sourceMappingURL=Util.js.map"],"names":["Object","defineProperty","exports","value","EntryHandlerKeyword","constructor","keyword","this","isPropertyHandler","isStackProcessor","validate","parsingContext","util","keys","depth","inProperty","test","key","ContextTree","subTrees","getContext","length","head","tail","subTree","subContext","then","context","setContext","removeContext","path","fromTerm","original","termType","blankNode","defaultGraph","literal","language","namedNode","datatype","subject","predicate","object","graph","quad","variable","Error","module","Sink","ParserStream","Parser","options","super","ContainerHandlerIdentifier","canCombineWithGraph","handle","containers","id","emittedStack","idStack","keyUnaliased","getContainerKey","maybeId","resourceToTerm","dataFactory","ids","some","term","equals","push","handlePendingContainerFlushBuffers","Util","jsonld_context_parser_1","rdf_data_factory_1","EntryHandlerContainer_1","canonicalizeJson","DataFactory","rdfFirst","RDF","rdfRest","rdfNil","rdfType","rdfJson","getContextValue","contextKey","fallback","entry","getContextRaw","type","undefined","getContextValueContainer","getContextValueType","valueType","getContextValueLanguage","getContextValueDirection","isContextValueReverse","getContextValueIndex","isPropertyReverse","parentKey","isValidIri","iri","isPrefixArray","needle","haystack","i","validateValueIndexes","indexHashes","index","existingIndexValue","ErrorCoded","ERROR_CODES","CONFLICTING_INDEXES","valueToTerm","valueToJsonString","Array","isArray","getContextSelfOrPropertyScoped","parseContext","unaliasKeywords","val","valueLanguage","valueDirection","valueIndex","subValue","JSON","stringify","INVALID_VALUE_OBJECT","unaliasKeyword","INVALID_VALUE_OBJECT_VALUE","INVALID_INDEX_VALUE","INVALID_LANGUAGE_TAGGED_VALUE","ContextParser","validateLanguage","strictValues","INVALID_LANGUAGE_TAGGED_STRING","normalizeLanguageTags","activeProcessingMode","toLowerCase","validateDirection","rdfDirection","nullableTermToArray","createLanguageDirectionLiteral","INVALID_TYPED_VALUE","typeTerm","createVocabOrBaseTerm","JsonLdContextNormalized","INVALID_SET_OR_LIST_OBJECT","listValue","slice","graphContainerEntries","graphContainerTermStack","values","stringValueToTerm","Boolean","toString","XSD_BOOLEAN","XSD_INTEGER","XSD_DOUBLE","emitError","contextKeyEntry","predicateToTerm","expanded","expandTerm","getExpandOptions","produceGeneralizedRdf","substr","INVALID_IRI_MAPPING","startsWith","expandOptions","intToString","Number","isFinite","isInteger","toExponential","replace","defaultDatatype","contextType","contextLanguage","contextDirection","direction","valueNode","getDefaultGraph","emitQuad","disableCache","cachedUnaliasedKeyword","unaliasedKeywordCacheStack","isPotentialKeyword","unliased","isValidKeyword","unaliasKeywordParent","hash","newHash","isLiteral","literalStack","jsonLiteralStack","getDepthOffsetGraph","EntryHandlerContainer","getContainerHandler","isComplexGraphContainer","validateReverseSubject","INVALID_REVERSE_PROPERTY_VALUE","getGraphContainerValue","depthContainer","graphContainerIndex","getContainerGraphIndex","graphId","getPropertiesDepth","lastValidDepth","XSD","BlankNode","nextId","other","prototype","EntryHandlerKeywordId","EntryHandlerKeyword_1","INVALID_ID_VALUE","depthProperties","listHead","COLLIDING_KEYWORDS","Impl","import","input","output","assign","on","readable","emit","err","EntryHandlerInvalidFallback","EntryHandlerKeywordContext","streamingProfile","processingStack","processingType","INVALID_STREAMING_KEY_ORDER","parentContext","contextTree","emitContext","validateContext","EntryHandlerKeywordNest","INVALID_NEST_VALUE","EntryHandlerKeywordValue","unidentifiedValuesBuffer","unidentifiedGraphsBuffer","Quad","__createBinding","create","o","m","k","k2","enumerable","get","__exportStar","p","hasOwnProperty","call","EntryHandlerArrayValue","Util_1","listRootKey","listRootDepth","keyOption","handleListElement","newOnValueJob","shiftStack","valueOriginal","listRootKeys","listPointer","listPointerStack","newLinkTerm","linkTerm","listId","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","NamedNode","Variable","name","ContainerHandlerType","EntryHandlerPredicate_1","containerTypeType","entryHasIdentifier","keyOriginal","EntryHandlerPredicate","handlePredicateObject","Literal","stringDatatype","langStringDatatype","JsonLdParser","stream_1","EntryHandlerArrayValue_1","EntryHandlerInvalidFallback_1","EntryHandlerKeywordContext_1","EntryHandlerKeywordGraph_1","EntryHandlerKeywordId_1","EntryHandlerKeywordIncluded_1","EntryHandlerKeywordNest_1","EntryHandlerKeywordType_1","EntryHandlerKeywordUnknownFallback_1","EntryHandlerKeywordValue_1","ParsingContext_1","http_link_header_1","Transform","readableObjectMode","ParsingContext","parser","jsonParser","contextJobs","typeJobs","contextAwaitingJobs","lastDepth","lastKeys","lastOnValueJob","Promise","resolve","attachJsonParserListeners","mode","fromHttpResponse","baseIRI","mediaType","headers","endsWith","LOADING_DOCUMENT_FAILED","has","forEach","linkHeader","parse","link","MULTIPLE_CONTEXT_LINK_HEADERS","uri","ignoreMissingContextLinkHeader","contentType","match","exec","stream","PassThrough","error","parsed","data","pipe","_transform","chunk","encoding","callback","write","lastDepthCheck","flushStacks","splice","isBufferableContainerHandler","pendingContainerFlushBuffers","flushBuffer","handleKey","INVALID_REVERSE_PROPERTY_MAP","validationStack","property","Math","max","validationResult","validateKey","valid","entryHandler","ENTRY_HANDLERS","testResult","graphStack","subjects","valueBuffer","depthOffsetGraph","graphs","bufferedValue","reverse","subGraphBuffer","getUnidentifiedGraphBufferSafe","graphBuffer","topLevelProperties","onValue","stack","fill","map","v","isParsingContextInner","valueJobCb","jobs","job","executeBufferedJobs","onError","applicableTypeJobs","applicableTypeJobIds","typeJob","sortedTypeJobs","sort","job1","job2","sortedApplicableTypeJobIds","jobId","DEFAULT_PROCESSING_MODE","EntryHandlerKeywordIncluded","EntryHandlerKeywordGraph","EntryHandlerKeywordType","EntryHandlerKeywordUnknownFallback","C","LEFT_BRACE","RIGHT_BRACE","LEFT_BRACKET","RIGHT_BRACKET","COLON","COMMA","TRUE","FALSE","NULL","STRING","NUMBER","START","STOP","TRUE1","TRUE2","TRUE3","FALSE1","FALSE2","FALSE3","FALSE4","NULL1","NULL2","NULL3","NUMBER1","NUMBER3","STRING1","STRING2","STRING3","STRING4","STRING5","STRING6","VALUE","KEY","OBJECT","ARRAY","BACK_SLASH","charCodeAt","FORWARD_SLASH","BACKSPACE","FORM_FEED","NEWLINE","CARRIAGE_RETURN","TAB","STRING_BUFFER_SIZE","tState","string","stringBuffer","Buffer","alloc","stringBufferOffset","unicode","highSurrogate","state","bytes_remaining","bytes_in_sequence","temp_buffs","offset","toknam","code","l","proto","charError","buffer","String","fromCharCode","appendStringChar","char","appendStringBuf","buf","start","end","size","copy","n","onToken","j","byteLength","intVal","parseInt","result","isNaN","token","parseError","pop","parent","FetchDocumentLoader","ErrorCoded_1","relative_to_absolute_iri_1","fetcher","load","url","response","fetch","Headers","accept","ok","colonPos","indexOf","json","alternateUrl","rel","statusText","status","elements","element","INVALID_TYPE_VALUE","scopedContext","hasTypedScopedContext","typeContext","c","streamingProfileAllowOutOfOrderPlainType","NamedNode_1","languageOrDatatype","RDF_LANGUAGE_STRING","XSD_STRING","ContainerHandlerLanguage","INVALID_LANGUAGE_MAP_VALUE","ContainerHandlerIdentifier_1","ContainerHandlerIndex_1","ContainerHandlerLanguage_1","ContainerHandlerType_1","isSimpleGraphContainer","checkGraphContainer","containersSelf","containersParent","graphContainer","containerHandleName","CONTAINER_HANDLERS","handler","containerName","ContainerHandlerIndex","rdf","relativeIriProtocol","termCleanup","factory","quadCleanup","cleanup","transform","objectMode","entries","prefix","destroy","INVALID_INCLUDED_VALUE","valueUnliased","indexKey","indexPropertyRaw","INVALID_TERM_DEFINITION","indexProperty","indexValues","indexValue","depthOffset","FetchDocumentLoader_1","JsonLdContextNormalized_1","documentLoader","documentCache","skipValidation","expandContentTypeToBase","remoteContextsDepthLimit","redirectSchemaOrgHttps","strictRange","errorCode","REGEX_LANGUAGE_TAG","INVALID_BASE_DIRECTION","REGEX_DIRECTION_TAG","idifyReverseTerms","expandPrefixedTerms","contextRaw","EXPAND_KEYS_BLACKLIST","isReservedInternalKeyword","keyValue","ALIAS_DOMAIN_BLACKLIST","KEYWORD_REDEFINITION","ALIAS_RANGE_BLACKLIST","getContextValueId","INVALID_KEYWORD_ALIAS","isPrefixValue","changed","canAddIdEntry","newId","expandedType","normalize","processingMode","lowercase","containersToHash","newValue","containerValue","applyScopedProtected","isTermProtected","isSimpleTermDefinitionPrefix","validateKeywordRedefinitions","contextBefore","contextAfter","deepEqual","PROTECTED_TERM_REDEFINITION","INVALID_VOCAB_MAPPING","INVALID_BASE_IRI","INVALID_DEFAULT_LANGUAGE","INVALID_VERSION_VALUE","INVALID_CONTEXT_ENTRY","INVALID_PROPAGATE_VALUE","getPrefix","CYCLIC_IRI_MAPPING","isValidIriWeak","isCompactIri","objectKey","objectValue","INVALID_TYPE_MAPPING","INVALID_REVERSE_PROPERTY","CONTAINERS_1_0","join","INVALID_CONTAINER_MAPPING","CONTAINERS","INVALID_LANGUAGE_MAPPING","INVALID_PREFIX_VALUE","applyBaseEntry","inheritFromParent","external","normalizeContextIri","contextIri","_a","parseInnerContexts","ignoreScopedContexts","ignoreProtection","ignoreRemoteScopedContexts","e","message","INVALID_SCOPED_CONTEXT","minimalProcessing","internalOptions","remoteContexts","CONTEXT_OVERFLOW","hasProtectedTerms","INVALID_CONTEXT_NULLIFICATION","overriddenLoad","getOverriddenLoad","parsedStringContext","contextIris","contexts","all","reducedContexts","reduce","accContextPromise","contextEntry","accContext","importContext","INVALID_IMPORT_VALUE","loadImportContext","defaultExpandOptions","newContext","overlappingKeys","newContextWrapped","INVALID_LOCAL_CONTEXT","cached","document","LOADING_REMOTE_CONTEXT_FAILED","INVALID_REMOTE_CONTEXT","RECURSIVE_CONTEXT_INCLUSION","importContextIri","depthPropertiesGraph","atGraph","getUnidentifiedValueBufferSafe","objects","listValueContainer","allowSubjectList","DefaultGraph","fromTermRaw","defaultGraphInstance","triple","fromQuad","expandVocab","contextValue","validIriMapping","vocab","vocabRelative","base","potentialKeyword","contextPrefixValue","allowPrefixForcing","allowVocabRelativeToBase","compactIri","shortestPrefixing","suffix","allowPrefixNonGenDelims","keywordType","VALID_KEYWORDS_TYPES","INVALID_REVERSE_VALUE","self","g","globalThis","support","searchParams","iterable","Symbol","blob","Blob","formData","arrayBuffer","isDataView","obj","DataView","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","TypeError","normalizeValue","iteratorFor","items","iterator","next","shift","done","append","header","getOwnPropertyNames","consumed","body","_noBody","bodyUsed","reject","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","view","Uint8Array","chars","bufferClone","set","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","isConsumed","byteOffset","text","decode","oldValue","thisArg","methods","normalizeMethod","method","upcased","toUpperCase","Request","credentials","signal","ctrl","AbortController","referrer","cache","reParamSearch","Date","getTime","reQueryString","form","trim","split","bytes","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","console","warn","Response","bodyInit","RangeError","clone","redirectStatuses","redirect","location","DOMException","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","fixUrl","href","getAllResponseHeaders","responseURL","responseText","setTimeout","ontimeout","onabort","open","withCredentials","responseType","names","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","BlankNode_1","DefaultGraph_1","Literal_1","Quad_1","Variable_1","dataFactoryCounter","blankNodeCounter","blankNodePrefix","INSTANCE","resetBlankNodeCounter","ContextTree_1","JsonLdParser_1","contextParser","skipContextValidation","parseFloat","rootContext","activeVersion","PROCESSING_MODE_CONFLICT","keysOriginal","contextData","getContextPropagationAware","propagate","originalDepth","hasApplicablePropertyScopedContext","lastKey","lastKeyValue","pendingFlushBuffer","EXPAND_OPTIONS","deeperIdStack","separatorPos","charAt","isPrefixIriEndingWithGenDelim","KEYWORD_REGEX","prefixIri","ENDS_WITH_GEN_DELIM","IRI_REGEX","IRI_REGEX_WEAK","VALID_KEYWORDS","object1","object2","objKeys1","objKeys2","every","value1","value2"],"sourceRoot":""}